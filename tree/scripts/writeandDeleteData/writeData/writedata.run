connect root/TimechoDB@2021;

//一、创建BOOLEAN时间序列

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create timeseries root.wt01.PLAIN1 WITH DATATYPE=BOOLEAN,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;

--2. 查询时间序列和设备
show timeseries root.wt01.*;
show devices;

--3. 写入数据
insert into root.wt01(timestamp,PLAIN1) values(1,true);
insert into root.wt01(timestamp,PLAIN1) values(2,7);
<<SQLSTATE;
insert into root.wt01(timestamp,PLAIN1) values(3,9223372036854775807);
<<SQLSTATE;
insert into root.wt01(timestamp,PLAIN1) values(4,3.4028235E38);
<<SQLSTATE;
insert into root.wt01(timestamp,PLAIN1) values(5,3.4028235E300);
<<SQLSTATE;
insert into root.wt01(timestamp,PLAIN1) values(6,'v1');
<<SQLSTATE;
insert into root.wt01(timestamp,PLAIN1) values(7,1);
insert into root.wt01(timestamp,PLAIN1) values(8,0);

--4. 查询数据
select PLAIN1 from root.wt01;

--5. 清理环境
delete DATABASE root.**;
<<NULL;


//二、创建INT32时间序列

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create timeseries root.wt02.PLAIN1 WITH DATATYPE=INT32,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;

--2. 查询时间序列和设备
show timeseries;
show devices;

--3. 写入数据
insert into root.wt02(timestamp,PLAIN1) values(1,true);
<<SQLSTATE;
insert into root.wt02(timestamp,PLAIN1) values(2,7);
insert into root.wt02(timestamp,PLAIN1) values(3,9223372036854775807);
<<SQLSTATE;
insert into root.wt02(timestamp,PLAIN1) values(4,3.4028235E38);
<<SQLSTATE;
insert into root.wt02(timestamp,PLAIN1) values(5,3.4028235E300);
<<SQLSTATE;
insert into root.wt02(timestamp,PLAIN1) values(6,'v1');
<<SQLSTATE;
insert into root.wt02(timestamp,PLAIN1) values(7,0);
insert into root.wt02(timestamp,PLAIN1) values(8,-1);

--4. 查询数据
select PLAIN1 from root.wt02;

--5. 清理环境
delete DATABASE root.**;
<<NULL;


//三、创建INT64时间序列

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create timeseries root.wt03.PLAIN1 WITH DATATYPE=INT64,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;

--2. 查询时间序列和设备
show timeseries;
show devices;

--3. 写入数据
insert into root.wt03(timestamp,PLAIN1) values(1,true);
<<SQLSTATE;
insert into root.wt03(timestamp,PLAIN1) values(2,7);
insert into root.wt03(timestamp,PLAIN1) values(3,9223372036854775807);
insert into root.wt03(timestamp,PLAIN1) values(4,3.4028235E38);
<<SQLSTATE;
insert into root.wt03(timestamp,PLAIN1) values(5,3.4028235E300);
<<SQLSTATE;
insert into root.wt03(timestamp,PLAIN1) values(6,'v1');
<<SQLSTATE;
insert into root.wt03(timestamp,PLAIN1) values(7,1.12);
<<SQLSTATE;
insert into root.wt03(timestamp,PLAIN1) values(8,0);
insert into root.wt03(timestamp,PLAIN1) values(9,-2.05);
<<SQLSTATE;

--4. 查询数据
select PLAIN1 from root.wt03;

--5. 清理环境
delete DATABASE root.**;
<<NULL;


//四、创建FLOAT时间序列

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create timeseries root.wt04.PLAIN1 WITH DATATYPE=FLOAT,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;

--2. 查询时间序列和设备
show timeseries;
show devices;

--3. 写入数据
insert into root.wt04(timestamp,PLAIN1) values(1,true);
<<SQLSTATE;
insert into root.wt04(timestamp,PLAIN1) values(2,7);
insert into root.wt04(timestamp,PLAIN1) values(3,9223372036854775807);
insert into root.wt04(timestamp,PLAIN1) values(4,3.4028235E38);
insert into root.wt04(timestamp,PLAIN1) values(5,3.4028235E300);
<<SQLSTATE;
insert into root.wt04(timestamp,PLAIN1) values(6,'v1');
<<SQLSTATE;
insert into root.wt04(timestamp,PLAIN1) values(7,.1);
insert into root.wt04(timestamp,PLAIN1) values(8,1.2E3);
insert into root.wt04(timestamp,PLAIN1) values(9,-1.2E-3);

--4. 查询数据
select PLAIN1 from root.wt04;

--5. 清理环境
delete DATABASE root.**;
<<NULL;


//五、创建DOUBLE时间序列

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 测试操作
create timeseries root.wt05.PLAIN1 WITH DATATYPE=DOUBLE,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;

--2. 查询时间序列和设备
show timeseries;
show devices;

--3. 写入数据
insert into root.wt05(timestamp,PLAIN1) values(1,true);
<<SQLSTATE;
insert into root.wt05(timestamp,PLAIN1) values(2,7);
insert into root.wt05(timestamp,PLAIN1) values(3,9223372036854775807);
insert into root.wt05(timestamp,PLAIN1) values(4,3.4028235E38);
insert into root.wt05(timestamp,PLAIN1) values(5,3.4028235E300);
insert into root.wt05(timestamp,PLAIN1) values(6,'v1');
<<SQLSTATE;
insert into root.wt05(timestamp,PLAIN1) values(7,.1);
insert into root.wt05(timestamp,PLAIN1) values(8,1.2E3);
insert into root.wt05(timestamp,PLAIN1) values(9,-1.2E-3);

--4. 查询数据
select PLAIN1 from root.wt05;

--5. 清理环境
delete DATABASE root.**;
<<NULL;


//六、创建TEXT时间序列

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create timeseries root.wt06.PLAIN1 WITH DATATYPE=TEXT,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;

--2. 查询时间序列和设备
show timeseries;
show devices;

--3. 写入数据
insert into root.wt06(timestamp,PLAIN1) values(1,true);
insert into root.wt06(timestamp,PLAIN1) values(2,7);
insert into root.wt06(timestamp,PLAIN1) values(3,9223372036854775807);
insert into root.wt06(timestamp,PLAIN1) values(4,3.4028235E38);
insert into root.wt06(timestamp,PLAIN1) values(5,3.4028235E300);
insert into root.wt06(timestamp,PLAIN1) values(6,'v1');

--4. 查询数据
select PLAIN1 from root.wt06;

--5. 清理环境
delete DATABASE root.**;
<<NULL;


//七、对齐时间序列 - 添加aligned 关键字

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create aligned timeseries root.ln.d1(s1 INT32, s2 DOUBLE);

--2. 查询时间序列和设备
show timeseries;
show devices;

--3. 插入数据进行校验
insert into root.ln.d1(time, s1, s2) aligned values(1, 1, 1);
insert into root.ln.d1(time, s1, s2) aligned values(2, 2, 2), (3, 3, 3);

--4. 查询数据
select * from root.ln.d1;

--5. 清理环境
delete DATABASE root.**;
<<NULL;


//八、对齐时间序列 - 未添加aligned 关键字

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create aligned timeseries root.lp.d1(s1 INT32, s2 DOUBLE);

--2. 查询时间序列和设备
show timeseries;
show devices;

--3. 插入数据进行校验
insert into root.lp.d1(time, s1, s2) values(1, 1, 1);
insert into root.lp.d1(time, s1, s2) values(2, 2, 2), (3, 3, 3);

--4. 查询数据
select * from root.lp.d1;

--5. 清理环境
delete DATABASE root.**;
<<NULL;


//九、对齐时间序列 - 添加aligned 关键字 数据类型错误

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create aligned timeseries root.lt.d1(s1 INT32, s2 DOUBLE);

--2. 查询时间序列和设备
show timeseries;
show devices;

--3. 插入数据进行校验
insert into root.lt.d1(time, s1, s2) aligned values(1, '1', 1);
<<SQLSTATE;
insert into root.lt.d1(time, s1, s2) aligned values(2, 2, 2), (3, 3, '3');
<<SQLSTATE;

--4. 查询数据
select * from root.lt.d1;

--5. 清理环境
delete DATABASE root.**;
<<NULL;


//十、对齐时间序列 - 未添加aligned 关键字 数据类型错误

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create aligned timeseries root.lk.d1(s1 INT32, s2 DOUBLE);

--2. 查询时间序列和设备
show timeseries;
show devices;

--3. 插入数据进行校验
insert into root.lk.d1(time, s1, s2) values(1, 1, '1');
<<SQLSTATE;
insert into root.lk.d1(time, s1, s2) values(2, '2', 2), (3, 3, 3);
<<SQLSTATE;

--4. 查询数据
select * from root.lk.d1;

--5. 清理环境
delete DATABASE root.**;
<<NULL;


//十一、写入不同时间戳

--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create timeseries root.wt05.PLAIN1 WITH DATATYPE=DOUBLE,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;

--2. 写入数据
insert into root.wt05(timestamp,PLAIN1) values(2022-03-24 00:00:01,1);
insert into root.wt05(timestamp,PLAIN1) values(2022/03/24 00:00:02,2);
insert into root.wt05(timestamp,PLAIN1) values(2022.03.24 00:00:03,3);
insert into root.wt05(timestamp,PLAIN1) values(2022-03-24 00:00:04-08:00,4);
insert into root.wt05(timestamp,PLAIN1) values(2022-03-24 00:00:05.100-08:00,5);
insert into root.wt05(timestamp,PLAIN1) values(2022-Jun-24 00:00:05.100-08:00,5);
<<SQLSTATE;

--3. 查询数据
select * from root.wt05.**;

--4. 清理环境
delete DATABASE root.**;
<<NULL;


//十二、空值null写入
--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. 创建时间序列
create timeseries root.sg.d1.s1 INT32 encoding=RLE;
create timeseries root.sg.d1.s2 TEXT encoding=PLAIN;

--2.查看设备和时间序列
show timeseries;
show devices;

--3.插入数据
insert into root.sg.d1(time,s1,s2) values(1,1,"v1");
insert into root.sg.d1(time,s1,s2) values(2,null,"v2");
insert into root.sg.d1(time,s1,s2) values(3,3,null);

--4. 查询数据
select * from root.sg.d1;

--5.清理环境
delete DATABASE root.**;
<<NULL;

sleep 6000;


//十三、支持time被反引号包裹以及time在任意位置
--0. 清理环境
delete DATABASE root.**;
<<NULL;

--1. time支持使用反引号包裹进行插入数据
insert into root.sg.d1(time,s1,s2) values(1,1.1,1.2);
insert into root.sg.d1(`time`,s1,s2) values(2,2.1,2.2);
select * from root.sg.d1 align by device;

--2. 支持time在任意位置，执行插入数据
insert into root.sg.d1(s1,time,s2) values(3.1,3,3.2);
insert into root.sg.d1(s1,s2,time) values(4.1,4.2,4);
insert into root.sg.d1(`time`,s1,s2) values(5,5.1,5.2);
insert into root.sg.d1(s1,`time`,s2) values(6.1,6,6.2);
insert into root.sg.d1(s1,s2,`time`) values(7.1,7.2,7);
insert into root.sg.d1(`time`,s2,s1) values(8,8.1,8.2),(9,9.1,9.2),(10,10.1,10.2);
insert into root.sg.d1(s2,`time`,s1) values(11.2,11,11.1),(12.2,12,12.1),(13.2,13,13.1);
insert into root.sg.d1(s2,s1,`time`) values(14.2,14.1,14),(15.2,15.1,15),(16.2,16.1,16);
select * from root.sg.d1 align by device;
select count(*) from root.sg.d1;
insert into root.sg.d1(s1,s2) values(17,17);
select count(*) from root.sg.d1;

--3.插入时间，序列与对应的值不匹配，给出提示
insert into root.sg.d1(time) values(80);
<<SQLSTATE;
insert into root.sg.d1(time,time) values(90,90);
<<SQLSTATE;
insert into root.sg.d1(time,`time`) values(91,91);
<<SQLSTATE;
insert into root.sg.d1(time,s1,time) values(100,100,100);
<<SQLSTATE;
insert into root.sg.d1(s1,`time`,time) values(103,103,103);
<<SQLSTATE;
insert into root.sg.d1(s1,`time`,s2) values(104,104);
<<SQLSTATE;
insert into root.sg.d1(s1,s2) values(105,105,105);
<<SQLSTATE;
--insert into root.sg.d1(s1,`time`,s2) values(106,106.1,106.2);
--<<SQLSTATE;
--insert into root.sg.d1(s1,s2,`time`) values(107.1,107,107.2);
--<<SQLSTATE;

--4.清理环境
delete DATABASE root.**;
<<NULL;
