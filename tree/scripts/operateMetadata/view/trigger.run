connect root/TimechoDB@2021;
// tc1 create trigger on source series 
drop database root.db;<<null;
drop database root.view;<<null;
drop trigger triggerTest_orig_series;<<null;
drop database root.trig_db;<<null;
create database root.db;
create database root.view;
create timeseries root.db.d1.s0 with  datatype=DOUBLE,compressor=SNAPPY tags(s0_tag1=s0_tag1, s0_tag2=s0_tag2) attributes(s0_attr1=s0_attr1, s0_attr2=s0_attr2);
create timeseries root.db.d1.s1 with datatype=DOUBLE ,ENCODING=RLE ,compressor=LZ4 tags(s1_tag1=s1_tag1, s1_tag2=s1_tag2) attributes(s1_attr1=s1_attr1, s1_attr2=s1_attr2);
create timeseries root.db.d1.s2 with datatype=DOUBLE ,ENCODING=GORILLA ,compressor=GZIP tags(s2_tag1=s2_tag1, s2_tag2=s2_tag2) attributes(s2_attr1=s2_attr1, s2_attr2=s2_attr2);
create timeseries root.db.d1.s3 with datatype=DOUBLE ,ENCODING=GORILLA ,compressor=ZSTD tags(s3_tag1=s3_tag1, s3_tag2=s3_tag2) attributes(s3_attr1=s3_attr1, s3_attr2=s3_attr2);
create timeseries root.db.d1.s4 with datatype=DOUBLE compressor=ZSTD tags(s4_tag1=s4_tag1, s4_tag2=s4_tag2) attributes(s4_attr1=s4_attr1, s4_attr2=s4_attr2);
create timeseries root.db.d1.s5 with datatype=DOUBLE ,ENCODING=CHIMP ,compressor=UNCOMPRESSED tags(s5_tag1=s5_tag1, s5_tag2=s5_tag2) attributes(s5_attr1=s5_attr1, s5_attr2=s5_attr2);
create timeseries root.db.d1.s6 with datatype=DOUBLE ,compressor=LZ4 tags(s6_tag1=s6_tag1, s6_tag2=s6_tag2) attributes(s6_attr1=s6_attr1, s6_attr2=s6_attr2);
create timeseries root.db.d1.s7 with datatype=DOUBLE ,compressor=GZIP tags(s7_tag1=s7_tag1, s7_tag2=s7_tag2) attributes(s7_attr1=s7_attr1, s7_attr2=s7_attr2);
create timeseries root.db.d1.s8 with datatype=DOUBLE ,compressor=ZSTD tags(s8_tag1=s8_tag1, s8_tag2=s8_tag2) attributes(s8_attr1=s8_attr1, s8_attr2=s8_attr2);
create timeseries root.db.d1.s9 with datatype=DOUBLE ,compressor=ZSTD tags(s9_tag1=s9_tag1, s9_tag2=s9_tag2) attributes(s9_attr1=s9_attr1, s9_attr2=s9_attr2);
create timeseries root.db.d1.s10 with datatype=DOUBLE ,compressor=SNAPPY tags(s10_tag1=s10_tag1, s10_tag2=s10_tag2) attributes(s10_attr1=s10_attr1, s10_attr2=s10_attr2);
create timeseries root.db.d1.s11 with datatype=DOUBLE ,compressor=UNCOMPRESSED tags(s11_tag1=s11_tag1, s11_tag2=s11_tag2) attributes(s11_attr1=s11_attr1, s11_attr2=s11_attr2);
ALTER timeseries root.db.d1.s0 UPSERT ALIAS=s0Alias;
ALTER timeseries root.db.d1.s1 UPSERT ALIAS=s1Alias;
ALTER timeseries root.db.d1.s2 UPSERT ALIAS=s2Alias;
ALTER timeseries root.db.d1.s3 UPSERT ALIAS=s3Alias;
ALTER timeseries root.db.d1.s4 UPSERT ALIAS=s4Alias;
ALTER timeseries root.db.d1.s5 UPSERT ALIAS=s5Alias;
ALTER timeseries root.db.d1.s6 UPSERT ALIAS=s6Alias;
ALTER timeseries root.db.d1.s7 UPSERT ALIAS=s7Alias;
ALTER timeseries root.db.d1.s8 UPSERT ALIAS=s8Alias;
ALTER timeseries root.db.d1.s9 UPSERT ALIAS=s9Alias;
ALTER timeseries root.db.d1.s10 UPSERT ALIAS=s10Alias;
ALTER timeseries root.db.d1.s11 UPSERT ALIAS=s11Alias;

create view root.view.v1(${2}_${3}) as select * from root.db.*;

CREATE stateful TRIGGER triggerTest_orig_series
BEFORE INSERT
ON root.db.**
AS 'StatisticsUpdaterTrigger'
WITH (
    "ip" = "127.0.0.1",
    "port" = "6667"
);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(1,9,9,9,9,9,9,9,9,9,9,9,9);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(2,99,99,99,99,99,99,99,99,99,99,99,99);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(3,199,199,199,199,199,199,199,199,199,199,199,199);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(4,999,999,999,999,999,999,999,999,999,999,999,999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(5,1999,1999,1999,1999,1999,1999,1999,1999,1999,1999,1999,1999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(6,2999,2999,2999,2999,2999,2999,2999,2999,2999,2999,2999,2999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(11,9,9,9,9,9,9,9,9,9,9,9,9);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(12,99,99,99,99,99,99,99,99,99,99,99,99);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(13,199,199,199,199,199,199,199,199,199,199,199,199);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(14,4999,4999,4999,4999,4999,4999,4999,4999,4999,4999,4999,4999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(15,5999,5999,5999,5999,5999,5999,5999,5999,5999,5999,5999,5999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(16,6999,6999,6999,6999,6999,6999,6999,6999,6999,6999,6999,6999);
sleep 2000;
flush;
show devices root.trig_db.**;
// this sql expect test
select * from root.trig_db.**;
<<null;
drop database root.db;
drop database root.view;
drop trigger triggerTest_orig_series;
drop database root.trig_db;
// tc2 create trigger on view
drop database root.db;<<null;
drop database root.view;<<null;
drop trigger triggerTest_orig_series;<<null;
drop database root.trig_db;<<null;
create database root.db;
create database root.view;
create timeseries root.db.d1.s0 with  datatype=DOUBLE,compressor=SNAPPY tags(s0_tag1=s0_tag1, s0_tag2=s0_tag2) attributes(s0_attr1=s0_attr1, s0_attr2=s0_attr2);
create timeseries root.db.d1.s1 with datatype=DOUBLE ,ENCODING=RLE ,compressor=LZ4 tags(s1_tag1=s1_tag1, s1_tag2=s1_tag2) attributes(s1_attr1=s1_attr1, s1_attr2=s1_attr2);
create timeseries root.db.d1.s2 with datatype=DOUBLE ,ENCODING=GORILLA ,compressor=GZIP tags(s2_tag1=s2_tag1, s2_tag2=s2_tag2) attributes(s2_attr1=s2_attr1, s2_attr2=s2_attr2);
create timeseries root.db.d1.s3 with datatype=DOUBLE ,ENCODING=GORILLA ,compressor=ZSTD tags(s3_tag1=s3_tag1, s3_tag2=s3_tag2) attributes(s3_attr1=s3_attr1, s3_attr2=s3_attr2);
create timeseries root.db.d1.s4 with datatype=DOUBLE compressor=ZSTD tags(s4_tag1=s4_tag1, s4_tag2=s4_tag2) attributes(s4_attr1=s4_attr1, s4_attr2=s4_attr2);
create timeseries root.db.d1.s5 with datatype=DOUBLE ,ENCODING=CHIMP ,compressor=UNCOMPRESSED tags(s5_tag1=s5_tag1, s5_tag2=s5_tag2) attributes(s5_attr1=s5_attr1, s5_attr2=s5_attr2);
create timeseries root.db.d1.s6 with datatype=DOUBLE ,compressor=LZ4 tags(s6_tag1=s6_tag1, s6_tag2=s6_tag2) attributes(s6_attr1=s6_attr1, s6_attr2=s6_attr2);
create timeseries root.db.d1.s7 with datatype=DOUBLE ,compressor=GZIP tags(s7_tag1=s7_tag1, s7_tag2=s7_tag2) attributes(s7_attr1=s7_attr1, s7_attr2=s7_attr2);
create timeseries root.db.d1.s8 with datatype=DOUBLE ,compressor=ZSTD tags(s8_tag1=s8_tag1, s8_tag2=s8_tag2) attributes(s8_attr1=s8_attr1, s8_attr2=s8_attr2);
create timeseries root.db.d1.s9 with datatype=DOUBLE ,compressor=ZSTD tags(s9_tag1=s9_tag1, s9_tag2=s9_tag2) attributes(s9_attr1=s9_attr1, s9_attr2=s9_attr2);
create timeseries root.db.d1.s10 with datatype=DOUBLE ,compressor=SNAPPY tags(s10_tag1=s10_tag1, s10_tag2=s10_tag2) attributes(s10_attr1=s10_attr1, s10_attr2=s10_attr2);
create timeseries root.db.d1.s11 with datatype=DOUBLE ,compressor=UNCOMPRESSED tags(s11_tag1=s11_tag1, s11_tag2=s11_tag2) attributes(s11_attr1=s11_attr1, s11_attr2=s11_attr2);
ALTER timeseries root.db.d1.s0 UPSERT ALIAS=s0Alias;
ALTER timeseries root.db.d1.s1 UPSERT ALIAS=s1Alias;
ALTER timeseries root.db.d1.s2 UPSERT ALIAS=s2Alias;
ALTER timeseries root.db.d1.s3 UPSERT ALIAS=s3Alias;
ALTER timeseries root.db.d1.s4 UPSERT ALIAS=s4Alias;
ALTER timeseries root.db.d1.s5 UPSERT ALIAS=s5Alias;
ALTER timeseries root.db.d1.s6 UPSERT ALIAS=s6Alias;
ALTER timeseries root.db.d1.s7 UPSERT ALIAS=s7Alias;
ALTER timeseries root.db.d1.s8 UPSERT ALIAS=s8Alias;
ALTER timeseries root.db.d1.s9 UPSERT ALIAS=s9Alias;
ALTER timeseries root.db.d1.s10 UPSERT ALIAS=s10Alias;
ALTER timeseries root.db.d1.s11 UPSERT ALIAS=s11Alias;

create view root.view.v1(${2}_${3}) as select * from root.db.*;

CREATE stateful TRIGGER triggerTest_orig_series
BEFORE INSERT
ON root.view.**
AS 'StatisticsUpdaterTrigger'
WITH (
    "ip" = "127.0.0.1",
    "port" = "6667"
);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(1,9,9,9,9,9,9,9,9,9,9,9,9);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(2,99,99,99,99,99,99,99,99,99,99,99,99);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(3,199,199,199,199,199,199,199,199,199,199,199,199);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(4,999,999,999,999,999,999,999,999,999,999,999,999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(5,1999,1999,1999,1999,1999,1999,1999,1999,1999,1999,1999,1999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(6,2999,2999,2999,2999,2999,2999,2999,2999,2999,2999,2999,2999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(11,9,9,9,9,9,9,9,9,9,9,9,9);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(12,99,99,99,99,99,99,99,99,99,99,99,99);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(13,199,199,199,199,199,199,199,199,199,199,199,199);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(14,4999,4999,4999,4999,4999,4999,4999,4999,4999,4999,4999,4999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(15,5999,5999,5999,5999,5999,5999,5999,5999,5999,5999,5999,5999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(16,6999,6999,6999,6999,6999,6999,6999,6999,6999,6999,6999,6999);
insert into root.view.v1(time,d1_s0,d1_s1,d1_s2,d1_s3,d1_s4,d1_s5,d1_s6,d1_s7,d1_s8,d1_s9,d1_s10,d1_s11) values(17,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999);
insert into root.view.v1(time,d1_s0,d1_s1) values(18,119999,119999);
sleep 1000;
show devices root.trig_db.**;
select * from root.trig_db.**;

drop database root.db;
drop database root.view;
drop trigger triggerTest_orig_series;
drop database root.trig_db;<<null;
