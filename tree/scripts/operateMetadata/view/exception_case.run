connect root/TimechoDB@2021;
//tc1 embed view from view
drop database root.db;<<null;
create database root.db;
create timeseries root.db.t1.col1 with datatype=INT32;
create timeseries root.db.t1.col2 with datatype=INT64;
create timeseries root.db.t1.col3 with datatype=boolean;
create timeseries root.db.t1.col4 with datatype=text;
create timeseries root.db.t1.col5 with datatype=float;
create timeseries root.db.t1.col6 with datatype=double;
create timeseries root.db.t1.col7 with datatype=INT32;
create timeseries root.db.t1.col8 with datatype=INT32;
create timeseries root.db.t1.col9 with datatype=INT32;
create timeseries root.db.t1.col10 with datatype=INT32;
insert into root.db.t1(time,col1,col2,col3,col4,col5,col6,col7,col8,col9,col10)values(1,1,1,true,"hello",1.1,1.1,1,1,1,1);
insert into root.db.t1(time,col1,col2,col3,col4,col5,col6,col7,col8,col9,col10)values(2,2,2,false,"world",2.1,2.1,2,2,2,2);
create view root.db.view1(col1,col2,col3,col4,col5,col6,col7,col8,col9,col10) as root.db.t1(col1,col2,col3,col4,col5,col6,col7,col8,col9,col10);
show view;
create view root.db.v1_of_view1(col1,col3,col5,col7,col9) as root.db.view1(col1,col3,col5,col7,col9);
<<sqlstate;
//tc2 from view,ts
create view root.db.v1_of_view1(col1,col3) as root.db.view1.col1,root.db.t1.col3;
<<sqlstate;
//tc3 from ts,view
create view root.db.v1_of_view1(col1,col3) as root.db.t1.col1,root.db.view1.col3;
<<sqlstate;
select col1,col2,col3,col4,col5,col6,col7,col8,col9,col10 from root.db.t1;
select col1,col2,col3,col4,col5,col6,col7,col8,col9,col10 from root.db.view1;
//tc4 view col num more than from ts num
create view root.db.v1_of_view1(col1,col3) as root.db.t1.col1;
<<sqlstate;
create view root.db.v1_of_view1(col1,col3) as root.db.t1.col1,root.db.t1.col1,root.db.t1.col1;
<<sqlstate;
//tc5 from same ts
create view root.db.v1_of_view1(col1,col3) as root.db.t1.col1,root.db.t1.col1;
select col1,col3 from root.db.v1_of_view1;
drop database root.db;

//tc6 insert into  expression
drop database root.db;<<null;
create database root.db;
create timeseries root.db.t1.col1 with datatype=INT32;
create timeseries root.db.t1.col2 with datatype=INT64;
create timeseries root.db.t1.col3 with datatype=boolean;
create timeseries root.db.t1.col4 with datatype=text;
create timeseries root.db.t1.col5 with datatype=float;
create timeseries root.db.t1.col6 with datatype=double;
create timeseries root.db.t1.col7 with datatype=INT32;
create timeseries root.db.t1.col8 with datatype=INT32;
create timeseries root.db.t1.col9 with datatype=INT32;
create timeseries root.db.t1.col10 with datatype=INT32;
insert into root.db.t1(time,col1,col2,col3,col4,col5,col6,col7,col8,col9,col10)values(1,1,1,true,"hello",1.1,1.1,1,1,1,1);
insert into root.db.t1(time,col1,col2,col3,col4,col5,col6,col7,col8,col9,col10)values(2,2,2,false,"world",2.1,2.1,2,2,2,2);

create view root.db.view1.col1 as select col1+col7 from root.db.t1;
select col1 from root.db.view1;
insert into root.db.view1(time,col1) values(3,7);
<<sqlstate;
//tc7 alter view 
alter view root.db.view1.col1 as select col1+100 from root.db.t1;
show view root.db.view1.col1;
//tc8 insert into non-alias series
insert into root.db.view1(time,col1) values(3,7);
<<sqlstate;
//tc9 where
alter view root.db.view1.col1 as select col1 from root.db.t1 where col1>10;
<<sqlstate;
drop database root.db;

//tc10 create view ,count  group by level
create database root.db;
create timeseries root.db.t1.col1 with datatype=INT32;
create timeseries root.db.t1.col2 with datatype=INT64;
insert into root.db.t1(time,col1,col2) values(1,1,1);
insert into root.db.t1(time,col1,col2) values(2,2,2);
create view root.db.t1.view_col_1 as COUNT TIMESERIES root.** GROUP BY LEVEL=1;
<<sqlstate;
//tc11 select group by level
create view root.db.t1.view_col_1 as select count(col1) from root.db.t1 group by level=1;
<<sqlstate;
//tc12 col2/col1 ,delete timeseries col1
create view root.db.t1.view_col_1 as select col2/col1 from root.db.t1;
select view_col_1,col2,col1 from root.db.t1;
delete timeseries root.db.t1.col1;
show view;

select view_col_1,col2,col1 from root.db.t1;
<<sqlstate;
create timeseries root.db.t1.col1 with datatype=text;
show view;

create view root.db.t1.view_col_2 as select col1 from root.db.t1;
show view root.db.t1.view_col_2;
show view;

delete timeseries root.db.t1.col1;
create timeseries root.db.t1.col1 with datatype=INT32;
show view;
select view_col_1,view_col_2,col2,col1 from root.db.t1;
drop database root.db;
show view root.db.**;

//tc 13 limit 
create database root.db;
create timeseries root.db.t1.col1 with datatype=INT32;
create timeseries root.db.t1.col2 with datatype=INT64;
insert into root.db.t1(time,col1,col2) values(1,1,1);
insert into root.db.t1(time,col1,col2) values(2,2,2);
create view root.db.t1.view_col_1 as select col1 from root.db.t1 limit 1;
<<sqlstate;
//tc14 order by
create view root.db.t1.view_col_1 as select col1 from root.db.t1 order by col1 desc;
<<sqlstate;
//tc15 create aligned view
create aligned view root.db.t1.view_col_1 as select col1 from root.db.t1;
<<sqlstate;
drop database root.db;
//tc16 create view Specify the encoding
create database root.db;
create timeseries root.db.t1.col1 with datatype=INT32;
create timeseries root.db.t1.col2 with datatype=INT64;
insert into root.db.t1(time,col1,col2) values(1,1,1);
insert into root.db.t1(time,col1,col2) values(2,2,2);
create view root.db.t1.view_col_1 with datatype=DOUBLE ,ENCODING=RLE as select col1 from root.db.t1;
<<sqlstate;
drop database root.db;
// tc17 name same as ts
create database root.db;
create timeseries root.db.t1.col1 with datatype=INT32;
create timeseries root.db.t2.col1 with datatype=INT32;
create view root.db.t1.col1 as select * from root.db.t2;
<<sqlstate;
create view root.db.v1.col1 as select * from root.db.t_not_exist;
<<sqlstate;
create view root.db.v1.col1 as select * from root.db.t1,root.db.t_not_exist;
create view root.db.v1(col1,col2) as select col1 from root.db.t1,root.db.t_not_exist;
<<sqlstate;
insert into root.db.v1(time,col1) values(100,1000);
select * from root.db.v1,root.db.t1;
drop database root.db;

// tc 18 insert into alias series wrong datatype
drop database root.db;<<null;
drop database root.view;<<null;
create database root.db;
create database root.view;
create aligned timeseries root.db.d1(s01 INT32,s02 INT64);
create timeseries root.db.d2.s01 with datatype=INT32;
create timeseries root.db.d2.s02 with datatype=TEXT;
create view root.view.v1(col1,col2) as root.db.d1.s01,root.db.d2.s01 ;

insert into root.db.d1(time,s01,s02)aligned values(100,200,300);
insert into root.db.d1(time,s01,s02)aligned values(200,300,400);
insert into root.db.d2(time,s01,s02) values(300,300,400);
insert into root.db.d2(time,s01,s02) values(400,300,400);
insert into root.view.v1(time,col1) aligned values(300,"hello");
<<sqlstate;
insert into root.view.v1(time,col1) aligned values(300,2147483647);
select col1,col2 from root.view.v1;
flush;
select col1,col2 from root.view.v1;
select count(col1),count(col2) from root.view.v1;
drop database root.db;
drop database root.view;
// tc19 select int32+text
drop database root.db;<<null;
drop database root.view;<<null;
create database root.db;
create database root.view;
create aligned timeseries root.db.d1(s01 INT32,s02 INT64);
create timeseries root.db.d2.s01 with datatype=INT32;
create timeseries root.db.d2.s02 with datatype=TEXT;
create view root.view.v1(col1,col2) as select s01+s02 from root.db.**;
<<sqlstate;
show view root.view.v1;
drop database root.db;
drop database root.view;

// tc20 insert into non-alias series
drop database root.db;<<null;
drop database root.view;<<null;
create database root.db;
create database root.view;
create aligned timeseries root.db.d1(s01 INT32,s02 INT64);
create timeseries root.db.d2.s01 with datatype=INT32;
create timeseries root.db.d2.s02 with datatype=TEXT;
create view root.view.v1(col_sum) as select s01+s02 from root.db.d1;
show view root.view.v1.*;
insert into root.view.v1(time,col_sum) aligned values(300,2147483647);
<<sqlstate;
insert into root.view.v1(time,col_sum) aligned values(300,2147483647);
<<sqlstate;
select * from root.view.v1;
insert into root.db.d1(time,s01,s02)aligned values(100,200,300);
insert into root.db.d1(time,s01,s02)aligned values(200,300,400);
select * from root.view.v1;
drop database root.db;
drop database root.view;
// tc21 use template
drop schema template t1;<<null;
create schema template t1 (temperature FLOAT encoding=RLE, status BOOLEAN encoding=PLAIN compression=SNAPPY);
create database root.db;
create database root.view;
create aligned timeseries root.db.d1(s01 FLOAT,s02 BOOLEAN);
create timeseries root.db.d2.s01 with datatype=INT32;
create timeseries root.db.d2.s02 with datatype=TEXT;
insert into root.db.d1(time,s01,s02) aligned values(1,1.2,true);
insert into root.db.d1(time,s01,s02) aligned values(2,2.2,false);
set schema template t1 to root.view.v1;
create view using schema template on root.view.v1;
<<sqlstate;
create timeseries using schema template on root.view.v1;
show timeseries root.view.**;
alter view root.view.v1.temperature as select s01 from root.db.d1;
<<sqlstate;
create view root.view.v1(c1) as select temperature from root.view.v1;
<<sqlstate;
deactivate schema template t1 from root.view.v1;
show paths using schema template t1;
create view root.view.v1(c1) as select s01 from root.db.d1;
<<sqlstate;
unset schema template t1 from root.view.v1;
create view root.view.v1(c1) as select s01 from root.db.d1;
select * from root.view.v1;
set schema template t1 to root.view.v1;
<<sqlstate;
drop database root.db;
drop database root.view;
drop schema template t1;

// tc22 drop source series; insert into 自动创建

drop database root.db;<<null;

create database root.db;
create aligned timeseries root.db.d1(s01 INT32,s02 INT64,s03 boolean,s04 float,s05 double,s06 text);
create timeseries root.db.d2.s01 with datatype=INT32;
create timeseries root.db.d2.s02 with datatype=INT64;
create timeseries root.db.d2.s03 with datatype=boolean;
create timeseries root.db.d2.s04 with datatype=float;
create timeseries root.db.d2.s05 with datatype=double;
create timeseries root.db.d2.s06 with datatype=TEXT;
insert into root.db.d1(time,s01,s02,s03,s04,s05,s06) aligned values(1,1,1,true,1,1,"aligned 1");
insert into root.db.d1(time,s01,s02,s03,s04,s05,s06) aligned values(2,2,2,false,2,2,"aligned row 2");
insert into root.db.d1(time,s01,s02,s03,s04,s05,s06) aligned values(3,3,3,true,3,3,"aligned row 3");

insert into root.db.d2(time,s01,s02,s03,s04,s05,s06) values(1,1,1,true,1,1,"normal 1");
insert into root.db.d2(time,s01,s02,s03,s04,s05,s06) values(2,2,2,false,2,2,"normal row 2");
insert into root.db.d2(time,s01,s02,s03,s04,s05,s06) values(3,3,3,true,3,3,"normal row 3");
create view root.db.${2}(${2}_${3}) as select s01,s02,s03,s04,s05,s06 from root.db.*;
select d1_s04,d1_s01,d1_s03,d2_s02,d2_s05,d2_s06 from root.db.**;
delete timeseries root.db.d1.s01;
delete timeseries root.db.d2.s01;
show timeseries root.db.d1.*;
show timeseries root.db.d2.*;
insert into root.db.d1(time,d1_s01,s02,s03,s04,s05,s06) aligned values(4,4,4,true,4,4,"aligned s01 will be created auto or not");
<<sqlstate;
insert into root.db.d2(time,d2_s01,s02,s03,s04,s05,s06) values(4,4,4,true,4,4,"normal s01 will be created auto or not");
<<sqlstate;
insert into root.db.d1(time,s01,s02,s03,s04,s05,s06,d1_s01) aligned values(5000,4,4,true,4,4,"aligned s01 will be created auto or not",444);
<<sqlstate;
insert into root.db.d2(time,s01,s02,s03,s04,s05,s06,d2_s01) values(5000,4,4,true,4,4,"normal s01 will be created auto or not",444);
<<sqlstate;
show view root.db.**;
select s01,s02,s03,s04,s05,s06,d1_s01,d1_s02,d1_s03,d1_s04,d1_s05,d1_s06 from root.db.d1;
<<sqlstate;
select s01,s02,s03,s04,s05,s06,d2_s01,d2_s02,d2_s03,d2_s04,d2_s05,d2_s06 from root.db.d2;
<<sqlstate;
drop database root.db;

