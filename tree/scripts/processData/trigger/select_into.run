
connect root/TimechoDB@2021;
// 1 select into
-- 1.1 普通序列into 普通序列
-- 1.2 普通序列into aligned序列
drop database root.**;<<NULL;
sleep 2000;

drop trigger trig1;<<NULL;
drop trigger trig2;<<NULL;
drop trigger trig3;<<NULL;
drop trigger trig4;<<NULL;
drop trigger trig5;<<NULL;
drop trigger trig6;<<NULL;
CREATE DATABASE root.triggertest;<<NULL;

CREATE TIMESERIES root.triggertest.dev0.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
CREATE TIMESERIES root.triggertest.dev0.s_2 WITH DATATYPE=INT64, ENCODING=PLAIN;
CREATE TIMESERIES root.triggertest.dev0.s_3 WITH DATATYPE=float, ENCODING=RLE;
CREATE TIMESERIES root.triggertest.dev0.s_4 WITH DATATYPE=double, ENCODING=TS_2DIFF;
CREATE TIMESERIES root.triggertest.dev0.s_5 WITH DATATYPE=text, ENCODING=DICTIONARY;
CREATE TIMESERIES root.triggertest.dev0.s_6 WITH DATATYPE=boolean, ENCODING=PLAIN;

CREATE TIMESERIES root.triggertest.dev1.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
CREATE TIMESERIES root.triggertest.dev1.s_2 WITH DATATYPE=INT64, ENCODING=PLAIN;
CREATE TIMESERIES root.triggertest.dev1.s_3 WITH DATATYPE=float, ENCODING=RLE;
CREATE TIMESERIES root.triggertest.dev1.s_4 WITH DATATYPE=double, ENCODING=TS_2DIFF;
CREATE TIMESERIES root.triggertest.dev1.s_5 WITH DATATYPE=text, ENCODING=DICTIONARY;
CREATE TIMESERIES root.triggertest.dev1.s_6 WITH DATATYPE=boolean, ENCODING=PLAIN;


CREATE STATELESS TRIGGER trig1
AFTER INSERT
ON root.triggertest.dev1.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig1'
);

CREATE STATELESS TRIGGER trig2
AFTER INSERT
ON root.triggertest.dev1.s_2
AS 'TriggerTest'
WITH (
  'ts_type' = 'int64',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig2'
);
CREATE STATELESS TRIGGER trig3
AFTER INSERT
ON root.triggertest.dev1.s_3
AS 'TriggerTest'
WITH (
  'ts_type' = 'float',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig3'
);

CREATE STATELESS TRIGGER trig4
AFTER INSERT
ON root.triggertest.dev1.s_4
AS 'TriggerTest'
WITH (
  'ts_type' = 'double',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig4'
);

CREATE STATELESS TRIGGER trig5
AFTER INSERT
ON root.triggertest.dev1.s_5
AS 'TriggerTest'
WITH (
  'ts_type' = 'text',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig5'
);
CREATE STATELESS TRIGGER trig6
AFTER INSERT
ON root.triggertest.dev1.s_6
AS 'TriggerTest'
WITH (
  'ts_type' = 'boolean',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig6'
);

insert into root.triggertest.dev0(time,s_1,s_2) values(1,100,200),(2,300,400),(3,500,600),(4,700,800),(5,900,1000);
insert into root.triggertest.dev0(time,s_1,s_2) values(11,1100,1200),(12,1300,1400),(13,1500,1600),(14,1700,1800),(15,1900,2000);
insert into root.triggertest.dev0(time,s_1,s_2) values(111,11100,11200),(112,11300,11400),(113,11500,11600),(114,11700,11800),(115,11900,21000);
flush;

//-- select into
//select s_1,s_2,s_3,s_4,s_5,s_6 into root.triggertest.dev1(s_1,s_2,s_3,s_4,s_5,s_6) from root.triggertest.dev0;
select s_1,s_2,s_3,s_4,s_5,s_6 into root.triggertest.dev1(::) from root.triggertest.dev0;

sleep 10000;
-- 15
select s_1,s_2,s_3,s_4,s_5,s_6 from root.triggertest.dev0;
-- 15
select s_1,s_2,s_3,s_4,s_5,s_6 from root.triggertest.dev1;
-- 26
select count(*) from root.target.alerting;

drop database root.**;<<NULL;
drop trigger trig1;
drop trigger trig2;
drop trigger trig3;
drop trigger trig4;
drop trigger trig5;
drop trigger trig6;
sleep 2000;

-- 1.2
delete timeseries root.**;<<NULL;
CREATE DATABASE root.triggertest;<<NULL;
CREATE TIMESERIES root.triggertest.dev0.s_1 WITH DATATYPE=INT32, ENCODING=GORILLA;
CREATE TIMESERIES root.triggertest.dev0.s_2 WITH DATATYPE=INT64, ENCODING=PLAIN;
CREATE TIMESERIES root.triggertest.dev0.s_3 WITH DATATYPE=float, ENCODING=RLE;
CREATE TIMESERIES root.triggertest.dev0.s_4 WITH DATATYPE=double, ENCODING=TS_2DIFF;
CREATE TIMESERIES root.triggertest.dev0.s_5 WITH DATATYPE=text, ENCODING=DICTIONARY;
CREATE TIMESERIES root.triggertest.dev0.s_6 WITH DATATYPE=boolean, ENCODING=PLAIN;

CREATE ALIGNED TIMESERIES root.triggertest.dev1(s_1 INT32 encoding=GORILLA compressor=SNAPPY, s_2 INT64 encoding=PLAIN compressor=SNAPPY,s_3 float encoding=RLE compressor=SNAPPY, s_4 double encoding=TS_2DIFF compressor=SNAPPY,s_5 text encoding=DICTIONARY compressor=SNAPPY, s_6 boolean encoding=PLAIN compressor=SNAPPY);

CREATE STATELESS TRIGGER trig1
AFTER INSERT
ON root.triggertest.dev1.s_1
AS 'TriggerTest'
WITH (
  'ts_type' = 'int32',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig1'
);

CREATE STATELESS TRIGGER trig2
AFTER INSERT
ON root.triggertest.dev1.s_2
AS 'TriggerTest'
WITH (
  'ts_type' = 'int64',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig2'
);
CREATE STATELESS TRIGGER trig3
AFTER INSERT
ON root.triggertest.dev1.s_3
AS 'TriggerTest'
WITH (
  'ts_type' = 'float',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig3'
);

CREATE STATELESS TRIGGER trig4
AFTER INSERT
ON root.triggertest.dev1.s_4
AS 'TriggerTest'
WITH (
  'ts_type' = 'double',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig4'
);

CREATE STATELESS TRIGGER trig5
AFTER INSERT
ON root.triggertest.dev1.s_5
AS 'TriggerTest'
WITH (
  'ts_type' = 'text',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig5'
);
CREATE STATELESS TRIGGER trig6
AFTER INSERT
ON root.triggertest.dev1.s_6
AS 'TriggerTest'
WITH (
  'ts_type' = 'boolean',
  'remote_ip' = '127.0.0.1',
  'trig_name'='trig6'
);

insert into root.triggertest.dev0(time,s_1,s_2) values(1,100,200),(2,300,400),(3,500,600),(4,700,800),(5,900,1000);
insert into root.triggertest.dev0(time,s_1,s_2) values(11,1100,1200),(12,1300,1400),(13,1500,1600),(14,1700,1800),(15,1900,2000);
insert into root.triggertest.dev0(time,s_1,s_2) values(111,11100,11200),(112,11300,11400),(113,11500,11600),(114,11700,11800),(115,11900,21000);
flush;
//select s_1,s_2,s_3,s_4,s_5,s_6 into aligned root.triggertest.dev1(s_1,s_2,s_3,s_4,s_5,s_6) from root.triggertest.dev0;
select s_1,s_2,s_3,s_4,s_5,s_6 into aligned root.triggertest.dev1(::) from root.triggertest.dev0;
sleep 20000;
-- 15
select s_1,s_2,s_3,s_4,s_5,s_6 from root.triggertest.dev0;
-- 15
select s_1,s_2,s_3,s_4,s_5,s_6 from root.triggertest.dev1;
-- 26
select count(*) from root.target.alerting;

drop database root.**;<<NULL;
drop trigger trig1;
drop trigger trig2;
drop trigger trig3;
drop trigger trig4;
drop trigger trig5;
drop trigger trig6;


