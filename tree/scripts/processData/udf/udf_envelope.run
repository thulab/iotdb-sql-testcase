//UDF：包络解调分析功能

connect root/TimechoDB@2021;

--0.清理数据库
delete database root.**;
<<NULL;
drop function envelope;
<<NULL;

--1.准备数据：分别创建数据库，创建时间序列，插入数据
create database root.sg;
create timeseries root.sg.d1.s1 float;
create timeseries root.sg.d1.s2 double;
create timeseries root.sg.d1.s3 int32;
create timeseries root.sg.d1.s4 int64;
create timeseries root.sg.d2.s1 boolean;
create timeseries root.sg.d2.s2 text;

show timeseries root.sg.**;

insert into root.sg.d1(time,s1,s2,s3,s4) values(0,1.001,1.0015,111,10);
insert into root.sg.d1(time,s1,s2,s3,s4) values(1,1.011,2.0015,null,10);
insert into root.sg.d1(time,s1,s2,s3,s4) values(20,2.211,1.1708,5,23);
insert into root.sg.d1(time,s1,s2,s3,s4) values(30,2.2222,1.919,100,null);
insert into root.sg.d1(time,s1,s2,s3,s4) values(40,2.315,2.0101,50,66);
insert into root.sg.d1(time,s1,s2,s3,s4) values(50,1.056,2.1011,18,23);
insert into root.sg.d1(time,s1,s2,s3,s4) values(60,1.717,1.7108,37,78);
insert into root.sg.d1(time,s1,s2,s3,s4) values(70,2.311,1.0919,33,87);
insert into root.sg.d1(time,s1,s2,s3,s4) values(80,2.3220,2.0205,1,111);
insert into root.sg.d1(time,s1,s2,s3,s4) values(90,1.999,2.1079,null,null);
insert into root.sg.d1(time,s1,s2,s3,s4) values(100,2.202,2.1451,150,55);
insert into root.sg.d1(time,s1,s2,s3,s4) values(200,3.02,null,200,99);
insert into root.sg.d1(time,s1,s2,s3,s4) values(500,2.112,3.123,101,69);
insert into root.sg.d2(time,s1,s2) values(10,false,'001'),(20,true,'002');

--2.注册包络解调函数envelope
create function envelope AS 'org.apache.iotdb.library.frequency.UDFEnvelopeAnalysis';
show functions;

--3.执行查询
select * from root.sg.**;

--3.1 frequence（当此参数不填时，会根据业务数据进行推断推断）和amplification均不填值
select envelope(sg.d1.s1) from root;
select d1.s1, envelope(d1.s1) from root.sg;
select s2, envelope(s2) from root.sg.d1;
select s3, s4, envelope(s3+s4) from root.sg.d1 align by device;
select envelope(*) from root.sg.d1 align by device;
select envelope(s1),envelope(s2),envelope(s3),envelope(s4) from root.sg.d1 align by device;
select envelope(sin(s3)+abs(s2)-floor(s4)/2*tan(s1)) from root.sg.d1;
select last_value(s3), envelope(last_value(s3)) from root.sg.d1;

--3.2 envelope路径检查
select envelope() from root.sg.d1;
<<SQLSTATE;
select envelope(root.sg.d1.s2);
<<SQLSTATE;
select s1,s2,envelope(s1,s2,'frequency'='200', 'amplification'='200') from root.sg.d1;
<<SQLSTATE;

--3.3 不支持原始数据和聚合查询连用
select envelope(sin(s1)+cos(s2)+max_value(s3)-last_value(s4)) from root.sg.d1;
<<SQLSTATE;

--3.4 frequency（ 调制频率 ）检查
select s1, envelope(s1,frequency=10) from root.sg.d1 align by device;
select envelope(s4,frequency=1) from root.sg.d1;
select envelope(s2,"frequency"='200') from root.sg.d1 align by device;
select envelope(s1),envelope(s1,'frequency'='100'),envelope(s2),envelope(s2,'frequency'='20') from root.sg.d1 align by device;
select envelope(s3,"frequency"='9223372036854775807') from root.sg.d1 align by device;
select s4, envelope(s4,'frequency'='100.10') from root.sg.d1;
select s2, envelope(s2,'frequency'='0.5') from root.sg.d1;
--3.4.1 values为非正数
select envelope(s3,'frequency'='') from root.sg.d1;
<<SQLSTATE;
select envelope(s4,'frequency'='ABC') from root.sg.d1;
<<SQLSTATE;
select envelope(s4,'frequency'=false) from root.sg.d1;
<<SQLSTATE;
select envelope(s4,'frequency'=s4) from root.sg.d1;
<<SQLSTATE;
select envelope(s4,'frequency'=1) from root.sg.d1;
<<SQLSTATE;
select s2, envelope(s2,'frequency'='0') from root.sg.d1;
<<SQLSTATE;
select envelope(s3,'frequency'='-1') from root.sg.d1;
<<SQLSTATE;
--3.4.2 不指定序列路径
select envelope('frequency'='1') from root.sg.d1;
<<SQLSTATE;
select s1, envelope('frequency'='1') from root.sg.d1;
<<SQLSTATE;
--3.4.3 返回空列表
select envelope(frequency=1) from root.sg.d1;
select envelope(s3,frequency=0) from root.sg.d1;
select envelope(s3,frequency=-1) from root.sg.d1;
--3.4.4 仅查询到结果集为：root.sg.d1.s3序列的原始数值
select s3, envelope(frequency=1) from root.sg.d1;

--3.5 amplification（扩增倍数）检查
select s1, envelope(s1,'amplification'='10') from root.sg.d1 align by device;
--3.5.1 当频率小1时，可通过此参数对频率进行扩增以展示正常的结果
select s1, envelope(s1,"frequency"="0.0001","amplification"="10000") from root.sg.d1 align by device;
--3.5.2 values为非正整数
select s1, envelope(s1,'amplification'='0') from root.sg.d1 align by device;
<<SQLSTATE;
select s1, envelope(s1,"amplification"="0.0001") from root.sg.d1 align by device;
<<SQLSTATE;
select s2, envelope(s2,"amplification"="-1") from root.sg.d1 align by device;
<<SQLSTATE;
select s3, envelope(s3,"amplification"="test") from root.sg.d1 align by device;
<<SQLSTATE;
select s3, envelope(s3,"amplification"="false") from root.sg.d1 align by device;
<<SQLSTATE;
--3.5.3 不指定序列路径
select envelope('amplification'='1000') from root.sg.d1;
<<SQLSTATE;
select s1, envelope('amplification'='1000') from root.sg.d1;
<<SQLSTATE;
--3.5.4 返回空列表
select envelope(amplification=1000) from root.sg.d1;

--3.6 该函数envelope不支持数据类型BOOLEAN和TEXT
select envelope(s1) from root.sg.d2;
<<SQLSTATE;
select envelope(s2) from root.sg.d2;
<<SQLSTATE;

--3.7 结合starttime和endtime使用
select s3, envelope(s3,'frequency'='1000', 'amplification'='10') from root.sg.d1 where time > 20 align by device;
select s4, envelope(s4,'frequency'='100', 'amplification'='1') from root.sg.d1 where time <=100 align by device;
select s1, envelope(s1,'frequency'='10', 'amplification'='1000') from root.sg.d1 where time > 10 and time <= 100 align by device;

--3.8 不支持结合group by 使用
select s1,envelope(s1,'frequency'='200', 'amplification'='200') from root.sg.d1 group by time([10,200),50) align by device;
<<SQLSTATE;

--3.9 与select into 结合
select envelope(s1),envelope(s2) into root.sg.d3(s1,s2) from root.sg.d1;
show timeseries root.sg.d3.**;
select * from root.sg.d3 align by device;

--3.10 通过别名查询
select envelope(s2,'frequency'='100', 'amplification'='1000') as test_env from root.sg.d1 align by device;

--3.11 where 条件值过滤查询
select s3, s4, envelope(s4,'frequency'='200', 'amplification'='20') from root.sg.d1 where s3 >= 100 align by device;
select s3, envelope(s3,'frequency'='300', 'amplification'='10') from root.sg.d1 where s4 is null align by device;
select s3, s4, envelope(s3,'frequency'='300', 'amplification'='10') from root.sg.d1 where s4 is not null align by device;

--3.12 fill 补空值
select s3, s4, envelope(s4,'frequency'='200', 'amplification'='200') from root.sg.d1 where time > 10 and time <= 100 fill(previous);
select s3, s4, envelope(s4,'frequency'='200', 'amplification'='200') from root.sg.d1 where time > 10 and time <= 100 fill(linear);
select s3, s4, envelope(s4,'frequency'='200', 'amplification'='200') from root.sg.d1 where time > 10 and time <= 100 fill(10);

--3.13 结果集分页
select s1, s2, envelope(s1),envelope(s2) from root.sg.d1 limit 5 align by device;
select s1, s2, envelope(s1),envelope(s2) from root.sg.d1 limit 5 offset 3 align by device;
select s1, s2, envelope(s1),envelope(s2) from root.sg.d1 limit 5 offset 3 slimit 1 align by device;
select s1, s2, envelope(s1),envelope(s2) from root.sg.d1 limit 5 offset 3 slimit 1 soffset 1 align by device;
select s1, s2, envelope(s1),envelope(s2) from root.sg.d1 limit 5 offset 3 slimit 1 soffset 1 align by device;

--3.14 结果集排序
select s1, s2, s3, s4, envelope(s1),envelope(s2),envelope(s3), envelope(s4) from root.sg.d1 order by time desc align by device;
select s1, s2, envelope(s1),envelope(s2) from root.sg.d1 order by device desc align by device;
select s1, s2, envelope(s1),envelope(s2) from root.sg.d1 order by device asc, time desc align by device;
select s3, s4, envelope(s3),envelope(s4) from root.sg.d1 order by time,device align by device;

--3.15与视图view结合使用
create view root.sg.view_envelope.v1 as select envelope(s1,'frequency'='100', 'amplification'='1000') from root.sg.d1;
create view root.sg.view_envelope(v2,v3) as select envelope(s1), envelope(s2) from root.sg.d1;
show view root.sg.view_envelope.*;
select * from root.sg.view_envelope;

--.清理数据库
delete database root.**;
<<NULL;
drop function envelope;
<<NULL;
