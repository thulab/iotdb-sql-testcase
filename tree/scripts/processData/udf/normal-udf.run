connect root/TimechoDB@2021;
-- 2个入参，针对入参的各种类型, output:boolean, non-aligned and aligned
drop database root.**;<<NULL;
sleep 1000;
-- delete timeseries root.udf.**;<<NULL;
drop function my_compare;<<NULL;
create function my_compare as "com.timecho.udf.normal.TwoVariables";

create database root.udf;<<NULL;
create timeseries root.udf.d1.s1 with datatype=int32;
create timeseries root.udf.d1.s2 with datatype=int64;
create timeseries root.udf.d1.s3 with datatype=float;
create timeseries root.udf.d1.s4 with datatype=double;
create timeseries root.udf.d1.s5 with datatype=boolean;
create timeseries root.udf.d1.s6 with datatype=text;
create timeseries root.udf.d1.s7 with datatype=int32;

insert into root.udf.d1(time, s1,s2,s3,s4,s5,s6) values (1,1,1,5,7,0,9),(2,2,4,4,8,1,1),(3,2,43,4,4,1,1),(4,2,4,6,0,0,1),(5,2,4,4,8,0,0);

-- 查询
select * from root.udf.d1;
-- input int32
select my_compare(s1,s7) from root.udf.d1;
-- input int32,int64
select my_compare(s1,s2) from root.udf.d1;
select s1,s2,my_compare(s1,s2) from root.udf.d1;
-- 带*查询
select my_compare(*) from root.udf.d1;
<<SQLSTATE;
select my_compare(s1, *) from root.udf.d1;
select *, my_compare(s1,s2) from root.udf.d1;
select *, my_compare(*) from root.udf.d1;
select s1, my_compare(*) from root.udf.d1;

-- 对齐ts
create aligned timeseries root.udf.d2 (s1 int32, s2 int64, s3 float, s4 double, s5 boolean, s6 text, s7 int32);
insert into root.udf.d2(time, s1,s2,s3,s4,s5,s6) aligned values (1,1,1,5,7,0,9),(2,2,4,4,8,1,1),(3,2,43,4,4,1,1),(4,2,4,6,0,0,1),(5,2,4,4,8,0,0);
-- 查询
select * from root.udf.d2;
-- input int32
select my_compare(s1,s7) from root.udf.d2;
-- input int32,int64
select my_compare(s1,s2) from root.udf.d2;
select my_compare(s1,s2),s1,s2 from root.udf.d1;
-- 带*查询
select my_compare(s1, *) from root.udf.d2;
select *, my_compare(s1,s2) from root.udf.d2;
select s1, my_compare(*) from root.udf.d2;
<<SQLSTATE;


-- new data types
-- 非对齐序列
CREATE TIMESERIES root.udf.d3.s_date_1 WITH DATATYPE=date, ENCODING=PLAIN;
CREATE TIMESERIES root.udf.d3.s_timestamp_1 WITH DATATYPE=timestamp, ENCODING=PLAIN;
CREATE TIMESERIES root.udf.d3.s_string_1 WITH DATATYPE=string, ENCODING=PLAIN;
CREATE TIMESERIES root.udf.d3.s_blob_1 WITH DATATYPE=blob, ENCODING=PLAIN;
CREATE TIMESERIES root.udf.d3.s_date_2 WITH DATATYPE=date, ENCODING=ZIGZAG;
CREATE TIMESERIES root.udf.d3.s_timestamp_2 WITH DATATYPE=timestamp, ENCODING=CHIMP;
CREATE TIMESERIES root.udf.d3.s_string_2 WITH DATATYPE=string, ENCODING=DICTIONARY;
CREATE TIMESERIES root.udf.d3.s_blob_2 WITH DATATYPE=blob, ENCODING=plain;

insert into root.udf.d3(time,s_date_1,s_date_2,s_timestamp_1,s_timestamp_2,s_string_1,s_string_2,s_blob_1,s_blob_2)values(-1,null,'1969-12-01',null,-2678400000,null,'this is string date type',null,X'7468697320697320626c6f6220646174612074797065'),(1000,'1970-01-02','1970-01-01',86400000,0,'string_1','string_2',X'626c6f6231',X'626c6f6232'),(2000,'2000-01-01','2000-01-01',946684800000,946684800000,'string_1','string_1',X'626c6f6231',X'626c6f6231');

select s_date_1,s_date_2,s_timestamp_1,s_timestamp_2,s_string_1,s_string_2,s_blob_1,s_blob_2 from root.udf.d3;

select s_date_1,s_date_2,my_compare(s_date_1,s_date_2) from root.udf.d3;
select s_timestamp_1,s_timestamp_2,my_compare(s_timestamp_1,s_timestamp_2) from root.udf.d3;
select s_string_1,s_string_2,my_compare(s_string_1,s_string_2) from root.udf.d3;
select s_blob_1,s_blob_2,my_compare(s_blob_1,s_blob_2) from root.udf.d3;

-- 对齐序列
create aligned timeseries root.udf.d4(s_date_1 date encoding=TS_2DIFF,s_date_2 date encoding=RLE,s_timestamp_1 timestamp encoding=TS_2DIFF,s_timestamp_2 timestamp encoding=RLE,s_string_1 string encoding=plain,s_string_2 string encoding=dictionary,s_blob_1 blob,s_blob_2 blob);

insert into root.udf.d4(time,s_date_1,s_date_2,s_timestamp_1,s_timestamp_2,s_string_1,s_string_2,s_blob_1,s_blob_2)values(-1,'1969-12-01',null,-2678400000,null,'this is string date type',null,X'7468697320697320626c6f6220646174612074797065',null),(1000,'1970-01-02','1970-01-01',86400000,0,'string_1','string_2',X'626c6f6231',X'626c6f6232'),(2000,'2000-01-01','2000-01-01',946684800000,946684800000,'string_1','string_1',X'626c6f6231',X'626c6f6231');

select s_date_1,s_date_2,s_timestamp_1,s_timestamp_2,s_string_1,s_string_2,s_blob_1,s_blob_2 from root.udf.d4;

select s_date_1,s_date_2,my_compare(s_date_1,s_date_2) from root.udf.d4;
select s_timestamp_1,s_timestamp_2,my_compare(s_timestamp_1,s_timestamp_2) from root.udf.d4;
select s_string_1,s_string_2,my_compare(s_string_1,s_string_2) from root.udf.d4;
select s_blob_1,s_blob_2,my_compare(s_blob_1,s_blob_2) from root.udf.d4;


-- 清理
drop function my_compare;
delete timeseries root.udf.**;<<NULL;
