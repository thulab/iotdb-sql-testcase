connect root/TimechoDB@2021;
-- 手册上的例子，取均值, 对齐/非对齐/视图

drop database root.**;<<NULL;
sleep 1000;
-- delete timeseries root.sg.**;<<NULL;
drop function my_avg;<<NULL;



create function my_avg as "org.example.UDAFExample";



-- 准备数据
create database root.sg;
create aligned TIMESERIES root.sg.d0(s0 int32, s1 int64, s2 float, s3 double, s4 boolean, s5 text);
insert into root.sg.d0(time, s0, s1, s2,s3,s4,s5) values(1,1,10,5.39,5.51234,true,'第1条'),
(11,2,20,5.39,15.51234,false,'第2条'),
(21,3,null,5.39,25.51234,true,'第3条'),
(31,4,40,5.39,35.51234,true,'第4条'),
(41,5,50,5.39,45.51234,false,'第5条'),
(51,6,60,5.39,55.51234,false,'第6条'),
(61,7,70,5.39,65.51234,false,'第7条'),
(71,8,80,5.39,75.51234,false,'第8条'),
(81,9,90,5.39,85.51234,false,'第9条'),
(91,10,100,5.39,95.51234,false,'第10条'),
(101,11,110,5.39,105.51234,false,'第11条'),
(111,12,120,5.39,115.51234,false,'第12条'),
(121,13,130,5.39,125.51234,false,'第13条'),
(131,14,140,5.39,135.51234,false,'第14条'),
(141,15,150,5.39,145.51234,false,'第15条'),
(151,16,160,5.39,155.51234,false,'第16条'),
(161,17,170,5.39,165.51234,false,'第17条'),
(171,18,180,5.39,175.51234,false,'第18条'),
(181,19,190,5.39,185.51234,false,'第19条'),
(191,20,200,5.39,195.51234,false,'第20条'),
(201,21,210,5.39,null,false,'第21条');

-- 查询写回
select s0,s1,s2,s3 into root.sg.d1(::) from root.sg.d0;
select * into root.sg.group.d2(::) from root.sg.d0;



-- 原始数据查询
show devices root.sg.**;
select * from root.sg.d0;
select * from root.sg.d1;
select * from root.sg.group.d2;



-- 无 group by,仅一条结果
-- 无 null 值
select __endTime,my_avg(s0) from root.sg.d0;

-- 含有 null 值
select __endTime,my_avg(s1) from root.sg.d0;
select my_avg(s0) as avg_s0,my_avg(s1) as avg_s1,my_avg(s2) as avg_s2, my_avg(s3) as avg_s3 from root.sg.d0;

-- align by device
select my_avg(s0) as avg_s0,my_avg(s1) as avg_s1,my_avg(s2) as avg_s2, my_avg(s3) as avg_s3 from root.sg.** align by device;

-- *
select my_avg(*) from root.sg.d1;
select my_avg(s0)+count(s0) from root.sg.d1;


-- 时间分段
-- 左闭右开,期望21条
select  __endTime,my_avg(s0) from root.sg.d0 group by ([1,202),10ms);

-- 滑动步长,期望11条
select  __endTime,my_avg(s0) from root.sg.d0 group by ([1,202),10ms,20ms);

-- 滑动步长可以小于聚合窗口,期望21条
select  __endTime,my_avg(s0) from root.sg.d0 group by ([1,202),20ms,10ms);

-- 自然月份，期望1条
select  __endTime,my_avg(s0) from root.sg.d0 group by ([1,202),1mo,2mo);

-- 左开右闭区间，期望4条
select  __endTime,my_avg(s0) from root.sg.d0 group by ((1,201],50ms);

-- level
-- level=0,4列3行
select  __endTime,my_avg(s0) from root.sg.** group by ((0,201],80ms), level=0;
-- level=1,4列3行
select  __endTime,my_avg(s0) from root.sg.** group by ((0,201],80ms), level=1;
-- level=2,5列3行
select  __endTime,my_avg(s0) from root.sg.** group by ((0,201],80ms), level=2;
-- level=2,3,5列3行
select  __endTime,my_avg(s0) from root.sg.** group by ((0,201],80ms), level=2,3;

-- 混合
-- align by device,3列9行
select my_avg(s0) from root.sg.** group by ((0,201],80ms) align by device;
-- having,5列2行
select  __endTime,my_avg(s2) from root.sg.** group by ((0,201],80ms), level=2 having max_value(s1)>100;
-- 与count函数并列使用
select  __endTime,my_avg(s2),count(s0) from root.sg.d1 group by ((0,201],80ms);


-- 差值分段
-- delta=0 数值，期望21条
select __endTime, my_avg(s1) from root.sg.d0 group by variation(s0,0);
-- delta=0 text，期望21条
select __endTime, my_avg(s1) from root.sg.d0 group by variation(s5);
-- delta=0 boolean，期望4条
select __endTime, my_avg(s1) from root.sg.d0 group by variation(s4);
-- 对null处理，期望20条
select __endTime, my_avg(s1) from root.sg.d0 group by variation(s1);


-- delta>0，期望11条
select __endTime, my_avg(s1) from root.sg.d0 group by variation(s0,1);
-- 中间值，期望7条
select __endTime, my_avg(s1) from root.sg.d0 group by variation(s0,2);
select __endTime, my_avg(s1) from root.sg.d0 group by variation(s1,20);
-- 分组仅一组
select __endTime, my_avg(s1) from root.sg.d0 group by variation(s0,40);


-- 条件分段
-- 期望2条
select __endTime, my_avg(s1) from root.sg.d0 group by condition(s4=false, KEEP>=1);
-- 期望1条
select __endTime, my_avg(s1) from root.sg.d0 group by condition(s4=false, KEEP>=2);

-- 会话分段,期望2条
select __endTime, my_avg(s1) from root.sg.d0 group by session(10ms);


-- 点数分段,期望4条
select __endTime, my_avg(s1) from root.sg.d0 group by count(s0,5);
select __endTime, my_avg(s1) from root.sg.d0 group by count(s1,5);


//-- 视图
//create view root.view.v1(s0,s1,s2,s3,s4) as select s0,s1,s2,s3,s4 from root.sg.d0;
//select * from root.view.v1;
//-- view, 与上方结果一致
//select  __endTime,my_avg(s2),count(s0) from root.sg.d1 group by ((0,201],80ms);
//select  __endTime,my_avg(s2) from root.sg.** group by ((0,201],80ms), level=2 having max_value(s1)>100;



-- error
-- 类型不匹配
select __endTime,my_avg(s4) from root.sg.d0;
<<SQLSTATE;
select __endTime,my_avg(s5) from root.sg.d0;
<<SQLSTATE;

-- 作为udtf函数的输入
select max_value(my_avg(s0)) from root.sg.d0 group by ([1,202),100ms);
<<SQLSTATE;

-- udtf函数的输出作为udaf输入
select my_avg(max_value(s0)) from root.sg.d0 group by ([1,202),100ms);
<<SQLSTATE;

-- 名称错误
select my_avgg(s0) from root.sg.d0;
<<SQLSTATE;



-- 清理
drop function my_avg;
delete timeseries root.sg.**;<<NULL;
drop database root.**;<<NULL;
