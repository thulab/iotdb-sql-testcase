connect root/TimechoDB@2021;
delete database root.**;
<<NULL;
drop function pattern_match;
<<NULL;

--注册函数
create function pattern_match as 'org.apache.iotdb.library.match.UDAFPatternMatch';

--准备数据
CREATE DATABASE root.db;
create timeseries root.db.d0.s0 with datatype=INT32,encoding=PLAIN;
create timeseries root.db.d0.s00 with datatype=INT32,encoding=PLAIN;
create timeseries root.db.d0.s1 with datatype=INT64,encoding=PLAIN;
create timeseries root.db.d0.s11 with datatype=INT64,encoding=PLAIN;
create timeseries root.db.d0.s2 with datatype=FLOAT,encoding=PLAIN;
create timeseries root.db.d0.s3 with datatype=DOUBLE,encoding=PLAIN;
create timeseries root.db.d0.s4 with datatype=BOOLEAN,encoding=PLAIN;
insert into root.db.d0 (timestamp,s0) values (1,1);
insert into root.db.d0 (timestamp,s0) values (2,2);
insert into root.db.d0 (timestamp,s0) values (3,3);
insert into root.db.d0 (timestamp,s0) values (4,3);
insert into root.db.d0 (timestamp,s0) values (5,3);
insert into root.db.d0 (timestamp,s0) values (6,3);
insert into root.db.d0 (timestamp,s1) values (1,1);
insert into root.db.d0 (timestamp,s1) values (2,2);
insert into root.db.d0 (timestamp,s1) values (3,3);
insert into root.db.d0 (timestamp,s2) values (1,1.1);
insert into root.db.d0 (timestamp,s2) values (2,2.2);
insert into root.db.d0 (timestamp,s2) values (3,3.3);
insert into root.db.d0 (timestamp,s3) values (1,1.1);
insert into root.db.d0 (timestamp,s3) values (2,2.2);
insert into root.db.d0 (timestamp,s3) values (3,3.3);
insert into root.db.d0 (timestamp,s4) values (1,true);
insert into root.db.d0 (timestamp,s4) values (2,true);
insert into root.db.d0 (timestamp,s4) values (3,false);
insert into root.db.d0 (timestamp,s0) values (-1,-1);
insert into root.db.d0 (timestamp,s0) values (-2,-2);
insert into root.db.d0 (timestamp,s0) values (-3,-3);
insert into root.db.d0 (timestamp,s00) values (2147483647,2147483647);
insert into root.db.d0 (timestamp,s00) values (-2147483648,-2147483648);
--insert into root.db.d0 (timestamp,s11) values (9223372036854775807,9223372036854775807);
--insert into root.db.d0 (timestamp,s11) values (-9223372036854775808,-9223372036854775808);
insert into root.db.d0 (timestamp,s2) values (4,1.123456);
insert into root.db.d0 (timestamp,s2) values (5,-2.123456);
insert into root.db.d0 (timestamp,s2) values (6,3.123456);
insert into root.db.d0 (timestamp,s3) values (4,1.1234567890123456);
insert into root.db.d0 (timestamp,s3) values (5,-2.1234567890123456);
insert into root.db.d0 (timestamp,s3) values (6,3.1234567890123456);
select s0 from root.db.d0;
select s1 from root.db.d0;
select s2 from root.db.d0;
select s3 from root.db.d0;
select s4 from root.db.d0;

// 一、测点
-- 1、使用不同数据类型的测点
select pattern_match(s0, "timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="0.0") as match_result from root.db.d0;
select pattern_match(s0, "timePattern"="1,2,3", "valuePattern"="1.1,2.2,3.3", "threshold"="100") as match_result from root.db.d0;
select pattern_match(s1, "timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="0.0") as match_result from root.db.d0;
select pattern_match(s1, "timePattern"="1,2,3", "valuePattern"="1.1,2.2,3.3", "threshold"="100") as match_result from root.db.d0;
select pattern_match(s2, "timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="100") as match_result from root.db.d0;
select pattern_match(s2, "timePattern"="1,2,3", "valuePattern"="1.1,2.2,3.3", "threshold"="0.0") as match_result from root.db.d0;
select pattern_match(s3, "timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="100") as match_result from root.db.d0;
select pattern_match(s3, "timePattern"="1,2,3", "valuePattern"="1.1,2.2,3.3", "threshold"="0.0") as match_result from root.db.d0;
select pattern_match(s4, "timePattern"="1,2,3", "valuePattern"="1,1,0", "threshold"="0.0") as match_result from root.db.d0;
select pattern_match(s4, "timePattern"="1,2,3", "valuePattern"="1.1,2.2,3.3", "threshold"="100") as match_result from root.db.d0;
-- 2、错误和特殊场景
--不填写
select pattern_match("timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="0.0") as match_result from root.db.d0;
<<SQLSTATE;
--使用多个测点
select pattern_match(s0,s1,s2 "timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="0.0") as match_result from root.db.d0;
<<SQLSTATE;
--查询不存在的测点
select pattern_match(s_null, "timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="0.0") as match_result from root.db.d0;

// 二、timePattern和valuePattern
-- 1、测试各种时间戳和值
select pattern_match(s0, "timePattern"="-3,-2,-1", "valuePattern"="-3,-2,-1", "threshold"="0.0") as match_result from root.db.d0;
select pattern_match(s00, "timePattern"="-2147483648,2147483647", "valuePattern"="-2147483648,2147483647", "threshold"="100") as match_result from root.db.d0;
--select pattern_match(s11, "timePattern"="-9223372036854775808,9223372036854775807", "valuePattern"="-9223372036854775808,9223372036854775807", "threshold"="0.0") as match_result from root.db.d0;
select pattern_match(s2, "timePattern"="4,5,6", "valuePattern"="1.123456,-2.123456,3.123456", "threshold"="0.0") as match_result from root.db.d0;
select pattern_match(s3, "timePattern"="4,5,6", "valuePattern"="1.1234567890123456,-1.1234567890123456,1.1234567890123456", "threshold"="0.0") as match_result from root.db.d0;
-- 2、错误场景和特殊场景
--不填写timePattern或valuePattern
select pattern_match(s0, "valuePattern"="1,2,3", "threshold"="0.0") as match_result from root.db.d0;
<<SQLSTATE;
select pattern_match(s0, "timePattern"="1,2,3", "threshold"="0.0") as match_result from root.db.d0;
<<SQLSTATE;
--为空
select pattern_match(s0, "timePattern"="", "valuePattern"="1,2,3", "threshold"="0.0") as match_result from root.db.d0;
<<SQLSTATE;
select pattern_match(s0, "timePattern"="1,2,3", "valuePattern"="", "threshold"="0.0") as match_result from root.db.d0;
<<SQLSTATE;
--值相同
select pattern_match(s0, "timePattern"="4,5,6", "valuePattern"="3,3,3", "threshold"="0.0") as match_result from root.db.d0;

// 三、theshold
--负值
select pattern_match(s0, "timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="-1") as match_result from root.db.d0;
--为空
select pattern_match(s0, "timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="") as match_result from root.db.d0;
<<SQLSTATE;
--不填写
select pattern_match(s0, "timePattern"="1,2,3", "valuePattern"="1,2,3") as match_result from root.db.d0;
<<SQLSTATE;

// 四、其他场景
--设置多个匹配模式
select pattern_match(s0, "timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="0") as match_result1, pattern_match(s1, "timePattern"="1,2,3", "valuePattern"="1,2,3", "threshold"="0") as match_result2 from root.db.d0;

--清理环境
drop function pattern_match;
delete database root.**;
