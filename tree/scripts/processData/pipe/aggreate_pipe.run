//流处理时间聚合功能：按时间通过特定算法进行聚合所有序列写回数据库
//avg(均值)、peak(峰值)、rms(均方根值)、var(方差)、skew(偏度)
//kurt(峭度指标)、ff(波形因数)、cf(峰值因数)、pf(脉冲因数)、ce(裕度因数)

--connect root/TimechoDB@2021;

--清理数据
--drop pipe pipeA;
--<<NULL;
--drop pipe pipeB;
--<<NULL;
--drop pipe pipeC;
--<<NULL;
--drop pipe pipeD;
--<<NULL;
--drop pipe pipeE;
--<<NULL;
--drop pipe pipeH;
--<<NULL;
--drop pipe pipeI;
--<<NULL;
--drop pipe pipeM;
--<<NULL;
--drop database root.**;
--<<NULL;
--drop device template t1;
--<<NULL;
--drop device template t2;
--<<NULL;


--场景1：先创建基础非对齐普通元数据，后创建pipe
--create database root.sg1;
--create timeseries root.sg1.d1.s1 int32;
--create timeseries root.sg1.d1.s2 int64;
--create timeseries root.sg1.d1.s3 double;
--create timeseries root.sg1.d1.s4 float;
--create timeseries root.sg1.d1.s5 boolean;
--create timeseries root.sg1.d1.s6 text;
--show databases root.sg1;
--show timeseries root.sg1.**;

--create pipe pipeA with source('path'='root.sg1.**') with processor('processor'='aggregate-processor','output.max-delay-seconds'='2','output.database'='root.analy_sg1','output.measurements'='s_avg, s_peak, s_rms, s_var, s_skew, s_kurt, s_ff, s_cf, s_pf, s_ce','output.min-report-interval-seconds'='1','windowing-strategy'='tumbling','operators'='avg, peak, rms, var, skew, kurt, ff, cf, pf, ce','sliding.boundary-time'='0','sliding.seconds'='100') with sink('sink'='write-back-sink');
--show pipe pipeA;
--<<CHECKCODE;

--insert into root.sg1.d1(s1,s2,s3,s4,s5,s6) values(1,1,1.1,1.1,false,'001');
--sleep 1;
--insert into root.sg1.d1(s1,s2,s3,s4,s5,s6) values(2,2,2.2,2.2,true,'002');
--flush;
--sleep 20000;
--show databases root.analy_sg1;
--show timeseries root.analy_sg1.d1.s1.s_kurt;
--show timeseries root.analy_sg1.d1.s1.s_avg;
--show timeseries root.analy_sg1.d1.s1.s_peak;
--show timeseries root.analy_sg1.d1.s1.s_pf;
--show timeseries root.analy_sg1.d1.s1.s_ff;
--show timeseries root.analy_sg1.d1.s1.s_var;
--show timeseries root.analy_sg1.d1.s1.s_cf;
--show timeseries root.analy_sg1.d1.s1.s_skew;
--show timeseries root.analy_sg1.d1.s1.s_ce;
--show timeseries root.analy_sg1.d1.s1.s_rms;
--show timeseries root.analy_sg1.d1.s2.s_kurt;
--show timeseries root.analy_sg1.d1.s2.s_avg;
--show timeseries root.analy_sg1.d1.s2.s_peak;
--show timeseries root.analy_sg1.d1.s2.s_pf;
--show timeseries root.analy_sg1.d1.s2.s_ff;
--show timeseries root.analy_sg1.d1.s2.s_var;
--show timeseries root.analy_sg1.d1.s2.s_cf;
--show timeseries root.analy_sg1.d1.s2.s_skew;
--show timeseries root.analy_sg1.d1.s2.s_ce;
--show timeseries root.analy_sg1.d1.s2.s_rms;
--show timeseries root.analy_sg1.d1.s3.s_kurt;
--show timeseries root.analy_sg1.d1.s3.s_avg;
--show timeseries root.analy_sg1.d1.s3.s_peak;
--show timeseries root.analy_sg1.d1.s3.s_pf;
--show timeseries root.analy_sg1.d1.s3.s_ff;
--show timeseries root.analy_sg1.d1.s3.s_var;
--show timeseries root.analy_sg1.d1.s3.s_cf;
--show timeseries root.analy_sg1.d1.s3.s_skew;
--show timeseries root.analy_sg1.d1.s3.s_ce;
--show timeseries root.analy_sg1.d1.s3.s_rms;
--show timeseries root.analy_sg1.d1.s4.s_kurt;
--show timeseries root.analy_sg1.d1.s4.s_avg;
--show timeseries root.analy_sg1.d1.s4.s_peak;
--show timeseries root.analy_sg1.d1.s4.s_pf;
--show timeseries root.analy_sg1.d1.s4.s_ff;
--show timeseries root.analy_sg1.d1.s4.s_var;
--show timeseries root.analy_sg1.d1.s4.s_cf;
--show timeseries root.analy_sg1.d1.s4.s_skew;
--show timeseries root.analy_sg1.d1.s4.s_ce;
--show timeseries root.analy_sg1.d1.s4.s_rms; 
--select * from root.analy_sg1.d1.**;
--统计count：4条记录
--select count(s_kurt), count(s_pf), count(s_peak), count(s_avg), count(s_ff), count(s_cf), count(s_var), count(s_ce), count(s_skew), count(s_rms) from root.analy_sg1.** align by device;


--场景2：先创建pipe，后通过insert自动基础创建元数据
--create pipe pipeB with source('path'='root.db.**') with processor('processor'='aggregate-processor','output.max-delay-seconds'='2','output.database'='root.analy_db','output.measurements'='s_avg, s_peak, s_rms, s_var','output.min-report-interval-seconds'='1','windowing-strategy'='tumbling','operators'='avg, peak, rms, var','sliding.boundary-time'='0','sliding.seconds'='100') with sink('sink'='write-back-sink');
--show pipe pipeB;
--<<CHECKCODE;

--insert into root.db.device(time,s1,s2) values(now(),10,12.2);
--sleep 1;
--insert into root.db.device(time,s1,s2) values(now(),20,22.2);
--flush;
--show databases root.db;
--sleep 18000;
--show databases root.analy_db;
--show timeseries root.analy_db.device.s1.s_peak;
--show timeseries root.analy_db.device.s1.s_avg;
--show timeseries root.analy_db.device.s1.s_var;
--show timeseries root.analy_db.device.s1.s_rms;
--show timeseries root.analy_db.device.s2.s_peak;
--show timeseries root.analy_db.device.s2.s_avg;
--show timeseries root.analy_db.device.s2.s_var;
--show timeseries root.analy_db.device.s2.s_rms;

--select * from root.analy_db.**;
--统计count：2条记录
--select count(s_avg), count(s_peak), count(s_var), count(s_rms) from root.analy_db.** align by device;


--场景3：先创建基础的对齐时间序列，后创建pipe
--create aligned timeseries root.data.d1(s1 INT32 encoding=RLE, s2 FLOAT encoding=RLE);
--show devices root.data.**;
--show timeseries root.data.d1.**;

--create pipe pipeC with source('path'='root.data.**') with processor('processor'='aggregate-processor','output.max-delay-seconds'='2','output.database'='root.analy_data','output.measurements'='s_skew, s_kurt, s_ff, s_cf','output.min-report-interval-seconds'='1','windowing-strategy'='tumbling','operators'='skew, kurt, ff, cf','sliding.boundary-time'='0','sliding.seconds'='100') with sink('sink'='write-back-sink');
--show pipe pipeC;
--<<CHECKCODE;

--insert into root.data.d1(s1,s2) values(1,1.1);
--sleep 1;
--insert into root.data.d1(s1,s2) values(2,2.2);
--flush;
--show databases root.data;
--sleep 18000;
--show databases root.analy_data;
--show devices root.analy_data.**;
--show timeseries root.analy_data.**;
--select * from root.analy_data.**;
--统计count：2条记录
--select count(*) from root.analy_data.** align by device;


--场景4：挂载模板的序列，后创建pipe
--create device template t1 (s1 FLOAT encoding=RLE, s2 INT64 encoding=RLE compression=SNAPPY);
--create device template t2 aligned (lat FLOAT encoding=Gorilla, lon FLOAT encoding=Gorilla);
--show device templates;

--create database root.sg2;
--set device template t1 to root.sg2.d1;
--set device template t2 to root.sg2.d2;
--create timeseries of device template on root.sg2.d1;
--create timeseries of device template on root.sg2.d2;
--show timeseries root.sg2.**;

--create pipe pipeD with source('path'='root.sg2.**') with processor('processor'='aggregate-processor','output.max-delay-seconds'='2','output.database'='root.analy_sg2','output.measurements'='s_skew, s_kurt','output.min-report-interval-seconds'='1','windowing-strategy'='tumbling','operators'='skew, kurt','sliding.boundary-time'='0','sliding.seconds'='100') with sink('sink'='write-back-sink');
--show pipe pipeD;
--<<CHECKCODE;

--insert into root.sg2.d1(s1,s2) values(1.1,1);
--sleep 1;
--insert into root.sg2.d2(lat,lon) values(1.1,2.2);
--flush;
--sleep 18000;
--show databases root.analy_sg2;
--show devices root.analy_sg2.**;
--show timeseries root.analy_sg2.**;
--select * from root.analy_sg2.**;
--统计count：4条记录
--select count(*) from root.analy_sg2.** align by device;


--场景5：查询写回的序列，创建pipe
--select s1,s2 into root.sg4.d1(s1,s2) from root.sg1.d1;
--show timeseries root.sg4.d1.*;

--create pipe pipeE with source('path'='root.sg4.**') with processor('processor'='aggregate-processor','output.max-delay-seconds'='2','output.database'='root.analy_sg4','output.measurements'='s_kurt','output.min-report-interval-seconds'='1','windowing-strategy'='tumbling','operators'='skew, kurt','sliding.boundary-time'='0','sliding.seconds'='100') with sink('sink'='write-back-sink');
--show pipe pipeF;
--<<CHECKCODE;

--insert into root.sg1.d1(s1,s2) values(2,2);
--sleep 1;
--insert into root.sg1.d1(s1,s2) values(3,3);
--flush;
--select count(*) from root.sg1.d1 align by device;
--select count(*) from root.sg4.d1 align by device;
--sleep 20000;
--show databases root.analy_sg4;
--show devices root.analy_sg4.**;
--show timeseries root.analy_sg4.**;
--select * from root.analy_sg4.**;
--统计count：4条记录
--select count(s_kurt), count(kurt) from root.analy_sg4.** align by device;


--场景6：创建pipe，其output.measurements与operators不一致（measurements个数小于operators个数）
--create pipe pipeH with source('path'='root.test.g_0.**') with processor('processor'='aggregate-processor','output.max-delay-seconds'='2','output.database'='root.analy_test_g_0','output.measurements'='sss','output.min-report-interval-seconds'='1','windowing-strategy'='tumbling','operators'='avg, peak, rms','sliding.boundary-time'='0','sliding.seconds'='100') with sink('sink'='write-back-sink');
--show pipe pipeH;
--<<CHECKCODE;

--insert into root.test.g_0.d_0(time,s1) values(now(),1);
--sleep 1;
--insert into root.test.g_0.d_0(time,s1) values(now(),2);
--flush;
--sleep 20000;
--show databases root.analy_test_g_0;
--show timeseries root.analy_test_g_0.**;
--select * from root.analy_test_g_0.**;
--select count(sss), count(rms), count(peak) from root.analy_test_g_0.** align by device;


--场景7：创建pipe，其output.measurements与operators不一致（measurements个数大于operators个数）
--create pipe pipeI with source('path'='root.test.g_0.**') with processor('processor'='aggregate-processor','output.max-delay-seconds'='2','output.database'='root.analy_test_g_1','output.measurements'='s_1,s_2,s_3','output.min-report-interval-seconds'='1','windowing-strategy'='tumbling','operators'='rms','sliding.boundary-time'='0','sliding.seconds'='100') with sink('sink'='write-back-sink');
--show pipe pipeI;
--<<CHECKCODE;

--insert into root.test.g_0.d_0(time,s1) values(now(),3);
--sleep 1;
--insert into root.test.g_0.d_0(time,s1) values(now(),4);
--flush;
--sleep 60000;
--show databases root.analy_test_g_1;
--返回operators对应的序列，其余的自动丢弃
--show timeseries root.analy_test_g_1.g_0.d_0.s1.s_1;
--select * from root.analy_test_g_1.g_0.d_0.s1;
--select count(*) from root.analy_test_g_1.g_0.d_0.s1 align by device;


--场景8：output.min-report-interval-seconds,可选性，0表示每次都上报
--create pipe pipeM with source('path'='root.test.g_0.**') with processor('processor'='aggregate-processor','output.max-delay-seconds'='2','output.database'='root.analy_test_g_2','output.measurements'='var_s1','output.min-report-interval-seconds'='0','windowing-strategy'='tumbling','operators'='var','sliding.boundary-time'='0','sliding.seconds'='100') with sink('sink'='write-back-sink');
--show pipe pipeM;
--<<CHECKCODE;

--insert into root.test.g_0.d_0(time,s1) values(now(),5);
--sleep 1;
--insert into root.test.g_0.d_0(time,s1) values(now(),6);
--flush;
--sleep 60000;
--show databases root.analy_test_g_2;
--show timeseries root.analy_test_g_2.**;
--select * from root.analy_test_g_2.**;
--统计count：2条记录
--select count(*) from root.analy_test_g_2.** align by device;


--清理数据
--drop pipe pipeA;
--<<NULL;
--drop pipe pipeB;
--<<NULL;
--drop pipe pipeC;
--<<NULL;
--drop pipe pipeD;
--<<NULL;
--drop pipe pipeE;
--<<NULL;
--drop pipe pipeH;
--<<NULL;
--drop pipe pipeI;
--<<NULL;
--drop pipe pipeM;
--<<NULL;
--drop database root.**;
--<<NULL;
--drop device template t1;
--<<NULL;
--drop device template t2;
--<<NULL;
