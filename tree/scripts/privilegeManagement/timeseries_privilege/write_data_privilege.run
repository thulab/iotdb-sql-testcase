//WRITE_DATA
//允许读取授权路径下的序列数据。
//允许插入、删除授权路径下的序列数据
//允许在授权路径下导入，加载数据

connect root/TimechoDB@2021;

--0.清理环境
connect root/TimechoDB@2021;
delete timeseries of device template t1 from root.sg.aligned_template;
<<NULL;
unset device template t1 from root.sg.aligned_template;
<<NULL;
drop device template t1;
<<NULL;
delete timeseries of device template t2 from root.sg.nonaligned_template;
<<NULL;
unset device template t2 from root.sg.nonaligned_template;
<<NULL;
drop device template t2;
<<NULL;
DELETE DATABASE root.**;
<<NULL;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP USER user03;
<<NULL;
DROP USER user04;
<<NULL;

--1.创建数据库
create database root.sg;
create database root.data;

--2.创建对齐时间序列
create aligned timeseries root.sg.d1(s1 float encoding=rle, s2 int64 encoding=rle);

--3.创建非对齐时间序列
create timeseries root.sg.d2.s1 with datatype=float,encoding=rle;
create timeseries root.sg.d2.s2 with datatype=int64,encoding=rle;

--4.分别创建、挂载、激活对齐序列的元数据模板
--template:t1
create device template t1 aligned (temperature FLOAT encoding=Gorilla, status BOOLEAN encoding=PLAIN);
show device templates;
show nodes in device template t1;
set device template t1 to root.sg.aligned_template;
show paths set device template t1;
create timeseries using device template on root.sg.aligned_template;
show paths using device template t1;

--5.分别创建、挂载、激活非对齐序列的元数据模板
--template:t2
create device template t2(temperature FLOAT encoding=Gorilla, status BOOLEAN encoding=PLAIN);
show device templates;
show nodes in device template t2;
set device template t2 to root.sg.nonaligned_template;
show paths set device template t2;
create timeseries using device template on root.sg.nonaligned_template;
show paths using device template t2;

--6.创建视图序列
create view root.sg.view_d1.calculation as select (s1+s2)/2 from root.sg.d1;
create view root.sg.view_d2.calculation as select sin(s1*s2) from root.sg.d2;

--7.分别查看数据库、设备、时间序列列表、视图（view）
show databases;
show devices root.sg.**;
show timeseries root.sg.**;
show view;

--8.插入数据
insert into root.sg.d1(time,s1,s2) values(1,1,1),(2,2,2),(3,3,3);
insert into root.sg.d2(time,s1,s2) values(1,1,1),(2,2,2),(3,3,3);
insert into root.sg.aligned_template(time,temperature,status) values(1,20,false),(2,22.1,true),(3,18,false);
insert into root.sg.nonaligned_template(time,temperature,status) values(1,10.5,false),(2,0.1,true),(3,22.2,false);

--9.创建用户
CREATE USER user01 'pass123456789';
CREATE USER user02 'pass123456789';
CREATE USER user03 'pass123456789';
CREATE USER user04 'pass123456789';

--10.列出用户列表
list user;

--11.检查用户是否有privilege存在（列出用户所有权限）
LIST PRIVILEGES OF USER `user01`;
LIST PRIVILEGES OF USER `user02`;
LIST PRIVILEGES OF USER `user03`;
LIST PRIVILEGES OF USER `user04`;

--11.进行赋权
GRANT WRITE_DATA ON root.** TO USER user01;
GRANT WRITE_DATA ON root.sg.d1.** TO USER user02 with grant option;
GRANT WRITE_DATA ON root.sg.nonaligned_template.** TO USER user03;
GRANT WRITE_DATA ON root.sg.aligned_template.temperature TO USER user03;
GRANT WRITE_DATA ON root.**.status TO USER user03;
<<SQLSTATE;
GRANT WRITE_DATA ON root.*.*.* TO USER user04;
<<SQLSTATE;
GRANT WRITE_DATA ON root.data TO USER user04;

--12.user01登录
--12.1 WRITE_DATA可支持的操作
connect user01/pass123456789;
show version;
<<CHECKCODE;
show databases;
count databases;
show child paths root;
show child paths root.*;
show child paths root.**;
show child paths root.sg;
show child nodes root.sg.*;
count nodes root.sg.** level=2;
show devices;
count devices;
show timeseries;
count timeseries;
show view;
show all ttl;
select * from root.sg.**;
insert into root.sg.d1(time,s1,s2) values(4,4,4);
insert into root.sg.d2(time,s1,s2) values(4,4,4);
select s1,s2 from root.sg.** align by device;
select s1 from root.sg.** where time=3;
select * from root.sg.** where s1=3;
select sin((s1+s2)/2) from root.sg.**;
select count(*) from root.sg.** group by level=1;
select last(*) from root.sg.** order by timeseries;
select count(s1) from root.sg.** align by device;
delete from root.sg.d2.*;
select * from root.sg.d1;
--12.2 WRITE_DATA不支持的操作
show cluster details;
<<SQLSTATE;
show regions;
<<SQLSTATE;
show confignodes;
<<SQLSTATE;
show datanodes;
<<SQLSTATE;
create aligned timeseries root.sg.d1(s3 double encoding=rle, s4 int32 encoding=rle);
<<SQLSTATE;
create timeseries root.sg.d2.s3 with datatype=INT32;
<<SQLSTATE;
create view root.sg.view_d1.s1 as select s1 from root.sg.d1;
<<SQLSTATE;
select s1,s2 into root.sg1.d1(s1,s2) from root.sg.d1;
<<SQLSTATE;
insert into root.data.d1(time,s1) values(1,false);
<<SQLSTATE;
show device templates;
<<SQLSTATE;
create device template t3(temperature FLOAT encoding=Gorilla, status BOOLEAN encoding=PLAIN);
<<SQLSTATE;
drop device template t2;
<<SQLSTATE;
insert into root.db.d1(time,s1) values(1,1);
<<SQLSTATE;
revoke write_data on root.** from user user01;
<<SQLSTATE;
delete timeseries root.sg.d1.s1;
<<SQLSTATE;
delete view root.sg.view_device.s1;
<<SQLSTATE;
create database root.test;
<<SQLSTATE;
delete database root.**;
<<SQLSTATE;

--13.user02登录
--13.1 WRITE_DATA可支持的操作
connect user02/pass123456789;
show version;
<<CHECKCODE;
GRANT WRITE_DATA ON root.sg.d1.** TO USER user03;
show databases;
show child paths root;
count nodes root.sg.** level=2;
show devices;
count devices;
show timeseries;
count timeseries;
show view;
show all ttl;
select * from root.sg.**;
insert into root.sg.d1(time,s1,s2) values(5,5,5);
select s1,s2 from root.sg.** align by device;
select s1 from root.sg.** where time=3;
select * from root.sg.** where s1=3;
select sin((s1+s2)/2) from root.sg.**;
select count(*) from root.sg.** group by level=1;
select last(*) from root.sg.**;
select count(s1) from root.sg.** align by device;
delete from root.sg.d1.s1 where time=5;
select * from root.sg.d1;
--取消权限，root用户再次授予权限
revoke write_data on root.sg.d1.** from user user02;
LIST PRIVILEGES OF USER `user02`;
connect root/TimechoDB@2021;
GRANT WRITE_DATA ON root.sg.d1.** TO USER user02;
connect user02/pass123456789;
LIST PRIVILEGES OF USER `user02`;

--13.2 WRITE_DATA不支持的操作
insert into root.sg.d2(time,s1,s2) values(5,5,5);
<<SQLSTATE;
create aligned timeseries root.sg.d1(s5 double encoding=rle, s6 int32 encoding=rle);
<<SQLSTATE;
create timeseries root.sg.d2.s3 with datatype=INT32;
<<SQLSTATE;
create view root.sg.view_d1.s1 as select s1 from root.sg.d1;
<<SQLSTATE;
select s1,s2 into root.sg2.d1(s1,s2) from root.sg.d1;
<<SQLSTATE;
delete from root.sg.**;
<<SQLSTATE;
delete timeseries root.sg.d1.s1;
<<SQLSTATE;

--14.user03登录
--14.1 WRITE_DATA可支持的操作
connect user03/pass123456789;
show version;
<<CHECKCODE;
select * from root.sg.** align by device;
insert into root.sg.nonaligned_template(time,temperature,status) values(10,18.8,false);
select * from root.sg.nonaligned_template;
insert into root.sg.aligned_template(time,temperature) values(10,20.1);
select * from root.sg.aligned_template;
select last(*) from root.sg.** order by timeseries;
delete from root.sg.aligned_template.temperature;
select * from root.sg.** align by device;
--14.2 WRITE_DATA不支持的操作
revoke write_data on root.sg.aligned_template.temperature from user user03;
<<SQLSTATE;
insert into root.sg.d2(time,s1,s2) values(6,6,6);
<<SQLSTATE;
delete from root.**;
<<SQLSTATE;
delete timeseries root.sg.nonaligned_template.**;
<<SQLSTATE;

--15.user04登录
--15.1 WRITE_DATA可支持的操作
connect user04/pass123456789;
show version;
<<CHECKCODE;
show databases;
show timeseries;
select * from root.sg.**;
delete from root.data;
--15.2 WRITE_DATA不支持的操作
insert into root.data.d1(time,s1) values(1,true);
<<SQLSTATE;
delete database root.**;
<<SQLSTATE;

--16.清理环境
connect root/TimechoDB@2021;
delete timeseries of device template t1 from root.sg.aligned_template;
<<NULL;
unset device template t1 from root.sg.aligned_template;
<<NULL;
drop device template t1;
<<NULL;
delete timeseries of device template t2 from root.sg.nonaligned_template;
<<NULL;
unset device template t2 from root.sg.nonaligned_template;
<<NULL;
drop device template t2;
<<NULL;
DELETE DATABASE root.**;
<<NULL;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP USER user03;
<<NULL;
DROP USER user04;
<<NULL;
