connect root/TimechoDB@2021;

// 对齐序列 stateful/stateless before/after insert trigger
// user_01 是trigger插件使用的用户
// user_trigger 是管理trigger的用户:all
// user_02 是数据写入的用户
// 1. insert
// 2. partial insert
// 3. select into


-- 清理
drop database root.**;
<<NULL;
drop trigger stateless01;
<<NULL;
drop trigger `stateful-02`;
<<NULL;
DROP USER user_01;
<<NULL;
DROP USER user_02;
<<NULL;
DROP USER user_trigger;
<<NULL;

-- prepare
-- 创建用户并授权
CREATE USER user_01 'pass123456789';
GRANT write ON root.ln.** TO USER user_01;
LIST PRIVILEGES OF USER user_01;

-- 没有读权限，trigger会正常工作？
CREATE USER user_trigger 'pass123456789';
GRANT all ON root.** TO USER user_trigger;

CREATE USER user_02 'pass123456789';
GRANT write_schema ON root.triggertest.** TO USER user_02;
GRANT write_data ON root.triggertest.d1.s2 TO USER user_02;


-- 创建数据库
create database root.triggertest;
create database root.ln;

CREATE aligned TIMESERIES root.triggertest.d1(s1 DATATYPE=DOUBLE ENCODING=GORILLA compression=LZ4, s2 DATATYPE=DOUBLE ENCODING=GORILLA compression=snappy);

connect user_trigger/pass123456789;
LIST PRIVILEGES OF USER user_trigger;
-- use_trigger
CREATE STATELESS TRIGGER `stateless01`
AFTER INSERT
ON root.triggertest.*.s1
AS 'org.example.DoubleValueMonitor'
WITH (
  'remote_ip'='127.0.0.1',
  'user'='user_01',
  'password' = 'pass123456789',
  'lo' = '30',
  'hi' = '45.5'
);
CREATE STATEful TRIGGER `stateful-02`
BEFORE INSERT
ON root.triggertest.*.s2
AS 'org.example.DoubleValueMonitor'
WITH (
  'remote_ip'='127.0.0.1',
  'user'='user_01',
  'password' = 'pass123456789',
  'lo' = '10',
  'hi' = '15.5'
);

show triggers;

-- 1. insert into
connect user_02/pass123456789;
LIST PRIVILEGES OF USER user_02;

-- write_data
insert into root.triggertest.d1(time, s1) values (1, 24),(2,33);
<<SQLSTATE;
insert into root.triggertest.d1(time, s2) values (1, 13),(2,8.8);
sleep 500;

--read_data
-- 11条
select * from root.triggertest.d1;


connect user_01/pass123456789;
LIST PRIVILEGES OF USER user_01;

--read_data
-- 期望1个结果
select count(*) from root.ln.alerting;

-- write_data
insert into root.triggertest.d1(time, s1, s2) values (21, 40, 15),(22,39,8),(23,9,13),(24,8,9),(25,113,217);
<<SQLSTATE;

-- 期望1个结果
select count(*) from root.ln.alerting;


-- 2. partial insert
connect user_02/pass123456789;
LIST PRIVILEGES OF USER user_02;

insert into root.triggertest.d1(time, s1, s2) values (21, 40, 15),(22,39,8),(23,9,13),(24,8,9),(25,113,217);
<<SQLSTATE;

select * from root.triggertest.** align by device;


connect user_01/pass123456789;
LIST PRIVILEGES OF USER user_01;
-- 期望1个结果
select count(*) from root.ln.alerting;




-- 3. select into
connect user_02/pass123456789;
LIST PRIVILEGES OF USER user_02;

select s1,s2 into root.triggertest.new_d1(s1,s2) from root.triggertest.d1;
<<SQLSTATE;
select * from root.triggertest.new_d1;

sleep 500;
connect user_01/pass123456789;
-- 期望2个结果
select count(*) from root.ln.alerting;


connect root/TimechoDB@2021;
revoke write ON root.ln.** from USER user_01;
grant write_data on root.ln.** to user user_01;
LIST PRIVILEGES OF USER user_01;


connect user_02/pass123456789;
LIST PRIVILEGES OF USER user_02;
-- 不触发trigger
insert into root.triggertest.d1(time, s2) values (31, 1);
-- 触发trigger
insert into root.triggertest.d1(time, s2) values (32, 32);

select * from root.triggertest.d1;





-- 清理
connect root/TimechoDB@2021;
-- 期望26个结果
select count(*) from root.ln.alerting;
-- 注释
--select * from root.ln.alerting;

drop database root.**;
<<NULL;
drop trigger stateless01;
<<NULL;
drop trigger `stateful-02`;
<<NULL;
DROP USER user_01;
<<NULL;
DROP USER user_02;
<<NULL;
DROP USER user_trigger;
<<NULL;

