//一、count_time 查询结果集的时间戳的数量

--0. 清理数据
connect root/TimechoDB@2021;
delete database root.**;
<<NULL;

--1.创建数据库和时间序列
create database root.sg;

--2.插入数据
create timeseries root.sg.d1.s1 with datatype=INT32,encoding=RLE tags(apartment=D001);
create timeseries root.sg.d1.s2 with datatype=INT32,encoding=RLE tags(apartment=D002);
create timeseries root.sg.d2.s1 with datatype=INT32,encoding=RLE;
create timeseries root.sg.d2.s2 with datatype=INT32,encoding=RLE;

--3.查看数据库，设备，时间序列
show databases;
show devices;
show timeseries;

--4. 插入数据并查询所有数据
insert into root.sg.d1(time,s1,s2) values(1,1,1);
insert into root.sg.d1(time,s1,s2) values(2,null,2);
insert into root.sg.d1(time,s1,s2) values(3,3,3);
insert into root.sg.d1(time,s1,s2) values(4,4,null);
insert into root.sg.d1(time,s1,s2) values(5,null,null);
insert into root.sg.d1(time,s1,s2) values(6,6,6);
insert into root.sg.d1(time,s1,s2) values(7,null,7);
insert into root.sg.d1(time,s1,s2) values(8,8,8);
insert into root.sg.d1(time,s1,s2) values(9,9,9);
insert into root.sg.d1(time,s1,s2) values(10,10,0);
insert into root.sg.d2(time,s1,s2) values(1,null,1);
insert into root.sg.d2(time,s1,s2) values(2,2,null);
insert into root.sg.d2(time,s1,s2) values(3,3,3);
insert into root.sg.d2(time,s1,s2) values(4,null,null);
insert into root.sg.d2(time,s1,s2) values(5,5,5);
select * from root.sg.**;

--5.count_time普通查询
select count_time(*) from root.sg.**;
select count_time(*) from root.sg.d1,root.sg.d2;
select count_time(*) as test_count from root.sg.* where time >= 2 and time<7;

--6.与align by device 搭配连用：每个设备的结果集的时间戳数量
select count_time(*) from root.sg.** align by device;
select count_time(*) from root.sg.d1,root.sg.d2 align by device;

--7.与group by time 连用
select count_time(*) from root.sg.** group by([0,10),2ms);
select count_time(*) from root.sg.** group by([0,10),2ms) align by device;
select count_time(*) from root.sg.d1,root.sg.d2 group by([0,10),2ms) align by device;

--8.与group by variation连用
select __endTime,count_time(*) from root.sg.d1 group by variation(s1,0,ignoreNull=False);
select __endTime,count_time(*) from root.sg.d2 group by variation(s1,1,ignoreNull=true);
select __endTime,count_time(*) from root.sg.** group by variation(s1,0,ignoreNull=False) align by device;


--9.与group by session连用
select __endTime, count_time(*) from root.sg.** group by session(2ms);
select __endTime, count_time(*) from root.sg.d1, root.sg.d2 group by session(2ms) align by device;

--10.与group by condition连用
select count_time(*) from root.sg.d1 group by condition(s1=1,keep>0,ignoreNull=false);
select count_time(*) from root.sg.** group by condition(s1=1,keep>0,ignoreNull=false) align by device;

--11.where条件过滤查询
select count_time(*) from root.sg.** where time >= 3 and time < 10;
select * from root.sg.** where s1 < 5;
select count_time(*) from root.sg.** where s1 < 5;
select count_time(*) from root.sg.** where s1 < 5 align by device;

--12.结果集排序
select count_time(*) from root.sg.** group by([0, 10), 2ms) order by time desc;
select count_time(*) from root.sg.** group by([0, 10), 2ms) order by time desc align by device;
select count_time(*) from root.sg.** group by([0, 10), 2ms) order by device desc align by device;
select count_time(*) from root.sg.** group by([0, 10), 2ms) order by time,device desc align by device;

--13.结果集分页
select count_time(*) from root.sg.** align by device;
select count_time(*) from root.sg.** limit 1 offset 1 align by device;
select count_time(*) from root.sg.** slimit 1 offset 0 align by device;
select count_time(*) from root.sg.** limit 1 offset 1 slimit 1 soffset 0 align by device;

--14.查询写回【select into】
select count_time(*) into root.sg.count_time(s1) from root.sg.d1 align by device;
show timeseries root.sg.count_time.s1;
select * from root.sg.count_time;

--15.连续查询【CQ】
CREATE CONTINUOUS QUERY cq1
RESAMPLE EVERY 20s
BEGIN SELECT count_time(*) INTO root.sg.cq_count_time(s1) FROM root.sg.d1 group by time(10s) align by device END;
show cqs;
show timeseries root.sg.cq_count_time.s1;
insert into root.sg.d1(time,s1,s2) values(now(),1,1);
select count(*) from root.sg.cq_count_time;
select count_time(*) from root.sg.cq_count_time align by device;

--16.视图【VIEW】
create view root.sg.view_count_time.s1 as select s1 from root.sg.d1;
show timeseries root.sg.view_count_time.**;
select count_time(*) from root.sg.view_count_time;

--17.having语句不支持使用count_time，使用count_time聚合函数不支持使用having
select count_time(*) from root.sg.d1 group by ([0,10),2ms) having count_time(*) > 1;
<<SQLSTATE;
select count_time(*) from root.sg.* having count(*) > 1;
<<SQLSTATE;
select count_time(*) from root.sg.* having count_time(s1) > 1;
<<SQLSTATE;

--18.count_time表达式只能为*，不支持其他路径名称
select count_time(s1) from root.sg.**;
<<SQLSTATE;
select count_time(s1) from root.sg.d1;
<<SQLSTATE;
select count_time(d1.s1) from root.sg.**;
<<SQLSTATE;
select count_time(d1.*) from root.sg.*;
<<SQLSTATE;
select count_time(* + *) from root.sg.*;
<<SQLSTATE;

--19.count_time不能和其他的聚合函数一起使用
select sum(s1) / count_time(*) from root.sg.*;
<<SQLSTATE;
select (count_time(*)+count(*)) from root.sg.*;
<<SQLSTATE;

--20.不支持多个count_time连用
select count_time(*),count_time(*) from root.sg.*;
<<SQLSTATE;
select count_time(*),count_time(*) from root.sg.d1,root.sg.d2;
<<SQLSTATE;

--21.不支持与group by level连用
select count_time(*) from root.sg.** group by level=1;
<<SQLSTATE;

--22.不支持与group by tags连用
select count_time(*) from root.sg.** group by tags(apartment); 
<<SQLSTATE;

--23.不支持原始查询和count_time同时查询
select s1, count_time(*) from root.sg.**;
<<SQLSTATE;

--24.不支持last查询和count_time查询
select last(*), count_time(*) from root.sg.**;
<<SQLSTATE;

--25.清理数据
drop cq cq1;
<<NULL;
delete database root.**;
<<NULL;


//二、删除一些行数据前后的结果；

--0. 清理数据
connect root/TimechoDB@2021;
delete database root.**;
<<NULL;

--1.创建数据库和时间序列
create database root.sg;
create aligned timeseries root.sg.d1(s1 FLOAT encoding=PLAIN compressor=SNAPPY, s2 FLOAT encoding=PLAIN compressor=SNAPPY);

--2.插入数据
insert into root.sg.d1(time,s1,s2) values(1,1,1),(2,2,2),(3,3,3),(4,4,4),(5,5,5);
insert into root.sg.d1(time,s1,s2) values(6,1,1),(7,2,2),(8,3,3),(9,4,4),(10,5,5);
select count_time(*) from root.sg.d1;

--3.删除数据后执行count_time查询
delete from root.sg.d1.* where time >3 and time <=6;
select count_time(*) from root.sg.d1;

--4.清理数据
delete database root.**;
<<NULL;

//三、已刷盘和未刷盘count_time查询

--0. 清理数据
connect root/TimechoDB@2021;
delete database root.**;
<<NULL;

--1.创建数据库和时间序列
create database root.sg;
create aligned timeseries root.sg.d1(s1 FLOAT encoding=PLAIN compressor=SNAPPY, s2 FLOAT encoding=PLAIN compressor=SNAPPY);

--2.插入数据并执行count_time查询
insert into root.sg.d1(time,s1,s2) values(1,1,1);
insert into root.sg.d1(time,s1,s2) values(2,2,2);
insert into root.sg.d1(time,s1,s2) values(3,3,3);
insert into root.sg.d1(time,s1,s2) values(4,4,4);
insert into root.sg.d1(time,s1,s2) values(5,5,5);
insert into root.sg.d1(time,s1,s2) values(6,6,6);
select * from root.sg.d1;
select count_time(*) from root.sg.d1;

--3.flush之后执行count_time查询
flush;
select count_time(*) from root.sg.d1;

--4.清理数据
delete database root.**;
<<NULL;
