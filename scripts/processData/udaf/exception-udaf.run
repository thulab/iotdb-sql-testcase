connect root/root;
-- 对于各个udaf的override方法抛出异常的测试


drop timeseries root.sg.d0.s0;<<NULL;
drop function StateDeSerializeException;<<NULL;
drop function StateDestroyStateException;<<NULL;
drop function StateResetException;<<NULL;
drop function StateSerializeException;<<NULL;
drop function UDAFAddInputException;<<NULL;
drop function UDAFBeforeStartException;<<NULL;
drop function UDAFCombineStateException;<<NULL;
drop function UDAFCreateStateException;<<NULL;
drop function UDAFOutputFinalException;<<NULL;
drop database root.**;<<NULL;

-- 准备数据
create TIMESERIES root.sg.d0.s0 int32;
insert into root.sg.d0(time,s0) values (-100,-100),(-90,-90),(-50,-50),(-30,-30),(-10,-10),(0,0),(10,10),(20,20),(30,30),(50,50);

create TIMESERIES root.sg.d1.s0 float;
insert into root.sg.d1(time,s0) values (-100,-100),(-90,-90),(-50,-50),(-30,-30),(-10,-10),(0,0),(10,10),(20,20),(30,30),(50,50);

-- exception
create function StateDeSerializeException as "com.timecho.udaf.test.exception.StateDeSerializeException";
select StateDeSerializeException(s0) from root.sg.d0;
<<SQLSTATE;

create function StateDestroyStateException as "com.timecho.udaf.test.exception.StateDestroyStateException";
select StateDestroyStateException(s0) from root.sg.d0;
<<SQLSTATE;

create function StateResetException as "com.timecho.udaf.test.exception.StateResetException";
select StateResetException(s0) from root.sg.d0;
<<SQLSTATE;

create function StateSerializeException as "com.timecho.udaf.test.exception.StateSerializeException";
select StateSerializeException(s0) from root.sg.d0;
<<SQLSTATE;



create function UDAFAddInputException as "com.timecho.udaf.test.exception.UDAFAddInputException";
select UDAFAddInputException(s0) from root.sg.d0;
<<SQLSTATE;

create function UDAFBeforeStartException as "com.timecho.udaf.test.exception.UDAFBeforeStartException";
select UDAFBeforeStartException(s0) from root.sg.d0;
<<SQLSTATE;

-- combine state 在多个 Aggregator-0: UDAF, PARTIAL 时起作用
create function UDAFCombineStateException as "com.timecho.udaf.test.exception.UDAFCombineStateException";
select UDAFCombineStateException(s0) from root.sg.d* group by level=1;
<<SQLSTATE;
select UDAFCombineStateException(s0) from root.sg.d0 group by ([-100,100),10ms);



create function UDAFCreateStateException as "com.timecho.udaf.test.exception.UDAFCreateStateException";
select UDAFCreateStateException(s0) from root.sg.d0;
<<SQLSTATE;

create function UDAFOutputFinalException as "com.timecho.udaf.test.exception.UDAFOutputFinalException";
select UDAFOutputFinalException(s0) from root.sg.d0;
<<SQLSTATE;





drop function StateDeSerializeException;
drop function StateDestroyStateException;
drop function StateResetException;
drop function StateSerializeException;
drop function UDAFAddInputException;
drop function UDAFBeforeStartException;
drop function UDAFCombineStateException;
drop function UDAFCreateStateException;
drop function UDAFOutputFinalException;
drop function UDAFUnImplements; <<NULL;
drop function zero_jar; <<NULL;


-- 清理
drop timeseries root.sg.d0.s0;<<NULL;
drop database root.**;<<NULL;


