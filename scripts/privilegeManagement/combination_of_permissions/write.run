//WRITE：创建元数据，插入数据
//WRITE_SCHEMA、WRITE_DATA

--0.清理环境
connect root/root;
delete timeseries of device template t1 from root.sg.aligned_template;
<<NULL;
unset device template t1 from root.sg.aligned_template;
<<NULL;
drop device template t1;
<<NULL;
delete timeseries of device template t2 from root.sg.nonaligned_template;
<<NULL;
unset device template t2 from root.sg.nonaligned_template;
<<NULL;
delete timeseries of device template t2 from root.sg.d_template;
<<NULL;
drop device template t2;
<<NULL;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP USER user03;
<<NULL;
DROP USER user04;
<<NULL;
DROP USER `null`;
<<NULL;
DROP USER `USER`;
<<NULL;
DELETE DATABASE root.**;
<<NULL;

--1.创建数据库
create database root.sg;
create database root.data;

--2.创建对齐时间序列
create aligned timeseries root.sg.d1(s1 float encoding=rle, s2 int64 encoding=rle);

--3.创建非对齐时间序列
create timeseries root.sg.d2.s1 with datatype=float,encoding=rle;
create timeseries root.sg.d2.s2 with datatype=int64,encoding=rle;

--4.分别创建、挂载、激活对齐序列的元数据模板
--template:t1
create device template t1 aligned (temperature FLOAT encoding=Gorilla, status BOOLEAN encoding=PLAIN);
show device templates;
show nodes in device template t1;
set device template t1 to root.sg.aligned_template;
show paths set device template t1;
create timeseries using device template on root.sg.aligned_template;
show paths using device template t1;

--5.分别创建、挂载、激活非对齐序列的元数据模板
--template:t2
create device template t2(temperature FLOAT encoding=Gorilla, status BOOLEAN encoding=PLAIN);
show device templates;
show nodes in device template t2;
set device template t2 to root.sg.nonaligned_template;
show paths set device template t2;
create timeseries using device template on root.sg.nonaligned_template;
show paths using device template t2;

--6.创建视图序列
create view root.sg.view_d1.calculation as select (s1+s2)/2 from root.sg.d1;
create view root.sg.view_d2.calculation as select sin(s1*s2) from root.sg.d2;

--7.分别查看数据库、设备、时间序列列表、视图（view）
show databases;
show devices root.**;
show timeseries root.sg.**;
show view;

--8.插入数据
insert into root.sg.d1(time,s1,s2) values(1,1,1),(2,2,2),(3,3,3);
insert into root.sg.d2(time,s1,s2) values(1,1,1),(2,2,2),(3,3,3);
insert into root.sg.aligned_template(time,temperature,status) values(1,20,false),(2,22.1,true),(3,18,false);
insert into root.sg.nonaligned_template(time,temperature,status) values(1,10.5,false),(2,0.1,true),(3,22.2,false);

--8.创建用户
CREATE USER user01 'pass1234';
CREATE USER user02 'pass1234';
CREATE USER user03 'pass1234';
CREATE USER user04 'pass1234';
CREATE USER `USER` 'pass1234';
CREATE USER `null` 'pass1234';

--9.检查用户是否有privilege存在（列出用户所有权限）
LIST USER;
LIST PRIVILEGES OF USER `user01`;
LIST PRIVILEGES OF USER `user02`;
LIST PRIVILEGES OF USER `user03`;
LIST PRIVILEGES OF USER `user04`;
LIST PRIVILEGES OF USER `null`;
LIST PRIVILEGES OF USER `USER`;

--10.进行赋权
GRANT WRITE ON root.** TO USER user01;
GRANT WRITE ON root.sg.d1.** TO USER user02 with grant option;
GRANT WRITE ON root.sg.aligned_template.temperature TO USER user03;
grant WRITE on root.** to user `null`;
grant WRITE on root.**  user `USER`;
<<SQLSTATE;
grant write to user `USER`;
<<SQLSTATE;
grant write on root.** TO `USER`;
<<SQLSTATE;
grant ALL on root.** TO user `USER`;
grant write on root.** TO user `USER`;
revoke write on root.** from user `USER`;
grant write on root.** TO user `USER`;
GRANT WRITE ON root.** TO USER staff;
<<SQLSTATE;
GRANT WRITE ON root.** TO USER `root`;
<<SQLSTATE;
revoke write on root.** from user user1;
<<SQLSTATE;
revoke write on root.sg.** from user `null`;

--11.列出用户已有的权限
LIST PRIVILEGES OF USER `user01`;
LIST PRIVILEGES OF USER `user02`;
LIST PRIVILEGES OF USER `user03`;
LIST PRIVILEGES OF USER `null`;
LIST PRIVILEGES OF USER `USER`;

--12.user01登录
--12.1 WRITE（WRITE_SCHEMA | WRITE_DATA） 支持的操作
connect user01/pass1234;
show variables;
show version;
<<CHECKCODE;
list privileges of user user01;
create aligned timeseries root.sg.d1(s3 double encoding=rle, s4 int32 encoding=rle);
create timeseries root.sg.d2.s3 with datatype=INT32;
create view root.sg.view_d1.s1 as select s1 from root.sg.d1;
alter view root.sg.view_d1.s1 UPSERT TAGS(tag1=v1,tag2=v2) ATTRIBUTES(attr1=D1,attr2=D2);
show databases;
count databases;
show child paths root.sg;
show child nodes root.sg.*;
count nodes root.sg.** LEVEL=2;
show devices;
count devices;
show timeseries;
count timeseries;
show view;
show all ttl;
select * from root.**;
insert into root.sg.d1(time,s1,s2) values(4,4,4);
insert into root.sg.d2(time,s1,s2) values(4,4,4);
select s1,s2 from root.sg.** align by device;
select s1 from root.** where time=3;
select * from root.** where s1=3;
select count(*) from root.**;
select count(*) from root.** group by level=1;
select last(*) from root.** order by timeseries;
select sin((s1+s2)/2) from root.sg.**;
delete view root.sg.view_d1.calculation;
delete view root.sg.view_d1.s1

--12.2 WRITE（WRITE_SCHEMA | WRITE_DATA） 不支持的操作
select s1,s2 into root.db.d1(s1,s2) from root.sg.d1;
<<SQLSTATE;
create schema template t3(temperature FLOAT encoding=Gorilla, ID INT64 encoding=PLAIN);
<<SQLSTATE;
show schema templates;
<<SQLSTATE;
create database root.db;
<<SQLSTATE;
delete database root.**;
<<SQLSTATE;
create user user05 'pass1234';
<<SQLSTATE;
list user;
<<SQLSTATE;
list role;
<<SQLSTATE;
list privileges of user user02;
<<SQLSTATE;
revoke read on root.** from user user01;
<<SQLSTATE;
set system to readonly;
<<SQLSTATE;
CREATE CONTINUOUS QUERY cq1 RESAMPLE EVERY 10s BEGIN SELECT max_value(temperature) INTO root.ln.wf01(temperature_max) FROM root.ln.wf01 GROUP BY(5s) END;
<<SQLSTATE;
show functions;
<<SQLSTATE;

--13.user02登录
--WRITE（WRITE_SCHEMA | WRITE_DATA）
connect user02/pass1234;
show version;
<<CHECKCODE;
list privileges of user user02;
show databases;
count databases;
show child paths root;
show child nodes root.sg.*;
count nodes root.sg.** LEVEL=2;
show devices;
count devices;
show timeseries;
count timeseries;
show view;
show all ttl;
select * from root.**;
select s1 from root.sg.d1 where time=3;
select * from root.** where s1=3;
select count(*) from root.**;
select count(*) from root.** group by level=1;
select last(*) from root.**;
select sin((s1+s2)/2) from root.sg.d1;
delete from root.sg.d1.s1;
delete timeseries root.sg.d1.s1;
GRANT WRITE ON root.sg.d1.** TO USER user04;
GRANT READ ON root.sg.d1.** TO USER user04;
<<SQLSTATE;

--14.user03登录，执行查询元数据
connect user03/pass1234;
show version;
<<CHECKCODE;
list privileges of user user03;
show databases;
count databases;
show child paths root.sg.*;
show child nodes root.sg;
count nodes root.sg.** level=2;
show devices root.sg.**;
count devices;
show timeseries root.sg.**;
count timeseries;
show view;
show all ttl;
insert into root.sg.aligned_template(time,temperature) values(10,20.1);
select * from root.** align by device;
insert into root.sg.nonaligned_template(time,temperature,status) values(10,18.8,false);
<<SQLSTATE;
delete from root.sg.aligned_template.temperature;
select * from root.**;

--15.user04登录，执行查询元数据
connect user04/pass1234;
show version;
<<CHECKCODE;
list privileges of user user04;
show databases;
show devices;
show timeseries;
select * from root.**;
insert into root.sg.d1(time,s1,s2) aligned values(20,20,20);
select last(*) from root.sg.d1;

--16.清理环境
connect root/root;
delete timeseries of device template t1 from root.sg.aligned_template;
<<NULL;
unset device template t1 from root.sg.aligned_template;
<<NULL;
drop device template t1;
<<NULL;
delete timeseries of device template t2 from root.sg.nonaligned_template;
<<NULL;
unset device template t2 from root.sg.nonaligned_template;
<<NULL;
drop device template t2;
<<NULL;
DROP USER user01;
<<NULL;
DROP USER user02;
<<NULL;
DROP USER user03;
<<NULL;
DROP USER user04;
<<NULL;
DROP USER `null`;
<<NULL;
DROP USER `USER`;
<<NULL;
DELETE DATABASE root.**;
<<NULL;
