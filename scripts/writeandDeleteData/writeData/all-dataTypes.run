connect root/root;

// int32,int64,timestamp,float,double,date,string,text,blob max and min value test
// author: changxue  date: 2025-02-21
// 基本类型：int 二进制位数：32
// 包装类：java.lang.integer
// 最小值：integer.min_value= -2147483648 （-2的31次方）
// 最大值：integer.max_value= 2147483647  （2的31次方-1）
// 3、
// 基本类型：long 二进制位数：64
// 包装类：java.lang.long
// 最小值：long.min_value=-9223372036854775808 （-2的63次方）
// 最大值：long.max_value=9223372036854775807 （2的63次方-1）
// 4、
// 基本类型：float 二进制位数：32
// 包装类：java.lang.float
// 最小值：float.min_value=1.4e-45 （2的-149次方）
// 最大值：float.max_value=3.4028235e38 （2的128次方-1）
// 5、
// 基本类型：double 二进制位数：64
// 包装类：java.lang.double
// 最小值：double.min_value=4.9e-324 （2的-1074次方）
// 最大值：double.max_value=1.7976931348623157e308 （2的1024次方-1）

--0. 清理环境
drop DATABASE root.**;<<NULL;

create database root.datatypes;
// boolean
create timeseries root.datatypes.d_boolean.s0 WITH DATATYPE=boolean,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;
insert into root.datatypes.d_boolean(time,s0) values (10,'t');
<<SQLSTATE;
insert into root.datatypes.d_boolean(time,s0) values (11,'f');
<<SQLSTATE;
insert into root.datatypes.d_boolean(time,s0) values (12, 'T');
<<SQLSTATE;
insert into root.datatypes.d_boolean(time,s0) values (13,'F');
<<SQLSTATE;
insert into root.datatypes.d_boolean(time,s0) values (14,'true');
<<SQLSTATE;
insert into root.datatypes.d_boolean(time,s0) values (15,'false');
<<SQLSTATE;
insert into root.datatypes.d_boolean(time,s0) values (16,'TRUE');
<<SQLSTATE;
insert into root.datatypes.d_boolean(time,s0) values (17,'FALSE');
<<SQLSTATE;
insert into root.datatypes.d_boolean(time,s0) values (18,TRUE);
insert into root.datatypes.d_boolean(time,s0) values (19,FALSE);
insert into root.datatypes.d_boolean(time,s0) values (20,0);
insert into root.datatypes.d_boolean(time,s0) values (21,1);
insert into root.datatypes.d_boolean(time,s0) values (22,True);
insert into root.datatypes.d_boolean(time,s0) values (23,FaLse);

insert into root.datatypes.d_boolean(time,s0) values (10000,true),(20000,false),(35000,-1.5),(30000,-1),(40000,0),(50000,1),(60000,1.5),(70000,'string'),(80000,'1989-06-15'),(90000,638323200000); 
<<SQLSTATE;
show timeseries root.datatypes.d_boolean.*;
select s0 from root.datatypes.d_boolean;




// int32
create timeseries root.datatypes.d_INT32.s0 WITH DATATYPE=int32,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;
insert into root.datatypes.d_INT32(time,s0) values (-2147483649,-2147483649);
<<SQLSTATE;
insert into root.datatypes.d_INT32(time,s0) values (-2147483648,-2147483648);
insert into root.datatypes.d_INT32(time,s0) values (-214748364,-214748364);
insert into root.datatypes.d_INT32(time,s0) values (-1,-1);
insert into root.datatypes.d_INT32(time,s0) values (0,0);
insert into root.datatypes.d_INT32(time,s0) values (214748364,214748364);
insert into root.datatypes.d_INT32(time,s0) values (2147483647,2147483647);
insert into root.datatypes.d_INT32(time,s0) values (2147483648,2147483648); 
<<SQLSTATE;
insert into root.datatypes.d_INT32(time,s0) values (10000,true),(20000,false),(35000,-1.5),(30000,-1),(40000,0),(50000,1),(60000,1.5),(70000,'string'),(80000,'1989-06-15'),(90000,638323200000); 
<<SQLSTATE;
show timeseries root.datatypes.d_INT32.*;
select s0 from root.datatypes.d_INT32;




// int64
create timeseries root.datatypes.d_INT64.s0 WITH DATATYPE=int64,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;
-- timestamp_precision_check_enabled=false
insert into root.datatypes.d_INT64(time,s0) values (-9223372036854775809,-9223372036854775808);
<<SQLSTATE;
--error if timestamp_precision_check_enabled==true;
insert into root.datatypes.d_INT64(time,s0) values (-9223372036854775808,-9223372036854775808);
<<SQLSTATE;
insert into root.datatypes.d_INT64(time,s0) values (-10000000000000,-90);
--error if timestamp_precision_check_enabled==true;
insert into root.datatypes.d_INT64(time,s0) values (-10000000000001,-91);
<<SQLSTATE;
insert into root.datatypes.d_INT64(time,s0) values (-2147483651,-9223372036854775809);
<<SQLSTATE;
insert into root.datatypes.d_INT64(time,s0) values (-2147483650,-9223372036854775808);

insert into root.datatypes.d_INT64(time,s0) values (-2147483649,-2147483649);
insert into root.datatypes.d_INT64(time,s0) values (-2147483648,-2147483648);
insert into root.datatypes.d_INT64(time,s0) values (-214748364,-214748364);
insert into root.datatypes.d_INT64(time,s0) values (-1,-1);
insert into root.datatypes.d_INT64(time,s0) values (0,0);
insert into root.datatypes.d_INT64(time,s0) values (214748364,214748364);
insert into root.datatypes.d_INT64(time,s0) values (2147483647,2147483647);
insert into root.datatypes.d_INT64(time,s0) values (2147483648,2147483648);

insert into root.datatypes.d_INT64(time,s0) values (2147483651,9223372036854775807);
--error if timestamp_precision_check_enabled==true;
insert into root.datatypes.d_INT64(time,s0) values (2147483652,9223372036854775808);
<<SQLSTATE;
insert into root.datatypes.d_INT64(time,s0) values (10000000000000,90);
--error if timestamp_precision_check_enabled==true;
insert into root.datatypes.d_INT64(time,s0) values (10000000000001,91);
<<SQLSTATE;

--error if timestamp_precision_check_enabled==true;
insert into root.datatypes.d_INT64(time,s0) values (9223372036854775807,9223372036854775807);
<<SQLSTATE;

insert into root.datatypes.d_INT64(time,s0) values (10000,true),(20000,false),(35000,-1.5),(30000,-1),(40000,0),(50000,1),(60000,1.5),(70000,'string'),(80000,'1989-06-15'),(90000,638323200000); 
<<SQLSTATE;
show timeseries root.datatypes.d_INT64.*;
select s0 from root.datatypes.d_INT64;




// timestamp
create timeseries root.datatypes.d_Timestamp.s0 WITH DATATYPE=timestamp,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;
-- timestamp_precision_check_enabled=false
insert into root.datatypes.d_Timestamp(time,s0) values (-9223372036854775809,-9223372036854775808);
<<SQLSTATE;
--error if timestamp_precision_check_enabled==true;
insert into root.datatypes.d_Timestamp(time,s0) values (-9223372036854775808,-9223372036854775808);
<<SQLSTATE;
--error if timestamp_precision_check_enabled==true;
insert into root.datatypes.d_Timestamp(time,s0) values (9223372036854775807,9223372036854775807);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (-10000000000000,-90);
--error if timestamp_precision_check_enabled==true;
insert into root.datatypes.d_Timestamp(time,s0) values (-10000000000001,-91);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (-2147483651,-9223372036854775809);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (-2147483650,-9223372036854775808);
insert into root.datatypes.d_Timestamp(time,s0) values (-2147483649,-2147483649);
insert into root.datatypes.d_Timestamp(time,s0) values (-2147483648,-2147483648);
insert into root.datatypes.d_Timestamp(time,s0) values (-214748364,-214748364);
insert into root.datatypes.d_Timestamp(time,s0) values (-1,-1);
insert into root.datatypes.d_Timestamp(time,s0) values (0,0);
insert into root.datatypes.d_Timestamp(time,s0) values (214748364,214748364);
insert into root.datatypes.d_Timestamp(time,s0) values (2147483647,2147483647);
insert into root.datatypes.d_Timestamp(time,s0) values (2147483648,2147483648);
insert into root.datatypes.d_Timestamp(time,s0) values (2147483651,9223372036854775807);
--error if timestamp_precision_check_enabled==true;
insert into root.datatypes.d_Timestamp(time,s0) values (2147483652,9223372036854775808);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (10000000000000,90);
--error if timestamp_precision_check_enabled==true;
insert into root.datatypes.d_Timestamp(time,s0) values (10000000000001,91);
<<SQLSTATE;

insert into root.datatypes.d_Timestamp(time,s0) values (10000,true),(20000,false),(35000,-1.5),(30000,-1),(40000,0),(50000,1),(60000,1.5),(70000,'string'),(80000,'1989-06-15'),(90000,638323200000); 
<<SQLSTATE;

insert into root.datatypes.d_Timestamp(time,s0) values (1900-01-01,1900-01-01);
insert into root.datatypes.d_Timestamp(time,s0) values (1999-01-01 01:00:00,1999-01-01);
insert into root.datatypes.d_Timestamp(time,s0) values (2000-12-21 16:00:00,2000-12-21);
insert into root.datatypes.d_Timestamp(time,s0) values (2025-07-11 12:00:30,2025-07-11);
insert into root.datatypes.d_Timestamp(time,s0) values (2099-12-31 23:50:00,2099-12-31); 
insert into root.datatypes.d_Timestamp(time,s0) values (3000-01-01 00:00:00,3000-01-01); 
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (1800-01-01,10900-01-01);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (1800-01-11,9999-12-31);
insert into root.datatypes.d_Timestamp(time,s0) values (1800-01-15,0900-01-01);

insert into root.datatypes.d_Timestamp(time,s0) values (900-01-01,2900-01-01);
<<SQLSTATE;

insert into root.datatypes.d_Timestamp(time,s0) values (9999-12-31,1999-12-31);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (10000,true),(20000,false),(35000,-1.5),(30000,-1),(40000,0),(50000,1),(60000,1.5),(70000,'string'),(80000,'1989-06-15'),(90000,638323200000); 
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (1000,1999-13-01);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (2000,1999-02-29);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (3000,1999-01-32);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (4000,1999-04-31);
<<SQLSTATE;

insert into root.datatypes.d_Timestamp(time,s0) values (6000,2000-02-29);
insert into root.datatypes.d_Timestamp(time,s0) values (2000-02-29,2000-02-20 15:20:30.345+08:00);

insert into root.datatypes.d_Timestamp(time,s0) values (1999-01-32,1999-01-20);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (1999-02-29,1999-02-20);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (1999-04-31,1999-04-20);
<<SQLSTATE;
insert into root.datatypes.d_Timestamp(time,s0) values (1999-13-20,1999-12-20);
<<SQLSTATE;

show timeseries root.datatypes.d_Timestamp.*;
select s0 from root.datatypes.d_Timestamp;




// float
create timeseries root.datatypes.d_float.s0 WITH DATATYPE=float,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;
-- 江天:这个比较麻烦，从 Antlr 拿出来的时候就已经是能表示的最接近的值了，要做得改 antlr。
-- insert into root.datatypes.d_float(time,s0) values (-2147483651,1.5e-45);
-- <<SQLSTATE;
insert into root.datatypes.d_float(time,s0) values (-2147483650,1.4e-45);
insert into root.datatypes.d_float(time,s0) values (-2147483649,-2147483649);
insert into root.datatypes.d_float(time,s0) values (-2147483648,-2147483648);
-- float 的精度不佳，一般1-2位小数
insert into root.datatypes.d_float(time,s0) values (-2147473647,-63647.111111);
insert into root.datatypes.d_float(time,s0) values (-2147463646,-63646.222222);
insert into root.datatypes.d_float(time,s0) values (-2147463645,-63645.333333);
insert into root.datatypes.d_float(time,s0) values (-2147463644,-63644.444444);
insert into root.datatypes.d_float(time,s0) values (-2147463643,-83643.5555555);
insert into root.datatypes.d_float(time,s0) values (-2147463642,-63642.6666666);
insert into root.datatypes.d_float(time,s0) values (-2147463641,-63641.7777777);
insert into root.datatypes.d_float(time,s0) values (-2147463638,-63638.8888888);
insert into root.datatypes.d_float(time,s0) values (-2147463628,-63628.9999999);
insert into root.datatypes.d_float(time,s0) values (-2147463641,-2147463648);
insert into root.datatypes.d_float(time,s0) values (-214748364,-214748364);
insert into root.datatypes.d_float(time,s0) values (-1,-1);
insert into root.datatypes.d_float(time,s0) values (0,0);
insert into root.datatypes.d_float(time,s0) values (214748364,214748364);
insert into root.datatypes.d_float(time,s0) values (2147483647,2147483647);
insert into root.datatypes.d_float(time,s0) values (2147473647,463647.111);
insert into root.datatypes.d_float(time,s0) values (2147463646,463646.2222);
insert into root.datatypes.d_float(time,s0) values (2147463645,463645.33333);
insert into root.datatypes.d_float(time,s0) values (2147463644,463644.444444);
insert into root.datatypes.d_float(time,s0) values (2147463643,483643.5555555);
insert into root.datatypes.d_float(time,s0) values (2147463642,463642.6666666);
insert into root.datatypes.d_float(time,s0) values (2147463641,463641.7777777);
insert into root.datatypes.d_float(time,s0) values (2147463638,463638.888888);
insert into root.datatypes.d_float(time,s0) values (2147463628,463628.999999);
insert into root.datatypes.d_float(time,s0) values (2147483648,2147483648);
insert into root.datatypes.d_float(time,s0) values (2147483649,3.4028235e38);
insert into root.datatypes.d_float(time,s0) values (2147483650,3.5028235e38); 
<<SQLSTATE;
insert into root.datatypes.d_float(time,s0) values (10000,true),(20000,false),(35000,-1.5),(30000,-1),(40000,0),(50000,1),(60000,1.5),(70000,'string'),(80000,'1989-06-15'),(90000,638323200000); 
<<SQLSTATE;
show timeseries root.datatypes.d_float.*;
select s0 from root.datatypes.d_float;




// double
create timeseries root.datatypes.d_double.s0 WITH DATATYPE=double,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;
-- 江天:这个比较麻烦，从 Antlr 拿出来的时候就已经是能表示的最接近的值了，要做得改 antlr。
-- insert into root.datatypes.d_double(time,s0) values (-2147483653,5.2e-324);
-- <<SQLSTATE;
insert into root.datatypes.d_double(time,s0) values (-2147483652,4.9e-324);
insert into root.datatypes.d_double(time,s0) values (-2147483651,1.5e-45);
insert into root.datatypes.d_double(time,s0) values (-2147483650,1.4e-45);
insert into root.datatypes.d_double(time,s0) values (-2147483649,-2147483649);
insert into root.datatypes.d_double(time,s0) values (-2147483648,-2147483648);
insert into root.datatypes.d_double(time,s0) values (-2147473647,-2147463647.111);
insert into root.datatypes.d_double(time,s0) values (-2147463646,-2147463646.2222);
insert into root.datatypes.d_double(time,s0) values (-2147463645,-2147463645.33333);
insert into root.datatypes.d_double(time,s0) values (-2147463644,-2147463644.444444);
insert into root.datatypes.d_double(time,s0) values (-2147463643,-2147483643.5555555);
insert into root.datatypes.d_double(time,s0) values (-2147463642,-2147463642.6666666);
insert into root.datatypes.d_double(time,s0) values (-2147463641,-2147463641.7777777);
insert into root.datatypes.d_double(time,s0) values (-2147463638,-2147463638.888888);
insert into root.datatypes.d_double(time,s0) values (-2147463628,-2147463628.999999);
insert into root.datatypes.d_double(time,s0) values (-2147463641,-2147463648);
insert into root.datatypes.d_double(time,s0) values (-214748364,-214748364);
insert into root.datatypes.d_double(time,s0) values (-1,-1);
insert into root.datatypes.d_double(time,s0) values (0,0);
insert into root.datatypes.d_double(time,s0) values (214748364,214748364);
insert into root.datatypes.d_double(time,s0) values (2147483647,2147483647);
insert into root.datatypes.d_double(time,s0) values (2147473648,2147463647.111);
insert into root.datatypes.d_double(time,s0) values (2147463649,2147463646.2222);
insert into root.datatypes.d_double(time,s0) values (2147463650,2147463645.33333);
insert into root.datatypes.d_double(time,s0) values (2147463651,2147463644.444444);
insert into root.datatypes.d_double(time,s0) values (2147463652,2147483643.5555555);
insert into root.datatypes.d_double(time,s0) values (2147463653,2147463642.6666666);
insert into root.datatypes.d_double(time,s0) values (2147463654,2147463641.7777777);
insert into root.datatypes.d_double(time,s0) values (2147463655,2147463638.888888);
insert into root.datatypes.d_double(time,s0) values (2147463656,2147463628.999999);
insert into root.datatypes.d_double(time,s0) values (2147483657,2147483648);
insert into root.datatypes.d_double(time,s0) values (2147483658,3.4028235e38);
insert into root.datatypes.d_double(time,s0) values (2147483659,3.5028235e38);
insert into root.datatypes.d_double(time,s0) values (2147483660,1.7976931348623157e308);
insert into root.datatypes.d_double(time,s0) values (2147483661,1.8976931348623157e308); 
<<SQLSTATE;
insert into root.datatypes.d_double(time,s0) values (10000,true),(20000,false),(35000,-1.5),(30000,-1),(40000,0),(50000,1),(60000,1.5),(70000,'string'),(80000,'1989-06-15'),(90000,638323200000); 
<<SQLSTATE;
show timeseries root.datatypes.d_double.*;
select s0 from root.datatypes.d_double;




// date
create timeseries root.datatypes.d_date.s0 WITH DATATYPE=date,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;
insert into root.datatypes.d_date(time,s0) values (1900-01-01,'1900-01-01');
insert into root.datatypes.d_date(time,s0) values (1999-01-01 01:00:00,'1999-01-01');
insert into root.datatypes.d_date(time,s0) values (2000-12-21 16:00:00,'2000-12-21');
insert into root.datatypes.d_date(time,s0) values (2025-07-11 12:00:30,'2025-07-11');
insert into root.datatypes.d_date(time,s0) values (2099-12-31 23:50:00,'2099-12-31'); 
insert into root.datatypes.d_date(time,s0) values (3000-01-01 00:00:00,'3000-01-01'); 
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (1800-01-01,'0900-01-01');
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (900-01-01,'2900-01-01');
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (1999-12-31,'9999-12-31');
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (9999-12-31,'1999-12-31');
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (10000,true),(20000,false),(35000,-1.5),(30000,-1),(40000,0),(50000,1),(60000,1.5),(70000,'string'),(80000,'1989-06-15'),(90000,638323200000); 
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (1000,'1999-13-01');
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (2000,'1999-02-29');
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (3000,'1999-01-32');
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (4000,'1999-04-31');
<<SQLSTATE;

insert into root.datatypes.d_date(time,s0) values (6000,'2000-02-29');
insert into root.datatypes.d_date(time,s0) values (2000-02-29,'2000-02-20');

insert into root.datatypes.d_date(time,s0) values (1999-01-32,'1999-01-20');
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (1999-02-29,'1999-02-20');
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (1999-04-31,'1999-04-20');
<<SQLSTATE;
insert into root.datatypes.d_date(time,s0) values (1999-13-20,'1999-12-20');
<<SQLSTATE;

show timeseries root.datatypes.d_date.*;
select s0 from root.datatypes.d_date;




// string
create timeseries root.datatypes.d_string.s0 WITH DATATYPE=STRING,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;
insert into root.datatypes.d_string(time,s0) values (-2147483652,4.9e-324);
insert into root.datatypes.d_string(time,s0) values (-2147463628,-2147463628.999999);
insert into root.datatypes.d_string(time,s0) values (-2147483648,-2147483648);
insert into root.datatypes.d_string(time,s0) values (-214748364,-214748364);
insert into root.datatypes.d_string(time,s0) values (-1,-1);
insert into root.datatypes.d_string(time,s0) values (0,0);
insert into root.datatypes.d_string(time,s0) values (214748364,214748364);
insert into root.datatypes.d_string(time,s0) values (2147483648,2147483648);
insert into root.datatypes.d_string(time,s0) values (2147463638,2147463638.888888);
insert into root.datatypes.d_string(time,s0) values (2147483652,1.8976931348623157e308);
insert into root.datatypes.d_string(time,s0) values (1999-01-01 01:00:00,'1999-01-01');
insert into root.datatypes.d_string(time,s0) values (1999-02-01 01:00:00,'a');
insert into root.datatypes.d_string(time,s0) values (1999-03-01 01:00:00,'中文');
insert into root.datatypes.d_string(time,s0) values (1999-04-01 01:00:00,'org.apache.iotdb.session.subscription.consumer.tree.SubscriptionTreePullConsumer');
insert into root.datatypes.d_string(time,s0) values (1999-04-11 01:00:00,'0-9_@#$%^&*()-+=<>?[]{}"`~:,/\+=!');
insert into root.datatypes.d_string(time,s0) values (1999-05-01,'IoTDB 支持两种时序数据模型（SQL语法），管理的对象均为设备和测点树：以层级路径的方式管理数据，一条路径对应一个设备的一个测点表；以关系表的方式管理数据，一张表对应一类设备。');

insert into root.datatypes.d_string(time,s0) values (10000,true),(20000,false),(35000,-1.5),(30000,-1),(40000,0),(50000,1),(60000,1.5),(70000,'string'),(80000,'1989-06-15'),(90000,638323200000); 

show timeseries root.datatypes.d_string.*;
select s0 from root.datatypes.d_string;




// text
create timeseries root.datatypes.d_text.s0 WITH DATATYPE=text,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;
insert into root.datatypes.d_text(time,s0) values (-2147483652,4.9e-324);
insert into root.datatypes.d_text(time,s0) values (-2147463628,-2147463628.999999);
insert into root.datatypes.d_text(time,s0) values (-2147483648,-2147483648);
insert into root.datatypes.d_text(time,s0) values (-214748364,-214748364);
insert into root.datatypes.d_text(time,s0) values (-1,-1);
insert into root.datatypes.d_text(time,s0) values (0,0);
insert into root.datatypes.d_text(time,s0) values (214748364,214748364);
insert into root.datatypes.d_text(time,s0) values (2147483648,2147483648);
insert into root.datatypes.d_text(time,s0) values (2147463638,2147463638.888888);
insert into root.datatypes.d_text(time,s0) values (2147483652,1.8976931348623157e308);
insert into root.datatypes.d_text(time,s0) values (1999-01-01 01:00:00,'1999-01-01');
insert into root.datatypes.d_text(time,s0) values (1999-02-01 01:00:00,'a');
insert into root.datatypes.d_text(time,s0) values (1999-03-01 01:00:00,'中文');
insert into root.datatypes.d_text(time,s0) values (1999-04-01 01:00:00,'org.apache.iotdb.session.subscription.consumer.tree.SubscriptionTreePullConsumer');
insert into root.datatypes.d_text(time,s0) values (1999-04-11 01:00:00,'0-9_@#$%^&*()-+=<>?[]{}"`~:,/\+=!');
insert into root.datatypes.d_text(time,s0) values (1999-05-01,'IoTDB 支持两种时序数据模型（SQL语法），管理的对象均为设备和测点树：以层级路径的方式管理数据，一条路径对应一个设备的一个测点表；以关系表的方式管理数据，一张表对应一类设备。');

insert into root.datatypes.d_text(time,s0) values (10000,true),(20000,false),(35000,-1.5),(30000,-1),(40000,0),(50000,1),(60000,1.5),(70000,'string'),(80000,'1989-06-15'),(90000,638323200000); 
show timeseries root.datatypes.d_text.*;
select s0 from root.datatypes.d_text;




// blob
create timeseries root.datatypes.d_blob.s0 WITH DATATYPE=blob,ENCODING=PLAIN,COMPRESSOR=UNCOMPRESSED;
insert into root.datatypes.d_blob(time,s0) values (-2147483652,X'342e39652d333234');
insert into root.datatypes.d_blob(time,s0) values (-2147463628,X'2d32313437343833363438');
insert into root.datatypes.d_blob(time,s0) values (-2147483648,X'2d323134373436333632382e393939393939');
insert into root.datatypes.d_blob(time,s0) values (-214748364,X'2d323134373438333634');
insert into root.datatypes.d_blob(time,s0) values (-1,X'2d31');
insert into root.datatypes.d_blob(time,s0) values (0,X'30');
insert into root.datatypes.d_blob(time,s0) values (214748364,X'323134373438333634');
insert into root.datatypes.d_blob(time,s0) values (2147483648,X'323134373436333633382e383838383838');
insert into root.datatypes.d_blob(time,s0) values (2147463638,X'32313437343833363438');
insert into root.datatypes.d_blob(time,s0) values (2147483652,X'312e3839373639333133343836323331353765333038');
insert into root.datatypes.d_blob(time,s0) values (1999-01-01 01:00:00,X'3139393930313031');
insert into root.datatypes.d_blob(time,s0) values (1999-02-01 01:00:00,X'61');
insert into root.datatypes.d_blob(time,s0) values (1999-03-01 01:00:00,X'e4b8ade69687');
insert into root.datatypes.d_blob(time,s0) values (1999-04-01 01:00:00,X'6f72672e6170616368652e696f7464622e73657373696f6e2e737562736372697074696f6e2e636f6e73756d65722e747265652e537562736372697074696f6e5472656550756c6c436f6e73756d6572');
insert into root.datatypes.d_blob(time,s0) values (1999-04-11 01:00:00,X'643c6e4d5629563033504f6c26383f41357a2a5a392a325e6951585e38364f6c53572425503070283c61325a4730245a676f4d45376d3e233e40462b53786b2a4c6e3251696f2965684873314b44773d5849764d24684d4977644d763657336975505378634c444f576948504b4a793335404371236153543053755556516d443923773f404a4f63297a766f42694e29596f4229383c764e413967495f372852516d34356c3c'); 

show timeseries root.datatypes.d_blob.*;
select s0 from root.datatypes.d_blob;

drop DATABASE root.**;<<NULL;

