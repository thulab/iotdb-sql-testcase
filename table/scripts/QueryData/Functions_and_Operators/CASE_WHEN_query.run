//CASE WHEN

connect root/TimechoDB@2021;
--0.清理数据：
drop database test_db;
<<NULL;

--1. 创建数据库
create database test_db;

--2. 指定数据库
use test_db;

--3. 创建表
create table table1 (
  time TIMESTAMP TIME,
  region STRING TAG,
  device_id STRING TAG,
  model_id STRING ATTRIBUTE,
  maintenance STRING ATTRIBUTE,
  temperature FLOAT FIELD,
  humidity FLOAT FIELD,
  status Boolean FIELD,
  arrival_time TIMESTAMP FIELD
);

--4. 查看表
show tables;

--5. 展示表结构信息
desc table1;

--6. 数据写入
INSERT INTO table1(time, region, device_id, model_id, maintenance, temperature, humidity, status, arrival_time) VALUES 
  (1000, '北京', 'd1', 'A', '190', 90.0, 35.1, true, 2024-11-26 13:37:34),
  (2000, '北京', 'd1', 'A', '190', 90.0, 35.1, true, 2024-11-01 13:38:25),
  (3000, '北京', 'd2', 'B', '181', NULL, 35.1, true, 2024-10-27 16:37:01),
  (4000, '北京', 'd2', 'B', '181', 85.0, NULL, NULL, 2024-11-27 16:37:03),
  (6000, '北京', 'd2', 'B', '181', 85.0, NULL, NULL, 2024-11-29 16:00:04),
  (7000, '北京', 'd3', 'C', '155', NULL, 35.2, false, Null),
  (8000, '北京', 'd3', 'C', '155', NULL, Null, false, Null),
  (9000, '北京', 'd3', 'C', '155', NULL, Null, false, 2024-10-31 16:37:08),
  (10000, '上海', 'd4', 'D', '94', 85.0, Null, NULL, 2024-11-28 08:00:09),
  (11000, '上海', 'd4', 'D', '94', NULL, 40.9, true, NULL),
  (12000, '上海', 'd4', 'D', '94', 85.0, 35.2, NULL, 2024-12-01 10:00:11),
  (13000, '上海', 'd5', 'E', '90', 88.0, 45.1, true, 2024-11-30 11:00:12),
  (14000, '上海', 'd5', 'E', '362', 85.0, NULL, NULL, 2024-11-29 10:00:13),
  (15000, '上海', 'd5', 'E', '362', NULL, 45.1, true, NULL),
  (16000, '上海', 'd5', 'E', '362', 90.0, 35.4, true, 2024-11-20 18:30:15),
  (17000, '上海', 'd5', 'F', '362', 90.0, 35.2, true, NULL),
  (18000, '上海', 'd5', 'F', '362', 90.0, 34.8, true, 2024-11-30 23:30:17);
  
--7. 原始数据查询
select * from table1 order by time;

--8. CASE WHEN 查询
select 
    device_id,
    temperature,
    CASE 
        WHEN temperature IS NULL THEN '未知'
        WHEN temperature > 85 THEN '高'
        WHEN temperature BETWEEN 70 AND 85 THEN '中'
        ELSE '低'
    END AS temperature_category
from 
    table1
order by 1,2,3;


select 
    device_id,
    status,
    CASE 
        WHEN status IS NULL THEN '状态未知'
        WHEN status = true THEN '正常'
        ELSE '故障'
    END AS status_description
from
    table1
order by 1,2,3;


select 
    device_id,
    maintenance,
    CASE 
        WHEN maintenance < '100' THEN '需要维护'
        WHEN maintenance BETWEEN '100' AND '200' THEN '维护良好'
        ELSE '维护完好'
    END AS maintenance_status
from 
    table1
order by 1,2,3;


select device_id, arrival_time,
       CASE 
           WHEN arrival_time < 2024-11-01T00:00:00 THEN 'Before November 2024'
           WHEN arrival_time >= 2024-11-01 AND arrival_time < 2024-12-01 THEN 'The November of 2024'
		   WHEN arrival_time >= 2024-12-01 THEN 'AFTER November 2024'
           ELSE 'Unknown'
       END AS time_category
from 
	table1
order by 1,2,3;


select 
    device_id,
    humidity,
    CASE 
        WHEN humidity IS NULL THEN '未知'
        WHEN humidity > 40 THEN '高湿'
        WHEN humidity BETWEEN 30 AND 40 THEN '适中湿度'
        ELSE '干燥'
    END AS humidity_category
from 
    table1
order by 1,2,3;


select 
    device_id,
    CASE
        WHEN temperature IS NULL OR humidity IS NULL THEN '数据不完整'
        WHEN temperature > 85 AND humidity > 40 THEN '高温高湿'
        WHEN temperature > 85 AND humidity <= 40 THEN '高温低湿'
        WHEN temperature <= 85 AND humidity > 40 THEN '低温高湿'
        ELSE '低温低湿'
    END AS climate_condition,
    COUNT(*) AS record_count
from table1
group by
    device_id,
    CASE
        WHEN temperature IS NULL OR humidity IS NULL THEN '数据不完整'
        WHEN temperature > 85 AND humidity > 40 THEN '高温高湿'
        WHEN temperature > 85 AND humidity <= 40 THEN '高温低湿'
        WHEN temperature <= 85 AND humidity > 40 THEN '低温高湿'
        ELSE '低温低湿'
    END
order by 1,2,3;


select 
    device_id,
    maintenance,
    status,
    CASE 
        WHEN maintenance < '100' AND status = false THEN '故障，需立即维护'
        WHEN maintenance < '100' THEN '需维护'
        WHEN status = false THEN '故障'
        ELSE '正常'
    END AS report
from 
    table1
order by 1,2,3,4;


select
    device_id,
    arrival_time,
    temperature,
    CASE 
        WHEN arrival_time < NOW() - 30D AND temperature > 85 THEN '警报：设备长时间高温'
        WHEN arrival_time < NOW() - 30D THEN '警报：设备未更新'
        WHEN temperature > 85 THEN '警报：高温'
		WHEN temperature is null THEN '未知'
        ELSE '正常'
    END AS alert
from 
    table1
order by 1,2,3,4;


select 
    device_id,
    temperature,
    humidity,
    maintenance,
    CASE 
        WHEN temperature IS NULL OR humidity IS NULL THEN '数据不完整'
        WHEN temperature > 85 AND humidity > 40 AND maintenance < '100' THEN '高风险设备'
        WHEN temperature > 85 AND humidity <= 40 AND maintenance < '100' THEN '温度过高，需维护'
        WHEN temperature <= 85 AND humidity > 40 AND maintenance < '100' THEN '湿度过高，需维护'
        ELSE '正常设备'
    END AS device_risk_category
from 
    table1
order by 1,2,3,4,5;


select 
    model_id,
    COUNT(CASE WHEN status = true THEN 1 END) AS operational_count,
    COUNT(CASE WHEN status = false THEN 1 END) AS faulty_count,
    COUNT(CASE WHEN maintenance < '100' THEN 1 END) AS needing_maintenance
from 
    table1
GROUP BY 
    model_id
order by 1,2,3,4;

	
select case when true then 202 + (time + 202) end as result from table1 order by time;

select model_id,
		CASE 
           WHEN humidity >= 40.0 THEN 'High'
           WHEN humidity < 40.0 THEN 'Low'
           -- 缺少 ELSE 子句
       END AS humidity_category
from
	table1
order by 1,2;

	
select device_id from table1
	WHERE CASE 
			WHEN temperature > 75 THEN '高温'
			ELSE '正常'
		END = '高温'
order by device_id;


--9. 使用错误异常SQL
--9.1 数据类型不匹配
select 
    model_id,
    AVG(CASE 
            WHEN temperature IS NULL THEN 0 
            WHEN temperature < 0 THEN NULL 
            ELSE temperature 
        END) AS average_temperature
from 
    table1
group by 
    model_id;
<<SQLSTATE;


select device_id,
    CASE 
        WHEN temperature IS NULL THEN NULL
        ELSE '正常'
    END AS status
from table1;
<<SQLSTATE;


select 
	202 + ((time - 2023-09-02 00:00:00) + (202-79.1) / 5.039) as no_bug,
	CASE
		WHEN true then 202 + ((time - 2023-09-02 00:00:00) + (202-79.1) / 5.039)
			END as bug_again,
	temperature from table1;
<<SQLSTATE;


select device_id,
    CASE 
        WHEN temperature > 75 THEN '高温'
        ELSE 1
    END AS temperature_status
from table1;
<<SQLSTATE;

--9.2 语法措施, 缺少 END 关键字
select temperature,
       CASE 
           WHEN temperature >= 90.0 THEN 'High'
           WHEN temperature < 90.0 THEN 'Low'
from
	table1;
<<SQLSTATE;


--9.3 错误语法
select device_id,
    CASE 
        WHEN temperature > 75 THEN '高温'
        ELSE '正常'
    END AS temperature_status
from 
	table1
order by CASE temperature_status;
<<SQLSTATE;


select device_id,
    CASE 
        WHEN temperature > 75 THEN 
            CASE 
                WHEN humidity < 30 THEN '高温低湿'
        ELSE '正常'
    END AS status
from table1;
<<SQLSTATE;


-- 清理数据: 删除数据库 
drop database test_db;
<<NULL;
