-- 连接数据库
connect root/TimechoDB@2021;
-- 清除数据库
drop database test;
<<NULL;

--1.准备数据
create database test;
use test;
create table table1(t1 STRING TAG, a1 STRING ATTRIBUTE, s1 TEXT FIELD, s2 INT32 FIELD, s3 INT64 FIELD, s4 FLOAT FIELD, s5 DOUBLE FIELD, s6 BOOLEAN FIELD, s7 DATE FIELD, s8 TIMESTAMP FIELD, s9 STRING FIELD, s10 BLOB FIELD);
insert into table1(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(1, 't1', 'a1', 's1', 4, 4, 1.1, 1.1, true, '2020-02-29', 1970-01-01 08:00:00.005, '2025-02-01 08:01:59.123456789', null);
insert into table1(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(2, 't2', 'a2', 's2', 8, 8, 2.2, 2.2, false, '2025-02-02', 1970-01-01 08:00:00.015, '2025-02-02 08:02:59.123456789', null);
insert into table1(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(3, 't3', 'a3', 's3', 13, 13, 3.3, 3.3, true, '2025-02-03', 1970-01-01 08:00:00.025, '2025-02-03 08:03:59.123456789', null);
insert into table1(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(4, 't4', 'a4', 's4', 24, 24, 4.4, 4.4, true, '2025-02-04', 1970-01-01 08:00:00.035, '2025-02-04 08:04:59.123456789', null);
insert into table1(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(5, 't5', 'a5', 's5', 35, 35, 5.5, 5.5, true, '2021-02-28', 1970-01-01 08:00:00.045, '2025-02-05 08:05:59.123456789', null);
create table table2(t1 STRING TAG, a1 STRING ATTRIBUTE, s1 TEXT FIELD, s2 INT32 FIELD, s3 INT64 FIELD, s4 FLOAT FIELD, s5 DOUBLE FIELD, s6 BOOLEAN FIELD, s7 DATE FIELD, s8 TIMESTAMP FIELD, s9 STRING FIELD, s10 BLOB FIELD);
insert into table2(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(1, 't1', 'a1', 's1', null, null, 1.1, 1.1, null, '2020-02-29', 1970-01-01 08:00:00.005, '2025-02-01 08:01:59.123456789', null);
insert into table2(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(2, null, 'a2', 's2', null, null, 2.2, null, false, null, 1970-01-01 08:00:00.015, '2025-02-02 08:02:59.123456789', null);
insert into table2(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(3, 't3', null, 's3', null, null, null, 3.3, true, '2025-02-03', null, '2025-02-03 08:03:59.123456789', null);
insert into table2(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(4, 't4', 'a4', null, null, null, 4.4, 4.4, true, '2025-02-04', 1970-01-01 08:00:00.035, null, null);
insert into table2(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(5, 't5', 'a5', 's5', null, null, 5.5, 5.5, true, '2021-02-28', 1970-01-01 08:00:00.045, '2025-02-05 08:05:59.123456789', null);
create table table3(t1 STRING TAG, a1 STRING ATTRIBUTE, s1 TEXT FIELD, s2 INT32 FIELD, s3 INT64 FIELD, s4 FLOAT FIELD, s5 DOUBLE FIELD, s6 BOOLEAN FIELD, s7 DATE FIELD, s8 TIMESTAMP FIELD, s9 STRING FIELD, s10 BLOB FIELD);
insert into table3(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(1, 't1', 'a1', 's1', 4, 4, 1.1, 1.1, true, '2020-02-29', 1970-01-01 08:00:00.005, '2025-02-01 08:01:59.123456789', null);
insert into table3(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(2, 't2', 'a2', 's2', 200, -2, 2.2, 2.2, false, '2025-02-02', 1970-01-01 08:00:00.015, '2025-02-02 08:02:59.123456789', null);
insert into table3(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(3, 't3', 'a3', 's3', -3, 30000, 3.3, 3.3, true, '2025-02-03', 1970-01-01 08:00:00.025, '2025-02-03 08:03:59.123456789', null);
insert into table3(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(4, 't4', 'a4', 's4', 40000, -4000, 4.4, 4.4, true, '2025-02-04', 1970-01-01 08:00:00.035, '2025-02-04 08:04:59.123456789', null);
insert into table3(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(5, 't5', 'a5', 's5', -5000, 50000, 5.5, 5.5, true, '2021-02-28', 1970-01-01 08:00:00.045, '2025-02-05 08:05:59.123456789', null);

--2.测试 bit_count(num, bits)
// 正常情况
select bit_count(9, 64) from table1;
select bit_count(1970-01-01 08:00:00.005, 8) from table1;
// 暂且不支持：select bit_count(null, 8) from table1 order by time;
// 暂且不支持：select bit_count(5, null) from table1 order by time;
select bit_count(s2, 8) from table2 order by time;
select bit_count(8, s2) from table2 order by time;
select bit_count(s3, 8) from table1 order by time;
select bit_count(5, s2) from table1 order by time;
select bit_count(s2, s2) from table1 order by time;
select bit_count(s3, s3) from table1 order by time;
select bit_count(s2, s3) from table1 order by time;
select bit_count(s3, s2) from table1 order by time;
// 异常情况
select bit_count(5, 1) from table1;
<<SQLSTATE;
select bit_count(5, 2) from table1;
<<SQLSTATE;
select bit_count(-5, 3) from table1;
<<SQLSTATE;
select bit_count(5.5, 8) from table1;
<<SQLSTATE;
select bit_count('5', 8) from table1;
<<SQLSTATE;
select bit_count(null, 8) from table1;
<<SQLSTATE;
select bit_count(true, 8) from table1;
<<SQLSTATE;
select bit_count(s1, 8) from table1;
<<SQLSTATE;
select bit_count(s4, 8) from table1;
<<SQLSTATE;
select bit_count(s5, 8) from table1;
<<SQLSTATE;
select bit_count(s6, 8) from table1;
<<SQLSTATE;
select bit_count(s7, 8) from table1;
<<SQLSTATE;
select bit_count(s9, 8) from table1;
<<SQLSTATE;
select bit_count(s10, 8) from table1;
<<SQLSTATE;
select bit_count(5, s1) from table1;
<<SQLSTATE;

--3.测试 bitwise_and(x, y)
select bitwise_and(19,25) from table1 order by time;
select bitwise_and(1970-01-01 08:00:00.005, 8) from table1 order by time;
// 暂且不支持：select bitwise_and(null, 8) from table1 order by time;
// 暂且不支持：select bitwise_and(5, null) from table1 order by time;
select bitwise_and(s2, 8) from table2 order by time;
select bitwise_and(8, s2) from table2 order by time;
select bitwise_and(s3, 8) from table1 order by time;
select bitwise_and(5, s2) from table1 order by time;
select bitwise_and(s2, s2) from table1 order by time;
select bitwise_and(s3, s3) from table1 order by time;
select bitwise_and(s2, s3) from table1 order by time;
select bitwise_and(s3, s2) from table1 order by time;
// 异常情况
select bitwise_and(5.5, 8) from table1;
<<SQLSTATE;
select bitwise_and('5', 8) from table1;
<<SQLSTATE;
select bitwise_and(null, 8) from table1;
<<SQLSTATE;
select bitwise_and(true, 8) from table1;
<<SQLSTATE;
select bitwise_and(s1, 8) from table1;
<<SQLSTATE;
select bitwise_and(s4, 8) from table1;
<<SQLSTATE;
select bitwise_and(s5, 8) from table1;
<<SQLSTATE;
select bitwise_and(s6, 8) from table1;
<<SQLSTATE;
select bitwise_and(s7, 8) from table1;
<<SQLSTATE;
select bitwise_and(s9, 8) from table1;
<<SQLSTATE;
select bitwise_and(s10, 8) from table1;
<<SQLSTATE;
select bitwise_and(5, s1) from table1;
<<SQLSTATE;

--4.测试 bitwise_not(x)
select bitwise_not(19) from table1 order by time;
select bitwise_not(1970-01-01 08:00:00.0019) from table1 order by time;
// 暂且不支持：select bitwise_not(null) from table1 order by time;
select bitwise_not(s2) from table1 order by time;
select bitwise_not(s3) from table1 order by time;
// 异常情况
select bitwise_not(8, 64) from table1;
<<SQLSTATE;
select bitwise_not(-5, 3) from table1;
<<SQLSTATE;
select bitwise_not(5.5, 8) from table1;
<<SQLSTATE;
select bitwise_not('5', 8) from table1;
<<SQLSTATE;
select bitwise_not(null, 8) from table1;
<<SQLSTATE;
select bitwise_not(true, 8) from table1;
<<SQLSTATE;
select bitwise_not(s1, 8) from table1;
<<SQLSTATE;
select bitwise_not(s4, 8) from table1;
<<SQLSTATE;
select bitwise_not(s5, 8) from table1;
<<SQLSTATE;
select bitwise_not(s6, 8) from table1;
<<SQLSTATE;
select bitwise_not(s7, 8) from table1;
<<SQLSTATE;
select bitwise_not(s9, 8) from table1;
<<SQLSTATE;
select bitwise_not(s10, 8) from table1;
<<SQLSTATE;
select bitwise_not(5, s1) from table1;
<<SQLSTATE;

--5.测试 bitwise_or(x, y)
select bitwise_or(19,25) from table1 order by time;
select bitwise_or(1970-01-01 08:00:00.005, 8) from table1 order by time;
// 暂且不支持：select bitwise_or(null, 8) from table1 order by time;
// 暂且不支持：select bitwise_or(5, null) from table1 order by time;
select bitwise_or(s2, 8) from table2 order by time;
select bitwise_or(8, s2) from table2 order by time;
select bitwise_or(s3, 8) from table1 order by time;
select bitwise_or(5, s2) from table1 order by time;
select bitwise_or(s2, s2) from table1 order by time;
select bitwise_or(s3, s3) from table1 order by time;
select bitwise_or(s2, s3) from table1 order by time;
select bitwise_or(s3, s2) from table1 order by time;
// 异常情况
select bitwise_or(5.5, 8) from table1;
<<SQLSTATE;
select bitwise_or('5', 8) from table1;
<<SQLSTATE;
select bitwise_or(null, 8) from table1;
<<SQLSTATE;
select bitwise_or(true, 8) from table1;
<<SQLSTATE;
select bitwise_or(s1, 8) from table1;
<<SQLSTATE;
select bitwise_or(s4, 8) from table1;
<<SQLSTATE;
select bitwise_or(s5, 8) from table1;
<<SQLSTATE;
select bitwise_or(s6, 8) from table1;
<<SQLSTATE;
select bitwise_or(s7, 8) from table1;
<<SQLSTATE;
select bitwise_or(s9, 8) from table1;
<<SQLSTATE;
select bitwise_or(s10, 8) from table1;
<<SQLSTATE;
select bitwise_or(5, s1) from table1;
<<SQLSTATE;

--6.测试 bitwise_xor(x, y)
select bitwise_xor(19,25) from table1 order by time;
select bitwise_xor(1970-01-01 08:00:00.005, 8) from table1 order by time;
// 暂且不支持：select bitwise_xor(null, 8) from table1 order by time;
// 暂且不支持：select bitwise_xor(5, null) from table1 order by time;
select bitwise_xor(s2, 8) from table2 order by time;
select bitwise_xor(8, s2) from table2 order by time;
select bitwise_xor(s3, 8) from table1 order by time;
select bitwise_xor(5, s2) from table1 order by time;
select bitwise_xor(s2, s2) from table1 order by time;
select bitwise_xor(s3, s3) from table1 order by time;
select bitwise_xor(s2, s3) from table1 order by time;
select bitwise_xor(s3, s2) from table1 order by time;
// 异常情况
select bitwise_xor(5.5, 8) from table1;
<<SQLSTATE;
select bitwise_xor('5', 8) from table1;
<<SQLSTATE;
select bitwise_xor(null, 8) from table1;
<<SQLSTATE;
select bitwise_xor(true, 8) from table1;
<<SQLSTATE;
select bitwise_xor(s1, 8) from table1;
<<SQLSTATE;
select bitwise_xor(s4, 8) from table1;
<<SQLSTATE;
select bitwise_xor(s5, 8) from table1;
<<SQLSTATE;
select bitwise_xor(s6, 8) from table1;
<<SQLSTATE;
select bitwise_xor(s7, 8) from table1;
<<SQLSTATE;
select bitwise_xor(s9, 8) from table1;
<<SQLSTATE;
select bitwise_xor(s10, 8) from table1;
<<SQLSTATE;
select bitwise_xor(5, s1) from table1;
<<SQLSTATE;

--7.测试 bitwise_left_shift(value, shift)
select bitwise_left_shift(19,25) from table1 order by time;
select bitwise_left_shift(1970-01-01 08:00:00.005, 8) from table1 order by time;
// 暂且不支持：select bitwise_left_shift(null, 8) from table1 order by time;
// 暂且不支持：select bitwise_left_shift(5, null) from table1 order by time;
select bitwise_left_shift(s2, 8) from table2 order by time;
select bitwise_left_shift(8, s2) from table2 order by time;
select bitwise_left_shift(s3, 8) from table1 order by time;
select bitwise_left_shift(5, s2) from table1 order by time;
select bitwise_left_shift(s2, s2) from table1 order by time;
select bitwise_left_shift(s3, s3) from table1 order by time;
select bitwise_left_shift(s2, s3) from table1 order by time;
select bitwise_left_shift(s3, s2) from table1 order by time;
// 异常情况
select bitwise_left_shift(5.5, 8) from table1;
<<SQLSTATE;
select bitwise_left_shift('5', 8) from table1;
<<SQLSTATE;
select bitwise_left_shift(null, 8) from table1;
<<SQLSTATE;
select bitwise_left_shift(true, 8) from table1;
<<SQLSTATE;
select bitwise_left_shift(s1, 8) from table1;
<<SQLSTATE;
select bitwise_left_shift(s4, 8) from table1;
<<SQLSTATE;
select bitwise_left_shift(s5, 8) from table1;
<<SQLSTATE;
select bitwise_left_shift(s6, 8) from table1;
<<SQLSTATE;
select bitwise_left_shift(s7, 8) from table1;
<<SQLSTATE;
select bitwise_left_shift(s9, 8) from table1;
<<SQLSTATE;
select bitwise_left_shift(s10, 8) from table1;
<<SQLSTATE;
select bitwise_left_shift(5, s1) from table1;
<<SQLSTATE;

--8.测试 bitwise_right_shift(value, shift)
select bitwise_right_shift(19,25) from table1 order by time;
select bitwise_right_shift(1970-01-01 08:00:00.005, 8) from table1 order by time;
// 暂且不支持：select bitwise_right_shift(null, 8) from table1 order by time;
// 暂且不支持：select bitwise_right_shift(5, null) from table1 order by time;
select bitwise_right_shift(s2, 8) from table2 order by time;
select bitwise_right_shift(8, s2) from table2 order by time;
select bitwise_right_shift(s3, 8) from table1 order by time;
select bitwise_right_shift(5, s2) from table1 order by time;
select bitwise_right_shift(s2, s2) from table1 order by time;
select bitwise_right_shift(s3, s3) from table1 order by time;
select bitwise_right_shift(s2, s3) from table1 order by time;
select bitwise_right_shift(s3, s2) from table1 order by time;
// 异常情况
select bitwise_right_shift(5.5, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift('5', 8) from table1;
<<SQLSTATE;
select bitwise_right_shift(null, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift(true, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift(s1, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift(s4, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift(s5, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift(s6, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift(s7, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift(s9, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift(s10, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift(5, s1) from table1;
<<SQLSTATE;

--9.测试 bitwise_right_shift_arithmetic(value, shift)
select bitwise_right_shift_arithmetic(19,25) from table1 order by time;
select bitwise_right_shift_arithmetic(1970-01-01 08:00:00.005, 8) from table1 order by time;
// 暂且不支持：select bitwise_right_shift_arithmetic(null, 8) from table1 order by time;
// 暂且不支持：select bitwise_right_shift_arithmetic(5, null) from table1 order by time;
select bitwise_right_shift_arithmetic(s2, 8) from table2 order by time;
select bitwise_right_shift_arithmetic(8, s2) from table2 order by time;
select bitwise_right_shift_arithmetic(s3, 8) from table1 order by time;
select bitwise_right_shift_arithmetic(5, s2) from table1 order by time;
select bitwise_right_shift_arithmetic(s2, s2) from table1 order by time;
select bitwise_right_shift_arithmetic(s3, s3) from table1 order by time;
select bitwise_right_shift_arithmetic(s2, s3) from table1 order by time;
select bitwise_right_shift_arithmetic(s3, s2) from table1 order by time;
// 异常情况
select bitwise_right_shift_arithmetic(5.5, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic('5', 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic(null, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic(true, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic(s1, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic(s4, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic(s5, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic(s6, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic(s7, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic(s9, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic(s10, 8) from table1;
<<SQLSTATE;
select bitwise_right_shift_arithmetic(5, s1) from table1;
<<SQLSTATE;

--10.其他情况
select bit_count(5, bit_count(15, 8)) from table1;
select bitwise_left_shift(-2147483648,2147483647) from table1 order by time;

--11.清理数据
drop database test;
