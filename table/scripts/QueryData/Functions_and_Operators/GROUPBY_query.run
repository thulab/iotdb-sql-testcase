connect root/TimechoDB@2021;
--0.清理数据：
drop database test_db;
<<NULL;

--1. 创建数据库
create database test_db;

--2. 指定数据库
use test_db;

--3. 创建表
create table table_1
(
    region_id STRING TAG,
   	device_id STRING TAG,
    model_id STRING ATTRIBUTE,
	boolean BOOLEAN FIELD,
	text TEXT FIELD,
	string STRING FIELD,
	date DATE FIELD,
	timestamp TIMESTAMP FIELD,
	blob BLOB FIELD,
	int32 INT32 FIELD,
	int64 INT64 FIELD,
	float FLOAT FIELD,
	double DOUBLE FIELD
);

--4. 查看表
show tables;

--5. 展示表结构信息
desc table_1;

--6. 数据写入
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
1, '001', 'd1', 'V1', false, 'text1', 'string1', '2020-01-10', 100000, X'11F8d7', 1, 1000, 1.1, 111.11
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
2, '002', 'd2', 'V2', true, 'text2', 'string2', '2020-02-20', 16839200, X'3b', 10, 453, 11.1, 102.2
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
3, '003', 'd3', 'V3', true, 'text2', 'string2', '2021-12-20', 116839200000, X'6728', 1, 123, 5.2, 333.3
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
4, '004', 'd4', 'V4', false, 'text3', 'string3', '2022-06-11', 86700000, X'4b98', 2, 239, null, 666.66
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
5, '005', 'd5', 'V3', false, 'text4', 'string2', '2023-12-15', 1378230000000, X'34', 10, 653, -1.1, 1111.2
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
6, null, 'd6', 'V2', true, 'text3', 'string3', null, 1378230000000, X'34', 1, 653, 0.1, 1111.2
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
7, '005', 'd5', 'V3', true, 'text4', 'string4', '2023-12-15', 1378230000000, X'34', 2, null, 555.5, 1111.2
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
8, '002', 'd3', 'V1', true, 'text2', 'string5', null, 1378230000000, X'34', 2, 653, 13.13, null
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
9, '003', 'd3', 'V1', true, 'text4', null, '2023-12-15', null, X'34', 10, null, 2.1, 155.5
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
10, '004', 'd4', 'V2', false, 'text5', 'string3', '2023-12-15', 18392378000, null, 1, null, -1.1, 11.2
);

--7. 原始数据查询
select * from table_1 order by time;

--8. group by 查询
--8.1 聚合函数限制(聚合函数 + group by)
select count(*) as count_value, min(int32) as min_value from table_1;
select region_id, max(double) as max_value from table_1 group by region_id;
select model_id, 2+(last(int32)+ first(double)) as total_value from table_1 group by model_id;
select time, text, blob, max_by(float,time) as max_by_value,first_by(double,time) as first_by_value
	from table_1 group by time,text,blob order by time;
select region_id,device_id,model_id from table_1 group by region_id,device_id,model_id order by region_id;
select device_id, mode(region_id) as mode_result, 11+(avg(int32)+variance(int64)) as total_result,
	first(text) as first_result, last(blob) as last_result from table_1 group by device_id;

select device_id,boolean from table_1 group by device_id; <<SQLSTATE;
select time, avg(double) from table_1 group by device_id; <<SQLSTATE;
select date, sum(int32+int64+float+double) from table_1; <<SQLSTATE;

--8.2 group by + num
select device_id, min(int32) from table_1 group by -1; <<SQLSTATE;
select device_id, count(boolean) from table_1 group by 0.5; <<SQLSTATE;
select device_id, count(string), avg(int64) from table_1 group by 0; <<SQLSTATE;
select region_id, device_id, model_id, count(double), avg(int64) from table_1 group by 5; <<SQLSTATE;
select region_id, device_id, model_id, count(double), avg(int64) from table_1 group by 6; <<SQLSTATE;

select region_id, timestamp, avg(int64+double) as avg_value from table_1 group by 1,timestamp order by region_id,timestamp;
select device_id, last(string) as last_value, last_by(time,int32) as last_by_value from table_1 group by device_id; 
select region_id, device_id, model_id, count(*) as count_value, avg(int64) as avg_value
	from table_1 group by region_id,device_id,3 order by region_id,device_id,model_id;
select region_id,device_id,count(*) as count_result from table_1 group by 1,2 order by region_id,device_id;
select date_bin(2ms,time) as date_bin_result, device_id, model_id, avg(double-int64) as avg_result 
	from table_1 where time > 1 and time < 10 group by 1,2,3 offset 2 limit 5;
select date_bin(5ms,time) as date_bin_result, device_id, model_id, avg(double-int64) as avg_result,boolean 
	from table_1 where time > 1 and time < 10 group by 1,2,3,5;
select region_id, int32, int64 
  from ( 
         select date_bin(5ms, time) as time, region_id, int32, int64, avg(float) as avg_value 
           from table_1 
           where time >= 2 and time < 10
           GROUP BY 1,2,3,4
        ) 
  where int32 > 2 
  GROUP BY region_id,2,3 
  HAVING count(*) > 0;

select region_id, 
       AVG(float) AS avg_result 
from table_1 
where time >= 0 AND time < 10
GROUP BY region_id 
HAVING  count(*) > 1;

--8.3 不支持group by alias
select count(*) as count_result, avg(double), first_by(boolean,time), last(timestamp) from table_1 
	where time > 2 and time <= 9 group by count_result;
<<SQLSTATE;
select count(*) as count_result, avg(double) as avg_result, first_by(boolean,time) as first_by_result, last(timestamp) as last_result from table_1 where time > 2 and time <= 9 group by model_id;

--9. 仅支持count聚合函数使用*
select count(*) as count_result from table_1 group by timestamp order by count_result;
select avg(*) as avg_result from table_1 group by boolean; <<SQLSTATE;
select extreme(*) as extreme_result from table_1 group by time; <<SQLSTATE;
select variance(*) as var_result from table_1 group by timestamp; <<SQLSTATE;

--10. 结合date_bin_gapfill使用
select date_bin_gapfill(5m, time) as minute_tim, device_id, avg(double) as avg_double from table_1 where time > 20000 and time < 30000 group by 1, device_id;

-- 清理数据： 删除数据库 
drop database test_db;
<<NULL;