// 支持聚合查询
// select 中支持写聚合函数
// count | sum | avg | last | first | last_by | first_by | extreme
// mode | var | var_pop | var_samp | stddev | stddev_pop | stddev_samp
// min | min_by | max | max_by

connect root/TimechoDB@2021;
--0.清理数据：
drop database test_db;
<<NULL;

--1. 创建数据库
create database test_db;

--2. 指定数据库
use test_db;

--3. 创建表
create table table_1
(
    region_id STRING TAG,
   	device_id STRING TAG,
    model_id STRING ATTRIBUTE,
	boolean BOOLEAN FIELD,
	text TEXT FIELD,
	string STRING FIELD,
	date DATE FIELD,
	timestamp TIMESTAMP FIELD,
	blob BLOB FIELD,
	int32 INT32 FIELD,
	int64 INT64 FIELD,
	float FLOAT FIELD,
	double DOUBLE FIELD
);

--4. 查看表
show tables;

--5. 展示表结构信息
desc table_1;

--6. 数据写入
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
1, '001', 'd1', 'V1', false, 'text1', 'string1', '2020-01-10', 100000, X'11F8d7', 0, 1000, 1.1, 111.11
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
2, '002', 'd2', 'V2', true, 'text2', 'string2', '2020-02-20', 16839200, X'3b', 111, 453, 11.1, 102.2
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
3, '003', 'd3', 'V3', true, 'text2', 'string2', '2021-12-20', 116839200000, X'6728', 1, 123, 5.2, 333.3
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
4, '004', 'd4', 'V4', false, 'text3', 'string3', '2022-06-11', 86700000, X'4b98', 2, 239, null, 666.66
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
5, '005', 'd5', 'V3', false, 'text4', 'string2', '2023-12-15', 1378230000000, X'34', 10, 653, -1.1, 1111.2
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
6, null, 'd6', 'V2', true, 'text3', 'string3', null, 1378230000000, X'00010000', 1, 653, 0.1, 1221.2
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
7, '005', 'd5', 'V3', true, 'text4', 'string4', '2023-12-15', 1378230000000, X'FFD8FFE0', 2, null, 555.5, 1111.2
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
8, '002', 'd3', 'V5', true, 'text2', 'string5', null, 1378230000000, X'34', 2, 653, 13.13, null
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
9, '003', 'd3', 'V6', true, 'text4', null, '2023-12-15', null, X'49460001', 10, null, 2.1, 155.5
);
insert into table_1(
time, region_id, device_id, model_id, boolean, text, string, date, timestamp, blob, int32, int64, float, double
) values(
10, '004', 'd4', 'V2', false, 'text5', 'string3', '2024-01-15', 18392378000, null, 1, null, -11.1, 11.2
);

--7. 原始数据查询
select * from table_1 order by time;

--8. 聚合函数：count(当前支持所有的数据类型)
select count() from table_1;
select count(*) as count_result from table_1;
select count(time) as count1, count(region_id) as count2, count(device_id) as count3, count(model_id) as count4 from table_1;
select count(boolean) as count1, count(text) as count2, count(string) as count3, count(date) as count4, count(timestamp) as count5 from table_1;
select count(blob) as count1, count(int32) as count2, count(int64) as count3, count(float) as count4, count(double) as count5 from table_1;
select count(model_id) as count1, count(boolean) as count2 from table_1 group by model_id;
select region_id, count(*) as count_result from table_1 group by region_id;
select device_id, count(*) as count_result from table_1 group by device_id;
select model_id, count(*) as count_result from table_1 group by model_id;
select count(boolean) + count(date) + count(int64) - count(int32) as count_result from table_1;
select region_id, device_id, model_id, count(*) from (select * from table_1 order by time) where time > 1 and time < 10 group by region_id, device_id, model_id order by region_id,device_id,model_id;
select count(*) as count_result from table_1 where time > 1 and time < 10;
select count(*) as count_result from table_1 where boolean = false and time < 8;
select count(*) as count_result from table_1 where int64 < 500;
select count(float) as count_float, count(double) as count_double from table_1;
select (count(float)) * count(int32)+2 as count1, count(double+1) as count2 from table_1;
select count(*) as count_result from table_1 where int64 is null;
select count(*) as count_result from table_1 where int64 is not null;
select count(*) as count_result from table_1 where int64 <> null;
select count(*) as count_result from table_1 where int64 != null;
select count(*) as count_result from table_1 where int64 = null;

--9. 聚合函数：sum(支持数值类型的数据类型)
--9.1 非数值的数据类型校验
select sum() from table_1; <<SQLSTATE;
select sum(region_id) from table_1; <<SQLSTATE;
select sum(device_id) from table_1; <<SQLSTATE;
select sum(model_id) from table_1; <<SQLSTATE;
select sum(boolean) from table_1; <<SQLSTATE;
select sum(text) from table_1; <<SQLSTATE;
select sum(string) from table_1; <<SQLSTATE;
select sum(date) from table_1; <<SQLSTATE;
select sum(timestamp) from table_1; <<SQLSTATE;
select sum(blob) from table_1; <<SQLSTATE;
--9.2 支持数值的数据类型
select sum(int32) as sum_result from table_1;
select sum(int64) as sum_result from table_1;
select sum(float) as sum_result from table_1;
select sum(double) as sum_result from table_1;
select model_id, sum(int32) as result1, sum(int64) as result2, sum(float) as result3, round(sum(double),2) as result4 from table_1 group by model_id;
select sum(cast(region_id as int32)) as sum_result from table_1 where region_id is not null;
select (sum(int32) + count(boolean) - count(float) + 2) as sum_result from table_1 where region_id is not null and time > 3;
select sum(cast(substring(device_id,2,1) as int32)) as sum_result from table_1 where time > 2 and time <= 10;
select sum(int32 + int64 + float + double) as sum_result from table_1;
select device_id, sum(int32) as result1, sum(int64) as result2, sum(float) as result3, sum(double) as result4 from table_1 group by device_id;
select sum(int32 * float) as total_1, (count(text)+sum(double-int64)) as total_2 from table_1 where time <= 8;
select (sum(double-int32)*2-11) as result1, sum(sum(int64)+ count(string)) as result2 from table_1 group by device_id;
<<SQLSTATE;

--10. 聚合函数：avg
--10.1 非数值的数据类型校验
select avg() from table_1; <<SQLSTATE;
select avg(region_id) from table_1; <<SQLSTATE;
select avg(device_id) from table_1; <<SQLSTATE;
select avg(model_id) from table_1; <<SQLSTATE;
select avg(boolean) from table_1; <<SQLSTATE;
select avg(text) from table_1; <<SQLSTATE;
select avg(string) from table_1; <<SQLSTATE;
select avg(date) from table_1; <<SQLSTATE;
select avg(timestamp) from table_1; <<SQLSTATE;
select avg(blob) from table_1; <<SQLSTATE;
--10.2 支持数值的数据类型
select avg(int32) as avg_result from table_1;
select avg(int64) as avg_result from table_1;
select avg(float) as avg_result from table_1;
select avg(double) as avg_result from table_1;
select device_id, avg(int32+int32+float+double) as avg_result from table_1 group by device_id;
select avg(int32*int64) as avg_result from table_1 where time >= 2 and time < 9;
select (avg(int32+int64-float+double)*2) as avg_result, round(count(*)+sum(int32+double),2) as total_result from table_1 where time < 10;
select avg(int32+double-float) as total_1, (avg(int32)+100101) as total_2, (sum(int64)+count(string)) as total_3 from table_1 where model_id = 'V2';

--11. 聚合函数：extreme
--11.1 非数值的数据类型校验
select extreme() from table_1; <<SQLSTATE;
select extreme(time) from table_1; <<SQLSTATE;
select extreme(region_id) from table_1; <<SQLSTATE;
select extreme(device_id) from table_1; <<SQLSTATE;
select extreme(model_id) from table_1; <<SQLSTATE;
select extreme(boolean) from table_1; <<SQLSTATE;
select extreme(text) from table_1; <<SQLSTATE;
select extreme(string) from table_1; <<SQLSTATE;
select extreme(date) from table_1; <<SQLSTATE;
select extreme(timestamp) from table_1; <<SQLSTATE;
select extreme(blob) from table_1; <<SQLSTATE;
--11.2 支持数值的数据类型
select extreme(int32) as extreme_result from table_1;
select extreme(int64) as extreme_result from table_1;
select extreme(float) as extreme_result from table_1;
select extreme(double) as extreme_result from table_1;
select extreme(int32) as result1, extreme(int64) as result2, extreme(float) as result3, extreme(double) as result4 from table_1 where time > 3 and time < 10;
select extreme(int32) + avg(int64) as sum_result, extreme(double)-(count(string)+2) as sub_result from table_1 where device_id='d3';

--12. 聚合函数：min（支持所有的数据类型）
select min() from table_1; <<SQLSTATE;
select min(time) as min_result from table_1;
select min(region_id) as min_result from table_1;
select min(device_id) as min_result from table_1;
select min(model_id) as min_result from table_1;
select min(boolean) as min_result from table_1;
select min(text) as min_result from table_1;
select min(string) as min_result from table_1;
select min(date) as min_result from table_1;
select min(timestamp) as min_result from table_1;
select min(blob) as min_result from table_1; 
select min(int32) as min_result from table_1;
select min(int64) as min_result from table_1;
select min(float) as min_result from table_1;
select min(double) as min_result from table_1;
select result1, result2, result1 + result2 as result3 from (
    select min(int32) AS result1, min(int64) AS result2
    from table_1
    WHERE time > 3 AND time < 10
);
select min(int64) + avg(int64) as total_result, min(double)-(count(string)+2) as sub_result from table_1 where device_id='d3';
select device_id, model_id, count(boolean) as count_result, min(float) as min_result, avg(int64) as avg_result 
	from table_1 where time > 3 and time < 10 and model_id='V1' group by device_id,model_id; 
select region_id, device_id, min(boolean),min(text),min(string),min(date),min(timestamp),min(blob)
	from table_1 group by region_id, device_id order by region_id;

--13. 聚合函数：min_by（支持所有的数据类型）
select min_by() from table_1; <<SQLSTATE;
select min_by(time) from table_1; <<SQLSTATE;
select min_by(time,region_id) as min_by_result from table_1;
select min_by(region_id,device_id) as min_by_result from table_1; 
select min_by(device_id,model_id) as min_by_result from (select time,device_id, model_id from table_1 order by time,device_id,model_id);
select min_by(model_id,boolean) as min_by_result from (select model_id,boolean from table_1 order by time) group by model_id order by min_by_result;
select min_by(boolean,text) as min_by_result from (select * from table_1 order by time);
select min_by(text,string) as min_by_result from (select * from table_1 order by time);
select min_by(string,date) as min_by_result from (select * from table_1 order by time);
select min_by(date,timestamp) as min_by_result from (select * from table_1 order by time);
select min_by(timestamp,blob) as min_by_result from (select * from table_1 order by time);
select min_by(blob,int32) as min_by_result from (select time,blob,int32 from table_1 order by time);
select min_by(timestamp,int32) as min_by_result from (select * from table_1 order by time);
select min_by(int32,int64) as min_by_result from (select * from table_1 order by time);
select min_by(int64,float) as min_by_result from (select * from table_1 order by time);
select min_by(float,double) as min_by_result from (select * from table_1 order by time);
select min_by(double,time) as min_by_result from (select * from table_1 order by time);

select min_by(time,string) as str_result,min_by(time,device_id) as device_result,min_by(time,boolean) as bool_result,min_by(time,int64) as int64_result ,count(int32+1) as count_result,avg(double+int32) avg_result from table_1 group by device_id order by device_id;

--14. 聚合函数：max（支持所有的数据类型）
select max() from table_1; <<SQLSTATE;
select max(time) as max_result from table_1;
select max(region_id) as max_result from table_1;
select max(device_id) as max_result from table_1;
select max(model_id) as max_result from table_1;
select max(boolean) as max_result from table_1;
select max(text) as max_result from table_1;
select max(string) as max_result from table_1;
select max(date) as max_result from table_1;
select max(timestamp) as max_result from table_1;
select max(blob) as max_result from table_1; 
select max(int32) as max_result from table_1;
select max(int64) as max_result from table_1;
select max(float) as max_result from table_1;
select max(double) as max_result from table_1;

select result1, result2, result1 + result2 as result3 from (
    select max(int64) AS result1, max(double) AS result2
    from (select * from table_1 order by time)
    WHERE time > 1 AND time < 10 group by time) order by result1,result2,result3;

select max(float) + avg(int32) as total_result, max(double)-(count(string)+2) as sub_result from table_1 where model_id='V1';
select device_id, model_id, count(boolean) as count_result, min(float) as min_result,
	avg(int64) as avg_result, max(int32+int64) as max_result
		from table_1 where time > 3 and time < 10 and model_id='V1' group by device_id,model_id; 

--15. 聚合函数：max_by（支持所有的数据类型）
select max_by() from table_1; <<SQLSTATE;
select max_by(time) from table_1; <<SQLSTATE;
select max_by(time,region_id) as max_by_result from table_1;
select max_by(region_id,device_id) as max_by_result from table_1;
select max_by(device_id,model_id) as max_by_result from table_1;
select max_by(model_id,boolean) as max_by_result from (select time,model_id,boolean from table_1 order by time) group by model_id;
select max_by(boolean,text) as max_by_result from (select * from table_1 order by time);
select max_by(text,string) as max_by_result from (select * from table_1 order by time);
select max_by(string,date) as max_by_result from (select * from table_1 order by time);
select max_by(date,timestamp) as max_by_result from (select * from table_1 order by time);
select max_by(timestamp,blob) as max_by_result from (select * from table_1 order by time);
select max_by(timestamp,int32) as max_by_result from (select * from table_1 order by time);
select max_by(blob,int32) as max_by_result from (select * from table_1 order by time);
select max_by(int32,int64) as max_by_result from (select * from table_1 order by time);
select max_by(int64,float) as max_by_result from (select * from table_1 order by time);
select max_by(float,double) as max_by_result from (select * from table_1 order by time);
select max_by(double,time) as max_by_result from (select * from table_1 order by time);

select max_by(time,string) as str_result,max_by(time,device_id) as device_result,max_by(time,boolean) as bool_result,max_by(time,int64) as int64_result ,count(int32+1) as count_result,avg(double+int32) avg_result from table_1 group by device_id order by device_id;

--16. 聚合函数：last（支持所有的数据类型）
select last() from table_1; <<SQLSTATE;
select last(time) as last_result from table_1;
select last(region_id) as last_result from table_1;
select last(device_id) as last_result from table_1;
select last(model_id) as last_result from table_1;
select last(boolean) as last_result from table_1;
select last(text) as last_result from table_1;
select last(string) as last_result from table_1;
select last(date) as last_result from table_1;
select last(timestamp) as last_result from table_1;
select last(blob) as last_result from table_1; 
select last(int32) as last_result from table_1;
select last(int64) as last_result from table_1;
select last(float) as last_result from table_1;
select last(double) as last_result from table_1;

select last(timestamp) as result1,max_by(double,int64) as result2,min_by(int32,time) as result3,
	avg((int32+float)-2) as result4 ,count(double-(int32+1)) as result5 
		from table_1 group by device_id order by device_id offset 2 limit 2;

--17. 聚合函数：last_by（支持所有的数据类型）
select last_by() from table_1; <<SQLSTATE;
select last_by(time) from table_1; <<SQLSTATE;
select last_by(time,region_id) as last_by_result from table_1;
select last_by(region_id,device_id) as last_by_result from table_1;
select last_by(device_id,model_id) as last_by_result from table_1;
select last_by(model_id,boolean) as last_by_result from table_1;
select last_by(boolean,text) as last_by_result from table_1;
select last_by(text,string) as last_by_result from table_1;
select last_by(string,date) as last_by_result from table_1;    
select last_by(date,timestamp) as last_by_result from table_1;
select last_by(timestamp,blob) as last_by_result from table_1; 
select last_by(blob,int32) as last_by_result from table_1;
select last_by(int32,int64) as last_by_result from table_1;
select last_by(int64,float) as last_by_result from table_1;    
select last_by(float,double) as last_by_result from table_1;
select last_by(double,time) as last_by_result from table_1; 

 select last_by(blob,timestamp) as result1, max_by(double,int64) as result2,
 		min_by(int32,time) as result3, avg((int32+float)-2) as result4 ,
 		count(double-(int32+1)) as result5,(max(int32)+min(float)-last(double)) as result6 
 			from table_1 group by device_id order by device_id offset 1 limit 2;

--18. 聚合函数：first（支持所有的数据类型）
select first() from table_1; <<SQLSTATE;
select first(time) as first_result from table_1;
select first(region_id) as first_result from table_1;
select first(device_id) as first_result from table_1;
select first(model_id) as first_result from table_1;
select first(boolean) as first_result from table_1;
select first(text) as first_result from table_1;
select first(string) as first_result from table_1;
select first(date) as first_result from table_1;
select first(timestamp) as first_result from table_1;
select first(blob) as first_result from table_1; 
select first(int32) as first_result from table_1;
select first(int64) as first_result from table_1;
select first(float) as first_result from table_1;
select first(double) as first_result from table_1;

select first(timestamp) as result1, last_by(time,device_id) as result2,
	max_by(double,int64) as result3, min_by(int32,time) as result4,
	avg((int32+float)-2) as result5 ,count(double-(int32+1)) as result6 
		from table_1 group by time,device_id order by time offset 2 limit 2;

--19. 聚合函数：first_by（支持所有的数据类型）
select first_by() from table_1; <<SQLSTATE;
select first_by(time) from table_1; <<SQLSTATE;
select first_by(time,region_id) as first_by_result from table_1;
select first_by(region_id,device_id) as first_by_result from table_1;
select first_by(device_id,model_id) as first_by_result from table_1;
select first_by(model_id,boolean) as first_by_result from table_1;
select first_by(boolean,text) as first_by_result from table_1;
select first_by(text,string) as first_by_result from table_1;
select first_by(string,date) as first_by_result from table_1;    
select first_by(date,timestamp) as first_by_result from table_1;
select first_by(timestamp,blob) as first_by_result from table_1; 
select first_by(blob,int32) as first_by_result from table_1;
select first_by(int32,int64) as first_by_result from table_1;
select first_by(int64,float) as first_by_result from table_1;    
select first_by(float,double) as first_by_result from table_1;
select first_by(double,time) as first_by_result from table_1; 

select first_by(boolean,device_id) as result1,last_by(boolean,string) as result2 from table_1 group by time,device_id;

select first_by(timestamp,device_id) as result1,last_by(boolean,string) as result2, max_by(double,int64) as result3,
 		min_by(int32,time) as result4, avg((int32+float)-2) as result5 ,
 		count(double-(int32+1)) as result6,(max(int32)+min(float)-last(double)) as result7 
 			from table_1 group by time,device_id order by time, device_id offset 1 limit 2;

--20. mode（支持所有的数据类型）
select mode() from table_1; <<SQLSTATE;
select mode(*) from table_1; <<SQLSTATE;
select mode(time) as mode_result from table_1;
select mode(region_id) as mode_result from table_1;
select mode(device_id) as mode_result from table_1;
select mode(model_id) as mode_result from table_1;
select mode(boolean) as mode_result from table_1;
select mode(text) as mode_result from table_1;
select mode(string) as mode_result from table_1;
select mode(date) as mode_result from table_1;    
select mode(timestamp) as mode_result from table_1;
select mode(blob) as mode_result from table_1; 
select mode(int32) as mode_result from table_1;
select mode(int64) as mode_result from table_1;
select mode(float) as mode_result from table_1;    
select mode(double) as mode_result from table_1;

select (mode(int32) + mode(float)) as mul_result,
	   count(*) as count_result, last(boolean) as last_bool, first(double) as first_text
	   		 from table_1 group by time,device_id order by device_id offset 2 limit 3;

--21. variance
--21.1 非数值的数据类型校验
select variance() from table_1; <<SQLSTATE;
select variance(*) from table_1; <<SQLSTATE;
select variance(time) from table_1; <<SQLSTATE;
select variance(region_id) from table_1; <<SQLSTATE;
select variance(device_id) from table_1; <<SQLSTATE;
select variance(model_id) from table_1; <<SQLSTATE;
select variance(boolean) from table_1; <<SQLSTATE;
select variance(text) from table_1; <<SQLSTATE;
select variance(string) from table_1; <<SQLSTATE;
select variance(date) from table_1; <<SQLSTATE;  
select variance(timestamp) from table_1; <<SQLSTATE;
select variance(blob) from table_1; <<SQLSTATE;
--21.2 支持数值的数据类型
select round(variance(int32),4) as var_result from (select * from table_1 order by time);
select round(variance(int64),4) as var_result from (select * from table_1 order by time);
select round(variance(float),4) as var_result from (select * from table_1 order by time);    
select round(variance(double),4) as var_result from (select * from table_1 order by time);
select round(variance(int32),4) as var_result, mode(boolean) as mode_result, count(string) as count_result 
	from (select * from table_1 order by time) group by boolean order by var_result;

--22. var_pop
--22.1 非数值的数据类型校验
select var_pop() from table_1; <<SQLSTATE;
select var_pop(*) from table_1; <<SQLSTATE;
select var_pop(time) from table_1; <<SQLSTATE;
select var_pop(region_id) from table_1; <<SQLSTATE;
select var_pop(device_id) from table_1; <<SQLSTATE;
select var_pop(model_id) from table_1; <<SQLSTATE;
select var_pop(boolean) from table_1; <<SQLSTATE;
select var_pop(text) from table_1; <<SQLSTATE;
select var_pop(string) from table_1; <<SQLSTATE;
select var_pop(date) from table_1; <<SQLSTATE;  
select var_pop(timestamp) from table_1; <<SQLSTATE;
select var_pop(blob) from table_1; <<SQLSTATE;
--22.2 支持数值的数据类型
select var_pop(int32) as var_pop_result from (select * from table_1 order by time) order by var_pop_result;
select var_pop(int64) as var_pop_result from table_1;
select round(var_pop(float),4) as var_pop_result from table_1 order by var_pop_result;
select var_pop(double) as var_pop_result from table_1;
select round(var_pop(int32),12) as var_pop_result, mode(blob) as mode_result, count(timestamp) as count_result 
	from (select * from table_1 order by time) group by model_id;

--23. var_samp
--23.1 非数值的数据类型校验
select var_samp() from table_1; <<SQLSTATE;
select var_samp(*) from table_1; <<SQLSTATE;
select var_samp(time) from table_1; <<SQLSTATE;
select var_samp(region_id) from table_1; <<SQLSTATE;
select var_samp(device_id) from table_1; <<SQLSTATE;
select var_samp(model_id) from table_1; <<SQLSTATE;
select var_samp(boolean) from table_1; <<SQLSTATE;
select var_samp(text) from table_1; <<SQLSTATE;
select var_samp(string) from table_1; <<SQLSTATE;
select var_samp(date) from table_1; <<SQLSTATE;  
select var_samp(timestamp) from table_1; <<SQLSTATE;
select var_samp(blob) from table_1; <<SQLSTATE;
--23.2 支持数值的数据类型
select round(var_samp(int32),12) as var_samp_result from table_1;
select round(var_samp(int64),4) as var_samp_result from table_1 order by var_samp_result;
select round(var_samp(float),4) as var_samp_result from table_1 order by var_samp_result;   
select var_samp(double) as var_samp_result from table_1;
select round((var_samp(int32)+var_pop(float)-variance(double)),4) as total_result,
	mode(blob) as mode_result, count(timestamp) as count_result,
	first(text) as first_result 
	from table_1 group by model_id;

--24. stddev
--24.1 非数值的数据类型校验
select stddev() from table_1; <<SQLSTATE;
select stddev(*) from table_1; <<SQLSTATE;
select stddev(time) from table_1; <<SQLSTATE;
select stddev(region_id) from table_1; <<SQLSTATE;
select stddev(device_id) from table_1; <<SQLSTATE;
select stddev(model_id) from table_1; <<SQLSTATE;
select stddev(boolean) from table_1; <<SQLSTATE;
select stddev(text) from table_1; <<SQLSTATE;
select stddev(string) from table_1; <<SQLSTATE;
select stddev(date) from table_1; <<SQLSTATE;  
select stddev(timestamp) from table_1; <<SQLSTATE;
select stddev(blob) from table_1; <<SQLSTATE;
--24.2 支持数值的数据类型
select stddev(int32) as stddev_result from table_1;
select stddev(int64) as stddev_result from table_1;
select round(stddev(float),12) as stddev_result from table_1;    
select stddev(double) as stddev_result from table_1;
select (stddev(int64)+var_pop(float)-variance(double)-var_samp(int32)-1.1) as total_result,
	mode(blob) as mode_result, count(timestamp) as count_result,
	last(boolean) as first_result 
	from table_1 group by model_id;

--25. stddev_pop
--25.1 非数值的数据类型校验
select stddev_pop() from table_1; <<SQLSTATE;
select stddev_pop(*) from table_1; <<SQLSTATE;
select stddev_pop(time) from table_1; <<SQLSTATE;
select stddev_pop(region_id) from table_1; <<SQLSTATE;
select stddev_pop(device_id) from table_1; <<SQLSTATE;
select stddev_pop(model_id) from table_1; <<SQLSTATE;
select stddev_pop(boolean) from table_1; <<SQLSTATE;
select stddev_pop(text) from table_1; <<SQLSTATE;
select stddev_pop(string) from table_1; <<SQLSTATE;
select stddev_pop(date) from table_1; <<SQLSTATE;  
select stddev_pop(timestamp) from table_1; <<SQLSTATE;
select stddev_pop(blob) from table_1; <<SQLSTATE;
--25.2 支持数值的数据类型
select stddev_pop(int32) as stddev_pop_result from table_1;
select stddev_pop(int64) as stddev_pop_result from table_1;
select round(stddev_pop(float),12) as stddev_pop_result from table_1;    
select stddev_pop(double) as stddev_pop_result from table_1;
select (stddev_pop(int64)+ stddev(int64)-var_pop(float)-variance(double)-var_samp(int32)*2) as total_result,
	mode(text) as mode_result, count(string) as count_result,
	last(boolean) as first_result 
	from table_1 group by model_id;

--26. stddev_samp
--26.1 非数值的数据类型校验
select stddev_samp() from table_1; <<SQLSTATE;
select stddev_samp(*) from table_1; <<SQLSTATE;
select stddev_samp(time) from table_1; <<SQLSTATE;
select stddev_samp(region_id) from table_1; <<SQLSTATE;
select stddev_samp(device_id) from table_1; <<SQLSTATE;
select stddev_samp(model_id) from table_1; <<SQLSTATE;
select stddev_samp(boolean) from table_1; <<SQLSTATE;
select stddev_samp(text) from table_1; <<SQLSTATE;
select stddev_samp(string) from table_1; <<SQLSTATE;
select stddev_samp(date) from table_1; <<SQLSTATE;  
select stddev_samp(timestamp) from table_1; <<SQLSTATE;
select stddev_samp(blob) from table_1; <<SQLSTATE;
--26.2 支持数值的数据类型
select stddev_samp(int32) as stddev_samp_result from table_1;
select stddev_samp(int64) as stddev_samp_result from table_1;
select round(stddev_samp(float),12) as stddev_samp_result from table_1;    
select stddev_samp(double) as stddev_samp_result from table_1;
select (stddev_samp(double)-stddev_samp(int64)+ stddev(int64)-var_pop(float)-variance(double)-var_samp(int32)) 
	as total_result,
	mode(date) as mode_result, count(boolean) as count_result,
	last(string) as first_result 
	from table_1 group by model_id;

-- 清理数据： 删除数据库 
drop database test_db;
<<NULL;
