-- [1]8:create database test
STRICT{
PASS
}
-- [1]9:use test
STRICT{
PASS
}
-- [1]10:create table table1(t1 STRING TAG, a1 STRING ATTRIBUTE, s1 TEXT FIELD, s2 INT32 FIELD, s3 INT64 FIELD, s4 FLOAT FIELD, s5 DOUBLE FIELD, s6 BOOLEAN FIELD, s7 DATE FIELD, s8 TIMESTAMP FIELD, s9 STRING FIELD, s10 BLOB FIELD)
STRICT{
PASS
}
-- [1]11:insert into table1(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(1, 't1', 'a1', 's1', 4, 4, 1.1, 1.1, true, '2020-02-29', 1970-01-01 08:00:00.005, '2025-02-01 08:01:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.353
-- [1]12:insert into table1(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(2, 't2', 'a2', 's2', 8, 8, 2.2, 2.2, false, '2025-02-02', 1970-01-01 08:00:00.015, '2025-02-02 08:02:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.118
-- [1]13:insert into table1(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(3, 't3', 'a3', 's3', 13, 13, 3.3, 3.3, true, '2025-02-03', 1970-01-01 08:00:00.025, '2025-02-03 08:03:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.19
-- [1]14:insert into table1(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(4, 't4', 'a4', 's4', 24, 24, 4.4, 4.4, true, '2025-02-04', 1970-01-01 08:00:00.035, '2025-02-04 08:04:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.20
-- [1]15:insert into table1(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(5, 't5', 'a5', 's5', 35, 35, 5.5, 5.5, true, '2021-02-28', 1970-01-01 08:00:00.045, '2025-02-05 08:05:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.12
-- [1]16:create table table2(t1 STRING TAG, a1 STRING ATTRIBUTE, s1 TEXT FIELD, s2 INT32 FIELD, s3 INT64 FIELD, s4 FLOAT FIELD, s5 DOUBLE FIELD, s6 BOOLEAN FIELD, s7 DATE FIELD, s8 TIMESTAMP FIELD, s9 STRING FIELD, s10 BLOB FIELD)
STRICT{
PASS
}
-- [1]17:insert into table2(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(1, 't1', 'a1', 's1', null, null, 1.1, 1.1, null, '2020-02-29', 1970-01-01 08:00:00.005, '2025-02-01 08:01:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.12
-- [1]18:insert into table2(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(2, null, 'a2', 's2', null, null, 2.2, null, false, null, 1970-01-01 08:00:00.015, '2025-02-02 08:02:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.11
-- [1]19:insert into table2(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(3, 't3', null, 's3', null, null, null, 3.3, true, '2025-02-03', null, '2025-02-03 08:03:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.10
-- [1]20:insert into table2(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(4, 't4', 'a4', null, null, null, 4.4, 4.4, true, '2025-02-04', 1970-01-01 08:00:00.035, null, null)
STRICT{
0
}

Elapsed Time: 0.0.14
-- [1]21:insert into table2(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(5, 't5', 'a5', 's5', null, null, 5.5, 5.5, true, '2021-02-28', 1970-01-01 08:00:00.045, '2025-02-05 08:05:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.11
-- [1]22:create table table3(t1 STRING TAG, a1 STRING ATTRIBUTE, s1 TEXT FIELD, s2 INT32 FIELD, s3 INT64 FIELD, s4 FLOAT FIELD, s5 DOUBLE FIELD, s6 BOOLEAN FIELD, s7 DATE FIELD, s8 TIMESTAMP FIELD, s9 STRING FIELD, s10 BLOB FIELD)
STRICT{
PASS
}
-- [1]23:insert into table3(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(1, 't1', 'a1', 's1', 4, 4, 1.1, 1.1, true, '2020-02-29', 1970-01-01 08:00:00.005, '2025-02-01 08:01:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.13
-- [1]24:insert into table3(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(2, 't2', 'a2', 's2', 200, -2, 2.2, 2.2, false, '2025-02-02', 1970-01-01 08:00:00.015, '2025-02-02 08:02:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.9
-- [1]25:insert into table3(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(3, 't3', 'a3', 's3', -3, 30000, 3.3, 3.3, true, '2025-02-03', 1970-01-01 08:00:00.025, '2025-02-03 08:03:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.16
-- [1]26:insert into table3(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(4, 't4', 'a4', 's4', 40000, -4000, 4.4, 4.4, true, '2025-02-04', 1970-01-01 08:00:00.035, '2025-02-04 08:04:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.23
-- [1]27:insert into table3(time, t1, a1, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10) values(5, 't5', 'a5', 's5', -5000, 50000, 5.5, 5.5, true, '2021-02-28', 1970-01-01 08:00:00.045, '2025-02-05 08:05:59.123456789', null)
STRICT{
0
}

Elapsed Time: 0.0.16

-- [1]31:select bit_count(9, 64) from table1
STRICT{
_col0(INT64)      |
------------------
2                 |
------------------
2                 |
------------------
2                 |
------------------
2                 |
------------------
2                 |
总数目：5
}

Elapsed Time: 0.0.26

-- [1]32:select bit_count(1970-01-01 08:00:00.005, 8) from table1
STRICT{
_col0(INT64)      |
------------------
2                 |
------------------
2                 |
------------------
2                 |
------------------
2                 |
------------------
2                 |
总数目：5
}

Elapsed Time: 0.0.21

-- [1]35:select bit_count(s2, 8) from table2 order by time
STRICT{
_col0(INT64)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.16

-- [1]36:select bit_count(8, s2) from table2 order by time
STRICT{
_col0(INT64)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.53

-- [1]37:select bit_count(s3, 8) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
1                 |
------------------
1                 |
------------------
3                 |
------------------
2                 |
------------------
3                 |
总数目：5
}

Elapsed Time: 0.0.26

-- [1]38:select bit_count(5, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
2                 |
------------------
2                 |
------------------
2                 |
------------------
2                 |
------------------
2                 |
总数目：5
}

Elapsed Time: 0.0.23

-- [1]39:select bit_count(s2, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
1                 |
------------------
1                 |
------------------
3                 |
------------------
2                 |
------------------
3                 |
总数目：5
}

Elapsed Time: 0.0.25

-- [1]40:select bit_count(s3, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
1                 |
------------------
1                 |
------------------
3                 |
------------------
2                 |
------------------
3                 |
总数目：5
}

Elapsed Time: 0.0.19

-- [1]41:select bit_count(s2, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
1                 |
------------------
1                 |
------------------
3                 |
------------------
2                 |
------------------
3                 |
总数目：5
}

Elapsed Time: 0.0.19

-- [1]42:select bit_count(s3, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
1                 |
------------------
1                 |
------------------
3                 |
------------------
2                 |
------------------
3                 |
总数目：5
}

Elapsed Time: 0.0.22
-- [1]44:select bit_count(5, 1) from table1
STRICT{
SQLSTATE : 701: Argument exception, the scalar function bit_count bits must be between 2 and 64.
}
-- [1]46:select bit_count(5, 2) from table1
STRICT{
SQLSTATE : 701: Argument exception, the scalar function num must be representable with the bits specified. 5 cannot be represented with 2 bits.
}
-- [1]48:select bit_count(-5, 3) from table1
STRICT{
SQLSTATE : 701: Argument exception, the scalar function num must be representable with the bits specified. -5 cannot be represented with 3 bits.
}
-- [1]50:select bit_count(5.5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]52:select bit_count('5', 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]54:select bit_count(null, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]56:select bit_count(true, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]58:select bit_count(s1, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]60:select bit_count(s4, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]62:select bit_count(s5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]64:select bit_count(s6, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]66:select bit_count(s7, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]68:select bit_count(s9, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]70:select bit_count(s10, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]72:select bit_count(5, s1) from table1
STRICT{
SQLSTATE : 701: Scalar function bit_count only accepts two arguments and they must be Int32 or Int64 data type.
}

-- [1]76:select bitwise_and(19,25) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
17                |
------------------
17                |
------------------
17                |
------------------
17                |
------------------
17                |
总数目：5
}

Elapsed Time: 0.0.26

-- [1]77:select bitwise_and(1970-01-01 08:00:00.005, 8) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.21

-- [1]80:select bitwise_and(s2, 8) from table2 order by time
STRICT{
_col0(INT64)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.14

-- [1]81:select bitwise_and(8, s2) from table2 order by time
STRICT{
_col0(INT64)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.26

-- [1]82:select bitwise_and(s3, 8) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
8                 |
------------------
8                 |
------------------
8                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]83:select bitwise_and(5, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
4                 |
------------------
0                 |
------------------
5                 |
------------------
0                 |
------------------
1                 |
总数目：5
}

Elapsed Time: 0.0.9

-- [1]84:select bitwise_and(s2, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
4                 |
------------------
8                 |
------------------
13                |
------------------
24                |
------------------
35                |
总数目：5
}

Elapsed Time: 0.0.11

-- [1]85:select bitwise_and(s3, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
4                 |
------------------
8                 |
------------------
13                |
------------------
24                |
------------------
35                |
总数目：5
}

Elapsed Time: 0.0.12

-- [1]86:select bitwise_and(s2, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
4                 |
------------------
8                 |
------------------
13                |
------------------
24                |
------------------
35                |
总数目：5
}

Elapsed Time: 0.0.9

-- [1]87:select bitwise_and(s3, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
4                 |
------------------
8                 |
------------------
13                |
------------------
24                |
------------------
35                |
总数目：5
}

Elapsed Time: 0.0.10
-- [1]89:select bitwise_and(5.5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]91:select bitwise_and('5', 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]93:select bitwise_and(null, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]95:select bitwise_and(true, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]97:select bitwise_and(s1, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]99:select bitwise_and(s4, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]101:select bitwise_and(s5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]103:select bitwise_and(s6, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]105:select bitwise_and(s7, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]107:select bitwise_and(s9, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]109:select bitwise_and(s10, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]111:select bitwise_and(5, s1) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_and only accepts two arguments and they must be Int32 or Int64 data type.
}

-- [1]115:select bitwise_not(19) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
-20               |
------------------
-20               |
------------------
-20               |
------------------
-20               |
------------------
-20               |
总数目：5
}

Elapsed Time: 0.0.13

-- [1]116:select bitwise_not(1970-01-01 08:00:00.0019) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
-2                |
------------------
-2                |
------------------
-2                |
------------------
-2                |
------------------
-2                |
总数目：5
}

Elapsed Time: 0.0.12

-- [1]118:select bitwise_not(s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
-5                |
------------------
-9                |
------------------
-14               |
------------------
-25               |
------------------
-36               |
总数目：5
}

Elapsed Time: 0.0.9

-- [1]119:select bitwise_not(s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
-5                |
------------------
-9                |
------------------
-14               |
------------------
-25               |
------------------
-36               |
总数目：5
}

Elapsed Time: 0.0.9
-- [1]121:select bitwise_not(8, 64) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]123:select bitwise_not(-5, 3) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]125:select bitwise_not(5.5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]127:select bitwise_not('5', 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]129:select bitwise_not(null, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]131:select bitwise_not(true, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]133:select bitwise_not(s1, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]135:select bitwise_not(s4, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]137:select bitwise_not(s5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]139:select bitwise_not(s6, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]141:select bitwise_not(s7, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]143:select bitwise_not(s9, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]145:select bitwise_not(s10, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}
-- [1]147:select bitwise_not(5, s1) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_not only accepts one argument and it must be Int32 or Int64 data type.
}

-- [1]151:select bitwise_or(19,25) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
27                |
------------------
27                |
------------------
27                |
------------------
27                |
------------------
27                |
总数目：5
}

Elapsed Time: 0.0.14

-- [1]152:select bitwise_or(1970-01-01 08:00:00.005, 8) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
13                |
------------------
13                |
------------------
13                |
------------------
13                |
------------------
13                |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]155:select bitwise_or(s2, 8) from table2 order by time
STRICT{
_col0(INT64)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]156:select bitwise_or(8, s2) from table2 order by time
STRICT{
_col0(INT64)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.9

-- [1]157:select bitwise_or(s3, 8) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
12                |
------------------
8                 |
------------------
13                |
------------------
24                |
------------------
43                |
总数目：5
}

Elapsed Time: 0.0.9

-- [1]158:select bitwise_or(5, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
5                 |
------------------
13                |
------------------
13                |
------------------
29                |
------------------
39                |
总数目：5
}

Elapsed Time: 0.0.11

-- [1]159:select bitwise_or(s2, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
4                 |
------------------
8                 |
------------------
13                |
------------------
24                |
------------------
35                |
总数目：5
}

Elapsed Time: 0.0.9

-- [1]160:select bitwise_or(s3, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
4                 |
------------------
8                 |
------------------
13                |
------------------
24                |
------------------
35                |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]161:select bitwise_or(s2, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
4                 |
------------------
8                 |
------------------
13                |
------------------
24                |
------------------
35                |
总数目：5
}

Elapsed Time: 0.0.20

-- [1]162:select bitwise_or(s3, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
4                 |
------------------
8                 |
------------------
13                |
------------------
24                |
------------------
35                |
总数目：5
}

Elapsed Time: 0.0.13
-- [1]164:select bitwise_or(5.5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]166:select bitwise_or('5', 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]168:select bitwise_or(null, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]170:select bitwise_or(true, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]172:select bitwise_or(s1, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]174:select bitwise_or(s4, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]176:select bitwise_or(s5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]178:select bitwise_or(s6, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]180:select bitwise_or(s7, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]182:select bitwise_or(s9, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]184:select bitwise_or(s10, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]186:select bitwise_or(5, s1) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_or only accepts two arguments and they must be Int32 or Int64 data type.
}

-- [1]190:select bitwise_xor(19,25) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
10                |
------------------
10                |
------------------
10                |
------------------
10                |
------------------
10                |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]191:select bitwise_xor(1970-01-01 08:00:00.005, 8) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
13                |
------------------
13                |
------------------
13                |
------------------
13                |
------------------
13                |
总数目：5
}

Elapsed Time: 0.0.16

-- [1]194:select bitwise_xor(s2, 8) from table2 order by time
STRICT{
_col0(INT64)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.11

-- [1]195:select bitwise_xor(8, s2) from table2 order by time
STRICT{
_col0(INT64)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.13

-- [1]196:select bitwise_xor(s3, 8) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
12                |
------------------
0                 |
------------------
5                 |
------------------
16                |
------------------
43                |
总数目：5
}

Elapsed Time: 0.0.9

-- [1]197:select bitwise_xor(5, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
1                 |
------------------
13                |
------------------
8                 |
------------------
29                |
------------------
38                |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]198:select bitwise_xor(s2, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.11

-- [1]199:select bitwise_xor(s3, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]200:select bitwise_xor(s2, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]201:select bitwise_xor(s3, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.18
-- [1]203:select bitwise_xor(5.5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]205:select bitwise_xor('5', 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]207:select bitwise_xor(null, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]209:select bitwise_xor(true, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]211:select bitwise_xor(s1, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]213:select bitwise_xor(s4, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]215:select bitwise_xor(s5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]217:select bitwise_xor(s6, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]219:select bitwise_xor(s7, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]221:select bitwise_xor(s9, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]223:select bitwise_xor(s10, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]225:select bitwise_xor(5, s1) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_xor only accepts two arguments and they must be Int32 or Int64 data type.
}

-- [1]229:select bitwise_left_shift(19,25) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]230:select bitwise_left_shift(1970-01-01 08:00:00.005, 8) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]233:select bitwise_left_shift(s2, 8) from table2 order by time
STRICT{
_col0(INT32)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.9

-- [1]234:select bitwise_left_shift(8, s2) from table2 order by time
STRICT{
_col0(INT32)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.19

-- [1]235:select bitwise_left_shift(s3, 8) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]236:select bitwise_left_shift(5, s2) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
80                |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.11

-- [1]237:select bitwise_left_shift(s2, s2) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
64                |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]238:select bitwise_left_shift(s3, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
64                |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]239:select bitwise_left_shift(s2, s3) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
64                |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]240:select bitwise_left_shift(s3, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
64                |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.13
-- [1]242:select bitwise_left_shift(5.5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]244:select bitwise_left_shift('5', 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]246:select bitwise_left_shift(null, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]248:select bitwise_left_shift(true, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]250:select bitwise_left_shift(s1, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]252:select bitwise_left_shift(s4, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]254:select bitwise_left_shift(s5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]256:select bitwise_left_shift(s6, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]258:select bitwise_left_shift(s7, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]260:select bitwise_left_shift(s9, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]262:select bitwise_left_shift(s10, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]264:select bitwise_left_shift(5, s1) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_left_shift only accepts two arguments and they must be Int32 or Int64 data type.
}

-- [1]268:select bitwise_right_shift(19,25) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.14

-- [1]269:select bitwise_right_shift(1970-01-01 08:00:00.005, 8) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]272:select bitwise_right_shift(s2, 8) from table2 order by time
STRICT{
_col0(INT32)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.18

-- [1]273:select bitwise_right_shift(8, s2) from table2 order by time
STRICT{
_col0(INT32)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.10

-- [1]274:select bitwise_right_shift(s3, 8) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]275:select bitwise_right_shift(5, s2) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.9

-- [1]276:select bitwise_right_shift(s2, s2) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]277:select bitwise_right_shift(s3, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.11

-- [1]278:select bitwise_right_shift(s2, s3) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]279:select bitwise_right_shift(s3, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.8
-- [1]281:select bitwise_right_shift(5.5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]283:select bitwise_right_shift('5', 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]285:select bitwise_right_shift(null, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]287:select bitwise_right_shift(true, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]289:select bitwise_right_shift(s1, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]291:select bitwise_right_shift(s4, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]293:select bitwise_right_shift(s5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]295:select bitwise_right_shift(s6, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]297:select bitwise_right_shift(s7, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]299:select bitwise_right_shift(s9, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]301:select bitwise_right_shift(s10, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]303:select bitwise_right_shift(5, s1) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift only accepts two arguments and they must be Int32 or Int64 data type.
}

-- [1]307:select bitwise_right_shift_arithmetic(19,25) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]308:select bitwise_right_shift_arithmetic(1970-01-01 08:00:00.005, 8) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]311:select bitwise_right_shift_arithmetic(s2, 8) from table2 order by time
STRICT{
_col0(INT32)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]312:select bitwise_right_shift_arithmetic(8, s2) from table2 order by time
STRICT{
_col0(INT32)      |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
------------------
null              |
总数目：5
}

Elapsed Time: 0.0.7

-- [1]313:select bitwise_right_shift_arithmetic(s3, 8) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.7

-- [1]314:select bitwise_right_shift_arithmetic(5, s2) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.8

-- [1]315:select bitwise_right_shift_arithmetic(s2, s2) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.7

-- [1]316:select bitwise_right_shift_arithmetic(s3, s3) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.7

-- [1]317:select bitwise_right_shift_arithmetic(s2, s3) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.7

-- [1]318:select bitwise_right_shift_arithmetic(s3, s2) from table1 order by time
STRICT{
_col0(INT64)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.7
-- [1]320:select bitwise_right_shift_arithmetic(5.5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]322:select bitwise_right_shift_arithmetic('5', 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]324:select bitwise_right_shift_arithmetic(null, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]326:select bitwise_right_shift_arithmetic(true, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]328:select bitwise_right_shift_arithmetic(s1, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]330:select bitwise_right_shift_arithmetic(s4, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]332:select bitwise_right_shift_arithmetic(s5, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]334:select bitwise_right_shift_arithmetic(s6, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]336:select bitwise_right_shift_arithmetic(s7, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]338:select bitwise_right_shift_arithmetic(s9, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]340:select bitwise_right_shift_arithmetic(s10, 8) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}
-- [1]342:select bitwise_right_shift_arithmetic(5, s1) from table1
STRICT{
SQLSTATE : 701: Scalar function bitwise_right_shift_arithmetic only accepts two arguments and they must be Int32 or Int64 data type.
}

-- [1]346:select bit_count(5, bit_count(15, 8)) from table1
STRICT{
_col0(INT64)      |
------------------
2                 |
------------------
2                 |
------------------
2                 |
------------------
2                 |
------------------
2                 |
总数目：5
}

Elapsed Time: 0.0.6

-- [1]347:select bitwise_left_shift(-2147483648,2147483647) from table1 order by time
STRICT{
_col0(INT32)      |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
------------------
0                 |
总数目：5
}

Elapsed Time: 0.0.7
-- [1]350:drop database test
STRICT{
PASS
}
